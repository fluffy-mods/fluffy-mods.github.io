{"version":3,"sources":["utils.ts","mod-builder.ts","components/DownloadButton.tsx","components/Error.tsx","components/Input.tsx","components/About.tsx","components/FetchButton.tsx","components/TexturePreview.tsx","components/UploadButton.tsx","components/Switch.tsx","components/TextureSize.tsx","data/defs.ts","components/TextureStuff.tsx","components/Texture.tsx","data/defaults.ts","data/enums.ts","components/CostList.tsx","components/StatList.tsx","components/StringList.tsx","components/StringWithDefaults.tsx","components/FloorSettings.tsx","components/FloorBasics.tsx","components/Floor.tsx","components/TabManager.tsx","StuffedFloorModGenerator.tsx","index.tsx"],"names":["alphanumericRegex","sanitizeString","str","replace","elementSize","element","computedStyle","getComputedStyle","width","clientWidth","height","clientHeight","parseFloat","paddingTop","paddingBottom","paddingLeft","paddingRight","unwrapErrors","object","schema","validateSync","abortEarly","err","ValidationError","errors","inner","error","set","path","message","errorArray","errorObject","msgs","key","Object","prototype","hasOwnProperty","call","el","push","Array","isArray","forEach","e","isObject","aboutTemplate","handlebars","compile","floorDefTemplate","RenderAbout","about","validationErrors","packageId","RenderFloors","floors","BuildMod","a","zip","jszip","modFolder","name","aboutXml","file","floorXml","floor","texture","out","defName","generateAsync","type","DownloadButton","observer","id","className","classNames","button","this","building","onClick","download","Component","observable","action","props","some","isEmpty","submitting","console","log","map","truthy","archive","saveAs","Error","touched","get","Input","label","small","inputProps","Element","React","cloneElement","onBlur","htmlFor","About","author","AboutSchema","computed","yup","required","description","url","AboutComponent","value","onChange","target","FetchButton","inputRef","createRef","style","marginTop","ref","onSubmit","input","current","fetch","result","blob","setTexture","TexturePreview","canvasRef","componentDidUpdate","canvas","mirror","settings","availableSize","parentElement","createImageBitmap","textureData","ctx","getContext","globalCompositeOperation","Math","min","scale","sw","sh","drawImage","preview","fillStyle","previewColor","fillRect","grid","setLineDash","x","moveTo","lineTo","y","strokeStyle","lineWidth","stroke","data-rendering","rendering","data-revision","revision","UploadButton","accept","loadTexture","PureComponent","event","files","length","Switch","checked","switch","TextureSize","toggleSetting","updateSetting","raw","size","tile","tilesX","tilesY","alignItems","rounded","outlined","ev","parseInt","stuffCategories","stuffs","Metallic","def","color","Woody","Stony","Fabric","Leathery","affordances","tags","researchDefs","burnedFloorDefs","buildingMaterials","stats","TextureStuff","backgroundColor","options","find","o","defaultValue","classNamePrefix","flatten","cat","s","TextureSchema","shape","when","is","then","test","Texture","setRawSize","image","setTiles","renderCanvas","document","createElement","updateTextureDebounced","debounce","updateTexture","trailing","leading","maxWait","contrast","brightness","desaturate","autorun","rawData","filter","dest","toBlob","setting","TextureComponent","position","top","marginBottom","undefined","index","step","max","simpleMode_materials","simpleMode_stuffCategories","Stone","Wood","Metal","Cloth","simpleMode_type","simpleMode_stuffCost","Basic","Pretty","Royal","simpleMode_tags","simpleMode_researchPrerequisites","simpleMode_burnedTerrain","simpleMode_stats","edgeTypes","CostList","costs","defCount","cost","onDelete","delete","add","msg","Set","costCount","removing","findIndex","splice","Cost","placeholder","toString","blank","list","StatList","stat","statCount","Stat","valueTemp","updateValue","applyValue","StringList","selected","isMulti","handleChange","uniq","_value","meta","clear","option","newOptions","v","indexOf","removedValue","StringWithDefaults","selectedOption","opts","noneOption","updateSelected","FloorSettings","detailed","simple","setMaterial","setType","toggleDetailed","material","resetFloor","FloorSettings_Detail","stuffcost","d","researchPrerequisites","burnedDef","edgeType","_option","edge","terrainAffordanceNeeded","FloorSettings_Simple","mat","FloorBasics","DefSchema","trim","matches","CostSchema","moreThan","StatSchema","FloorSchema","of","stuffCost","integer","positive","Floor","floorCount","array","FloorComponent","random","TabManager","tab","onTabChange","removeFloor","addFloor","FloorStore","f","remove","DeleteX","viewBox","aria-hidden","focusable","box","StuffedFloorModGenerator","changeTab","m","i","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.22851fa2.chunk.js","sourcesContent":["import { isObject } from \"lodash\";\r\nimport set from \"lodash/set\";\r\nimport { Schema, ValidationError } from \"yup\";\r\n\r\nconst alphanumericRegex = /[^a-z0-9_]+/gi;\r\nexport const sanitizeString = (str: string): string => {\r\n    return str.replace(alphanumericRegex, \"\");\r\n};\r\n\r\n// https://stackoverflow.com/a/56531945\r\nexport const elementSize = (element: HTMLElement) => {\r\n    var computedStyle = getComputedStyle(element);\r\n\r\n    let width = element.clientWidth; // width with padding\r\n    let height = element.clientHeight; // height with padding\r\n\r\n    height -=\r\n        parseFloat(computedStyle.paddingTop) +\r\n        parseFloat(computedStyle.paddingBottom);\r\n    width -=\r\n        parseFloat(computedStyle.paddingLeft) +\r\n        parseFloat(computedStyle.paddingRight);\r\n    return { height, width };\r\n};\r\n\r\nexport type ValidationErrors<T> = {\r\n    [K in keyof Partial<T>]: T[K] extends any[]\r\n        ? ValidationErrors<T[K][number]>[]\r\n        : string;\r\n};\r\n\r\nexport function unwrapErrors<T>(\r\n    object: T,\r\n    schema: Schema<any, T>\r\n): ValidationErrors<T> {\r\n    try {\r\n        schema.validateSync(object, { abortEarly: false });\r\n    } catch (err) {\r\n        if (err instanceof ValidationError) {\r\n            const errors = {} as ValidationErrors<T>;\r\n            for (const error of err.inner) {\r\n                set(errors, error.path, error.message);\r\n            }\r\n            return errors;\r\n        }\r\n    }\r\n    return {} as ValidationErrors<T>;\r\n}\r\n\r\nexport function errorArray(errorObject: any): string[] {\r\n    const msgs: string[] = [];\r\n    if (!errorObject) return msgs;\r\n    for (const key in errorObject) {\r\n        if (Object.prototype.hasOwnProperty.call(errorObject, key)) {\r\n            const el = errorObject[key];\r\n            if (typeof el === \"string\") {\r\n                msgs.push(el);\r\n            }\r\n            if (Array.isArray(el)) {\r\n                el.forEach((e) => msgs.push(...errorArray(e)));\r\n            }\r\n            if (isObject(el)) {\r\n                msgs.push(...errorArray(el));\r\n            }\r\n        }\r\n    }\r\n\r\n    return msgs;\r\n}\r\n","import handlebars from \"handlebars\";\r\nimport raw from \"raw.macro\";\r\nimport { About } from \"./components/About\";\r\nimport jszip from \"jszip\";\r\nimport { FloorStore } from \"./StuffedFloorModGenerator\";\r\nimport { sanitizeString } from \"./utils\";\r\n\r\nconst aboutTemplate = handlebars.compile<About>(raw(\"./templates/About.xml\"));\r\nconst floorDefTemplate = handlebars.compile<FloorStore>(\r\n    raw(\"./templates/StuffedFloorDefs.xml\")\r\n);\r\n\r\nfunction RenderAbout(about: About) {\r\n    return aboutTemplate({\r\n        ...about,\r\n        validationErrors: about.validationErrors,\r\n        packageId: about.packageId,\r\n    });\r\n}\r\n\r\nfunction RenderFloors(floors: FloorStore) {\r\n    return floorDefTemplate(floors);\r\n}\r\n\r\nexport async function BuildMod(about: About, floors: FloorStore) {\r\n    const zip = new jszip();\r\n    const modFolder = sanitizeString(about.name);\r\n    const aboutXml = RenderAbout(about);\r\n    zip.file(`${modFolder}/About/About.xml`, aboutXml);\r\n\r\n    const floorXml = RenderFloors(floors);\r\n    zip.file(`${modFolder}/Defs/Floors.xml`, floorXml);\r\n\r\n    for (const floor of floors.floors) {\r\n        if (floor.texture?.out)\r\n            zip.file(\r\n                `${modFolder}/Textures/Floors/${floor.defName}.png`,\r\n                floor.texture.out.texture\r\n            );\r\n    }\r\n\r\n    return await zip.generateAsync({ type: \"blob\" });\r\n}\r\n","import React, { Component } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport { observer } from \"mobx-react\";\nimport { action, observable } from \"mobx\";\nimport { FloorStore, submitting } from \"../StuffedFloorModGenerator\";\nimport { About } from \"./About\";\nimport { BuildMod } from \"../mod-builder\";\nimport classNames from \"classnames\";\nimport isEmpty from \"lodash/isEmpty\";\n\ninterface DownloadButtonProps {\n    floors: FloorStore;\n    about: About;\n}\n\n@observer\nexport default class DownloadButton extends Component<DownloadButtonProps> {\n    @observable building = false;\n\n    @action\n    download = async () => {\n        const { floors, about } = this.props;\n        if (\n            floors.floors.some((floor) => !isEmpty(floor.validationErrors)) ||\n            !isEmpty(about.validationErrors)\n        ) {\n            submitting.set(true);\n            console.log({\n                floors: floors.floors.map((floor) => floor.validationErrors),\n                about: about.validationErrors,\n                truthy: {\n                    floors: floors.floors.some(\n                        (floor) => !isEmpty(floor.validationErrors)\n                    ),\n                    about: !isEmpty(about.validationErrors),\n                },\n            });\n            return;\n        } else {\n            this.building = true;\n        }\n        const archive = await BuildMod(about, floors);\n        saveAs(archive, `${this.props.about.name}.zip`);\n        this.building = false;\n    };\n\n    render() {\n        return (\n            <div id=\"download-frame\">\n                <button\n                    className={classNames({\n                        button: true,\n                        \"is-primary\": true,\n                        \"is-loading\": this.building,\n                    })}\n                    onClick={this.download}\n                >\n                    Download Mod\n                </button>\n            </div>\n        );\n    }\n}\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { submitting } from \"../StuffedFloorModGenerator\";\r\n\r\nexport interface ErrorProps {\r\n    error?: string;\r\n    touched: boolean;\r\n}\r\n\r\n@observer\r\nexport class Error extends Component<ErrorProps> {\r\n    render() {\r\n        const { touched, error } = this.props;\r\n        return (\r\n            ((touched || submitting.get()) && error && (\r\n                <div className=\"error\">{error}</div>\r\n            )) ||\r\n            null\r\n        );\r\n    }\r\n}\r\n","import { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component, InputHTMLAttributes } from \"react\";\nimport { Error } from \"./Error\";\n\ninterface InputProps\n    extends InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement> {\n    label: string;\n    error?: string;\n    element?: any;\n    small?: boolean;\n}\n\n@observer\nexport default class Input extends Component<InputProps> {\n    @observable touched = false;\n\n    @action onBlur = () => {\n        this.touched = true;\n    };\n\n    render() {\n        const { id, label, error, element, small, ...inputProps } = this.props;\n\n        const Element = element ? (\n            React.cloneElement(element, {\n                ...inputProps,\n                id,\n                onBlur: this.onBlur,\n            })\n        ) : (\n            <input\n                className=\"input\"\n                {...inputProps}\n                id={id}\n                onBlur={this.onBlur}\n            />\n        );\n\n        if (small) {\n            return (\n                <div className=\"field is-horizontal\">\n                    <div className=\"field-label is-small\">\n                        <label htmlFor={id} className=\"label\">\n                            {label}\n                        </label>\n                    </div>\n                    <div className=\"field-body\">\n                        <div className=\"control\">{Element}</div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"field\">\n                    <label htmlFor={id} className=\"label\">\n                        {label}\n                    </label>\n                    <div className=\"control\">{Element}</div>\n                    <Error touched={this.touched} error={error} />\n                </div>\n            );\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { computed, observable } from \"mobx\";\nimport { sanitizeString, unwrapErrors } from \"../utils\";\nimport * as yup from \"yup\";\nimport Input from \"./Input\";\n\ninterface AboutProps {\n    about: About;\n}\n\nexport class About {\n    @observable name: string = \"\";\n    @observable description: string = \"\";\n    @observable author: string = \"\";\n    @observable url: string = \"\";\n\n    @computed get packageId() {\n        return sanitizeString(this.author) + \".\" + sanitizeString(this.name);\n    }\n\n    @computed get validationErrors() {\n        return unwrapErrors<About>(this, AboutSchema);\n    }\n}\n\nexport const AboutSchema = yup.object({\n    name: yup.string().required(),\n    description: yup.string().required(),\n    author: yup.string().required(),\n    url: yup.string().url(),\n    packageId: yup.string().required(),\n});\n\n@observer\nexport default class AboutComponent extends Component<AboutProps> {\n    render() {\n        const {\n            name,\n            description,\n            author,\n            url,\n            validationErrors: errors,\n        } = this.props.about;\n        return (\n            <div id=\"about\">\n                <Input\n                    label=\"Mod Name\"\n                    id=\"mod.name\"\n                    value={name}\n                    onChange={(e) => (this.props.about.name = e.target.value)}\n                    error={errors.name}\n                />\n                <Input\n                    label=\"Mod Description\"\n                    id=\"mod.desc\"\n                    value={description}\n                    onChange={(e) =>\n                        (this.props.about.description = e.target.value)\n                    }\n                    error={errors.description}\n                    element={<textarea className=\"textarea\" />}\n                />\n                <Input\n                    label=\"Author\"\n                    id=\"mod.author\"\n                    value={author}\n                    onChange={(e) => (this.props.about.author = e.target.value)}\n                    error={errors.author}\n                />\n                <Input\n                    label=\"Link\"\n                    id=\"mod.url\"\n                    value={url}\n                    onChange={(e) => (this.props.about.url = e.target.value)}\n                    error={errors.url}\n                />\n            </div>\n        );\n    }\n}\n","import { action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component, createRef } from \"react\";\nimport { TextureLoaderProps } from \"./Floor\";\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n\n@observer\nexport default class FetchButton extends Component<TextureLoaderProps> {\n    inputRef = createRef<HTMLInputElement>();\n\n    @action\n    onSubmit = async () => {\n        const input = this.inputRef.current;\n        if (!input) return;\n\n        try {\n            const result = await fetch(CORS_PROXY + input.value);\n            const blob = await result.blob();\n            this.props.setTexture(blob);\n        } catch (err) {\n            console.error(`Error fetching ${input.value}: \\n${err}`);\n        }\n    };\n\n    render() {\n        return (\n            <div\n                className=\"field has-addons is-fullwidth\"\n                style={{ marginTop: \"1em\" }}\n            >\n                <div className=\"control is-expanded\">\n                    <input\n                        type=\"text\"\n                        className=\"input\"\n                        ref={this.inputRef}\n                        name=\"url\"\n                        id=\"url\"\n                    />\n                </div>\n                <div className=\"control\">\n                    <button\n                        className=\"button is-info fetch-button\"\n                        onClick={this.onSubmit}\n                    >\n                        Fetch\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import { observer } from \"mobx-react\";\nimport React, { Component, createRef } from \"react\";\nimport { elementSize } from \"../utils\";\nimport { Texture } from \"./Texture\";\n\nexport interface TextureProps {\n    texture: Texture;\n}\n\n@observer\nexport default class TexturePreview extends Component<Partial<TextureProps>> {\n    canvasRef = createRef<HTMLCanvasElement>();\n\n    // todo: split into processing and render logic parts.\n    // processing:\n    // - take raw, and using the various settings create out.\n    // - tile/stretch/both when needed to get to 1024 x 1024\n    // - out is used as actual texture\n    // rendering:\n    // - take out, and render it in available area as preview.\n    // - overlay tiling and cell previews\n    componentDidUpdate = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas || !this.props.texture?.out) return;\n        const { mirror } = this.props.texture.settings;\n        const availableSize = elementSize(canvas.parentElement!);\n        const textureData = await createImageBitmap(\n            this.props.texture.out.texture\n        );\n\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.globalCompositeOperation = \"source-over\";\n        canvas.width = Math.min(textureData.width, availableSize.width);\n        const scale = canvas.width / textureData.width;\n        canvas.height = textureData.height * scale;\n        ctx.scale(scale, scale);\n\n        if (mirror) {\n            const sw = textureData.width / 2,\n                sh = textureData.height / 2;\n\n            // render each quadrant in the opposite quadrant\n            ctx.drawImage(textureData, sw, sh, sw, sh, 0, 0, sw, sw); // br -> tl\n            ctx.drawImage(textureData, 0, sh, sw, sh, sw, 0, sw, sw); // bl -> tr\n            ctx.drawImage(textureData, 0, 0, sw, sh, sw, sw, sw, sw); // tl -> br\n            ctx.drawImage(textureData, sw, 0, sw, sh, 0, sw, sw, sw); // tr -> bl\n        } else {\n            // just render source in canvas\n            ctx.drawImage(textureData, 0, 0);\n        }\n\n        // stuff preview overlay\n        if (this.props.texture.settings.preview) {\n            ctx.globalCompositeOperation = \"multiply\";\n            ctx.fillStyle = this.props.texture.settings.previewColor;\n            ctx.fillRect(0, 0, textureData.width, textureData.height);\n        }\n\n        // game cells preview / overlay\n        ctx.globalCompositeOperation = \"source-over\";\n        if (this.props.texture.settings.grid) {\n            const width = textureData.width / 16;\n            const height = textureData.height / 16;\n            ctx.setLineDash([5]);\n            for (let x = 0; x < 16; x++) {\n                // vertical lines\n                ctx.moveTo(x * width - 1, 0);\n                ctx.lineTo(x * width - 1, textureData.height);\n            }\n            for (let y = 0; y < 16; y++) {\n                // horizontal lines\n                ctx.moveTo(0, y * height - 1);\n                ctx.lineTo(textureData.width, y * height - 1);\n            }\n            ctx.strokeStyle = \"#d1652f\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n        }\n    };\n\n    render() {\n        const { texture } = this.props;\n        return (\n            <>\n                {texture && (\n                    <canvas\n                        ref={this.canvasRef}\n                        data-rendering={texture.rendering}\n                        data-revision={texture.settings.revision}\n                    ></canvas>\n                )}\n                {!texture && <div className=\"no-content\">No Texture</div>}\n            </>\n        );\n    }\n}\n","import { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { ChangeEvent, PureComponent } from \"react\";\nimport { TextureLoaderProps } from \"./Floor\";\n\n@observer\nexport default class UploadButton extends PureComponent<TextureLoaderProps> {\n    @observable target = \"\";\n    @action loadTexture = async (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files?.length) {\n            const file = event.target.files[0];\n            this.props.setTexture(file);\n            this.target = file.name;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"file is-fullwidth has-name is-right\">\n                <label className=\"file-label\">\n                    <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"texture\"\n                        id=\"texture\"\n                        accept=\"image/*\"\n                        onChange={this.loadTexture}\n                    />\n                    <span className=\"file-cta fetch-button\">Upload</span>\n                    <span className=\"file-name\">{this.target}</span>\n                </label>\n            </div>\n        );\n    }\n}\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport type SwitchProps = React.InputHTMLAttributes<HTMLInputElement> & {\r\n    label: string;\r\n    rounded?: boolean;\r\n    outlined?: boolean;\r\n    small?: boolean;\r\n};\r\n\r\n@observer\r\nexport class Switch extends Component<SwitchProps> {\r\n    render() {\r\n        const { id, label, onChange, checked } = this.props;\r\n        return (\r\n            <div className=\"field\">\r\n                <input\r\n                    id={id}\r\n                    type=\"checkbox\"\r\n                    className={classNames({\r\n                        switch: true,\r\n                        \"is-rounded\": true,\r\n                        \"is-outlined\": true,\r\n                        \"is-small\": true,\r\n                    })}\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./Input\";\r\nimport { Switch } from \"./Switch\";\r\nimport { TextureProps } from \"./TexturePreview\";\r\n\r\n@observer\r\nexport class TextureSize extends Component<TextureProps> {\r\n    render() {\r\n        const { texture } = this.props;\r\n        const { settings, toggleSetting, updateSetting } = texture;\r\n        return (\r\n            <div className=\"texture-size\">\r\n                <span className=\"help\">\r\n                    Texture size:{\" \"}\r\n                    {`${texture.raw.size.width} x ${texture.raw.size.height} (original)`}\r\n                    {settings.tile &&\r\n                        `, ${texture.raw.size.width * settings.tilesX} x ${\r\n                            texture.raw.size.height * settings.tilesY\r\n                        } (tiled)`}\r\n                    {`, 1024 x 1024 (output)`}\r\n                </span>\r\n                <div className=\"columns\" style={{ alignItems: \"center\" }}>\r\n                    <div className=\"column\">\r\n                        <Switch\r\n                            id=\"texture-tiling\"\r\n                            label=\"Tile\"\r\n                            small={true}\r\n                            rounded={true}\r\n                            outlined={true}\r\n                            checked={settings.tile}\r\n                            onChange={() => toggleSetting(\"tile\")}\r\n                        />\r\n                    </div>\r\n                    {settings.tile && (\r\n                        <>\r\n                            <div className=\"column\">\r\n                                <Input\r\n                                    id=\"texture-tiling-x\"\r\n                                    label=\"x\"\r\n                                    small={true}\r\n                                    element={\r\n                                        <input className=\"input is-small\" />\r\n                                    }\r\n                                    value={settings.tilesX}\r\n                                    onChange={(ev) =>\r\n                                        updateSetting(\r\n                                            \"tilesX\",\r\n                                            parseInt(ev.target.value) || 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Input\r\n                                    id=\"texture-tiling-y\"\r\n                                    label=\"y\"\r\n                                    small={true}\r\n                                    element={\r\n                                        <input className=\"input is-small\" />\r\n                                    }\r\n                                    value={settings.tilesY}\r\n                                    onChange={(ev) =>\r\n                                        updateSetting(\r\n                                            \"tilesY\",\r\n                                            parseInt(ev.target.value) || 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export type def = { def: string; label: string };\r\nexport type stuff = def & {\r\n    color: string; // rgb( r, g, b )\r\n};\r\n\r\nexport const stuffCategories = [\r\n    \"Metallic\",\r\n    \"Woody\",\r\n    \"Stony\",\r\n    \"Fabric\",\r\n    \"Leathery\",\r\n];\r\n\r\nexport const stuffs: { [category: string]: stuff[] } = {\r\n    Metallic: [\r\n        { def: \"Silver\", label: \"Silver\", color: \"rgb(180, 173, 150)\" },\r\n        { def: \"Gold\", label: \"Gold\", color: \"rgb(255, 235, 122)\" },\r\n        { def: \"Steel\", label: \"Steel\", color: \"rgb(105, 105, 105)\" },\r\n        { def: \"Plasteel\", label: \"Plasteel\", color: \"rgb(160, 178, 181)\" },\r\n        { def: \"Uranium\", label: \"Uranium\", color: \"rgb(100, 100, 100)\" },\r\n    ],\r\n    Woody: [{ def: \"WoodLog\", label: \"Wood\", color: \"rgb(133, 97, 67)\" }],\r\n    Stony: [\r\n        { def: \"Jade\", label: \"Jade\", color: \"rgb(85, 118, 69)\" },\r\n        {\r\n            def: \"BlocksSandstone\",\r\n            label: \"Sandstone blocks\",\r\n            color: \"rgb(126, 104, 94)\",\r\n        },\r\n        {\r\n            def: \"BlocksGranite\",\r\n            label: \"Granite blocks\",\r\n            color: \"rgb(105, 95, 97)\",\r\n        },\r\n        {\r\n            def: \"BlocksLimestone\",\r\n            label: \"Limestone blocks\",\r\n            color: \"rgb(158, 153, 135)\",\r\n        },\r\n        { def: \"BlocksSlate\", label: \"Slate blocks\", color: \"rgb(70, 70, 70)\" },\r\n        {\r\n            def: \"BlocksMarble\",\r\n            label: \"Marble blocks\",\r\n            color: \"rgb(132, 135, 132)\",\r\n        },\r\n    ],\r\n    Fabric: [\r\n        { def: \"Cloth\", label: \"Cloth\", color: \"rgb(162, 157, 152)\" },\r\n        { def: \"Synthread\", label: \"Synthread\", color: \"rgb(174, 219, 228)\" },\r\n        {\r\n            def: \"DevilstrandCloth\",\r\n            label: \"Devilstrand\",\r\n            color: \"rgb(180, 60, 60)\",\r\n        },\r\n        { def: \"Hyperweave\", label: \"Hyperweave\", color: \"rgb(0, 106, 126)\" },\r\n        {\r\n            def: \"WoolMegasloth\",\r\n            label: \"Megasloth wool\",\r\n            color: \"rgb(189, 161, 116)\",\r\n        },\r\n        {\r\n            def: \"WoolMuffalo\",\r\n            label: \"Muffalo wool\",\r\n            color: \"rgb(179, 192, 186)\",\r\n        },\r\n        {\r\n            def: \"WoolAlpaca\",\r\n            label: \"Alpaca wool\",\r\n            color: \"rgb(180, 148, 109)\",\r\n        },\r\n        { def: \"WoolBison\", label: \"Bison wool\", color: \"rgb(104, 69, 45)\" },\r\n        { def: \"WoolSheep\", label: \"Sheep wool\", color: \"rgb(219, 214, 209)\" },\r\n    ],\r\n    Leathery: [\r\n        {\r\n            def: \"Leather_Plain\",\r\n            label: \"Plainleather\",\r\n            color: \"rgb(162, 106, 57)\",\r\n        },\r\n        {\r\n            def: \"Leather_Dog\",\r\n            label: \"Dog leather\",\r\n            color: \"rgb(209, 168, 39)\",\r\n        },\r\n        { def: \"Leather_Wolf\", label: \"Wolfskin\", color: \"rgb(115, 110, 100)\" },\r\n        {\r\n            def: \"Leather_Panthera\",\r\n            label: \"Panthera fur\",\r\n            color: \"rgb(60, 60, 60)\",\r\n        },\r\n        {\r\n            def: \"Leather_Camel\",\r\n            label: \"Camelhide\",\r\n            color: \"rgb(204, 180, 150)\",\r\n        },\r\n        {\r\n            def: \"Leather_Bluefur\",\r\n            label: \"Bluefur\",\r\n            color: \"rgb(152, 170, 174)\",\r\n        },\r\n        { def: \"Leather_Bear\", label: \"Bearskin\", color: \"rgb(112, 82, 65)\" },\r\n        {\r\n            def: \"Leather_GuineaPig\",\r\n            label: \"Guinea pig fur\",\r\n            color: \"rgb(179, 125, 55)\",\r\n        },\r\n        {\r\n            def: \"Leather_Human\",\r\n            label: \"Human leather\",\r\n            color: \"rgb(211, 194, 143)\",\r\n        },\r\n        { def: \"Leather_Pig\", label: \"Pigskin\", color: \"rgb(174, 150, 126)\" },\r\n        {\r\n            def: \"Leather_Light\",\r\n            label: \"Lightleather\",\r\n            color: \"rgb(140, 85, 36)\",\r\n        },\r\n        { def: \"Leather_Bird\", label: \"Birdskin\", color: \"rgb(76, 83, 99)\" },\r\n        {\r\n            def: \"Leather_Chinchilla\",\r\n            label: \"Chinchilla fur\",\r\n            color: \"rgb(178, 170, 158)\",\r\n        },\r\n        { def: \"Leather_Fox\", label: \"Foxfur\", color: \"rgb(178, 100, 34)\" },\r\n        {\r\n            def: \"Leather_Lizard\",\r\n            label: \"Lizardskin\",\r\n            color: \"rgb(101, 116, 58)\",\r\n        },\r\n        {\r\n            def: \"Leather_Elephant\",\r\n            label: \"Elephant leather\",\r\n            color: \"rgb(130, 126, 119)\",\r\n        },\r\n        {\r\n            def: \"Leather_Heavy\",\r\n            label: \"Heavy fur\",\r\n            color: \"rgb(189, 161, 116)\",\r\n        },\r\n        {\r\n            def: \"Leather_Rhinoceros\",\r\n            label: \"Rhinoceros leather\",\r\n            color: \"rgb(150, 150, 150)\",\r\n        },\r\n        {\r\n            def: \"Leather_Thrumbo\",\r\n            label: \"Thrumbofur\",\r\n            color: \"rgb(233, 233, 233)\",\r\n        },\r\n        {\r\n            def: \"Leather_Patch\",\r\n            label: \"Patchleather\",\r\n            color: \"rgb(90, 75, 60)\",\r\n        },\r\n    ],\r\n};\r\n\r\nexport const affordances: Affordance[] = [\r\n    \"Light\",\r\n    \"Medium\",\r\n    \"Heavy\",\r\n    \"Diggable\",\r\n    \"GrowSoil\",\r\n];\r\n\r\nexport const tags: string[] = [\"Floor\", \"FineFloor\"];\r\n\r\nexport const researchDefs: def[] = [\r\n    { def: \"PsychoidBrewing\", label: \"Psychoid brewing\" },\r\n    { def: \"TreeSowing\", label: \"Tree sowing\" },\r\n    { def: \"Brewing\", label: \"Beer brewing\" },\r\n    { def: \"ComplexFurniture\", label: \"Complex furniture\" },\r\n    { def: \"PassiveCooler\", label: \"Passive cooler\" },\r\n    { def: \"Stonecutting\", label: \"Stonecutting\" },\r\n    { def: \"ComplexClothing\", label: \"Complex clothing\" },\r\n    { def: \"DrugProduction\", label: \"Drug production\" },\r\n    { def: \"Cocoa\", label: \"Cocoa\" },\r\n    { def: \"Devilstrand\", label: \"Devilstrand\" },\r\n    { def: \"CarpetMaking\", label: \"Carpet making\" },\r\n    { def: \"Pemmican\", label: \"Pemmican\" },\r\n    { def: \"Smithing\", label: \"Smithing\" },\r\n    { def: \"RecurveBow\", label: \"Recurve bow\" },\r\n    { def: \"PsychiteRefining\", label: \"Psychite refining\" },\r\n    { def: \"WakeUpProduction\", label: \"Wake-up production\" },\r\n    { def: \"GoJuiceProduction\", label: \"Go-juice production\" },\r\n    { def: \"PenoxycylineProduction\", label: \"Penoxycyline production\" },\r\n    { def: \"LongBlades\", label: \"Long blades\" },\r\n    { def: \"PlateArmor\", label: \"Plate armor\" },\r\n    { def: \"Greatbow\", label: \"Greatbow\" },\r\n    { def: \"Electricity\", label: \"Electricity\" },\r\n    { def: \"Batteries\", label: \"Battery\" },\r\n    { def: \"BiofuelRefining\", label: \"Biofuel refining\" },\r\n    { def: \"WatermillGenerator\", label: \"Watermill generator\" },\r\n    { def: \"NutrientPaste\", label: \"Nutrient paste\" },\r\n    { def: \"SolarPanels\", label: \"Solar panel\" },\r\n    { def: \"AirConditioning\", label: \"Air conditioning\" },\r\n    { def: \"Autodoors\", label: \"Autodoor\" },\r\n    { def: \"Hydroponics\", label: \"Hydroponics\" },\r\n    { def: \"TubeTelevision\", label: \"Tube television\" },\r\n    { def: \"PackagedSurvivalMeal\", label: \"Packaged survival meal\" },\r\n    { def: \"Firefoam\", label: \"Firefoam\" },\r\n    { def: \"IEDs\", label: \"IEDs\" },\r\n    { def: \"GeothermalPower\", label: \"Geothermal power\" },\r\n    { def: \"SterileMaterials\", label: \"Sterile materials\" },\r\n    { def: \"ColoredLights\", label: \"Colored lights\" },\r\n    { def: \"Machining\", label: \"Machining\" },\r\n    { def: \"SmokepopBelt\", label: \"Smokepop packs\" },\r\n    { def: \"Prosthetics\", label: \"Prosthetics\" },\r\n    { def: \"Gunsmithing\", label: \"Gunsmithing\" },\r\n    { def: \"FlakArmor\", label: \"Flak armor\" },\r\n    { def: \"Mortars\", label: \"Mortars\" },\r\n    { def: \"BlowbackOperation\", label: \"Blowback operation\" },\r\n    { def: \"GasOperation\", label: \"Gas operation\" },\r\n    { def: \"GunTurrets\", label: \"Gun turrets\" },\r\n    { def: \"MicroelectronicsBasics\", label: \"Microelectronics\" },\r\n    { def: \"FlatscreenTelevision\", label: \"Flatscreen television\" },\r\n    { def: \"MoisturePump\", label: \"Moisture pump\" },\r\n    { def: \"HospitalBed\", label: \"Hospital bed\" },\r\n    { def: \"DeepDrilling\", label: \"Deep drilling\" },\r\n    { def: \"GroundPenetratingScanner\", label: \"Ground-penetrating scanner\" },\r\n    { def: \"TransportPod\", label: \"Transport pod\" },\r\n    { def: \"MedicineProduction\", label: \"Medicine production\" },\r\n    { def: \"LongRangeMineralScanner\", label: \"Long-range mineral scanner\" },\r\n    { def: \"ShieldBelt\", label: \"Shields\" },\r\n    { def: \"PrecisionRifling\", label: \"Precision rifling\" },\r\n    { def: \"HeavyTurrets\", label: \"Autocannon turret\" },\r\n    { def: \"MultibarrelWeapons\", label: \"Multibarrel weapons\" },\r\n    { def: \"MultiAnalyzer\", label: \"Multi-analyzer\" },\r\n    { def: \"VitalsMonitor\", label: \"Vitals monitor\" },\r\n    { def: \"Fabrication\", label: \"Fabrication\" },\r\n    { def: \"AdvancedFabrication\", label: \"Advanced fabrication\" },\r\n    { def: \"Cryptosleep\", label: \"Cryptosleep casket\" },\r\n    { def: \"ReconArmor\", label: \"Recon armor\" },\r\n    { def: \"PoweredArmor\", label: \"Marine armor\" },\r\n    { def: \"ChargedShot\", label: \"Pulse-charged munitions\" },\r\n    { def: \"Bionics\", label: \"Bionic replacements\" },\r\n    { def: \"SniperTurret\", label: \"Uranium slug turret\" },\r\n    { def: \"ShipBasics\", label: \"Starflight basics\" },\r\n    { def: \"ShipCryptosleep\", label: \"Vacuum cryptosleep casket\" },\r\n    { def: \"ShipReactor\", label: \"Starship reactor\" },\r\n    { def: \"ShipEngine\", label: \"Johnson-Tanaka drive\" },\r\n    { def: \"ShipComputerCore\", label: \"Machine persuasion\" },\r\n    { def: \"ShipSensorCluster\", label: \"Starflight sensors\" },\r\n    { def: \"NobleApparel\", label: \"Noble apparel\" },\r\n    { def: \"RoyalApparel\", label: \"Royal apparel\" },\r\n    { def: \"CataphractArmor\", label: \"Cataphract armor\" },\r\n    { def: \"JumpPack\", label: \"Jump packs\" },\r\n    { def: \"Gunlink\", label: \"Gunlink\" },\r\n    { def: \"BrainWiring\", label: \"Brain wiring\" },\r\n    { def: \"SpecializedLimbs\", label: \"Specialized limbs\" },\r\n    { def: \"CompactWeaponry\", label: \"Compact weaponry\" },\r\n    { def: \"VenomSynthesis\", label: \"Poison synthesis\" },\r\n    { def: \"ArtificialMetabolism\", label: \"Artificial metabolism\" },\r\n    { def: \"NeuralComputation\", label: \"Neural computation\" },\r\n    { def: \"SkinHardening\", label: \"Skin hardening\" },\r\n    { def: \"HealingFactors\", label: \"Healing factors\" },\r\n    { def: \"FleshShaping\", label: \"Flesh shaping\" },\r\n    { def: \"MolecularAnalysis\", label: \"Molecular analysis\" },\r\n    { def: \"CircadianInfluence\", label: \"Circadian influence\" },\r\n    { def: \"Harp\", label: \"Harp\" },\r\n    { def: \"Harpsichord\", label: \"Harpsichord\" },\r\n    { def: \"Piano\", label: \"Piano\" },\r\n];\r\n\r\nexport const burnedFloorDefs: string[] = [\r\n    \"BurnedCarpet\",\r\n    \"BurnedWoodPlankFloor\",\r\n];\r\n\r\nexport const buildingMaterials: def[] = [\r\n    { def: \"Silver\", label: \"Silver\" },\r\n    { def: \"Gold\", label: \"Gold\" },\r\n    { def: \"Steel\", label: \"Steel\" },\r\n    { def: \"Plasteel\", label: \"Plasteel\" },\r\n    { def: \"WoodLog\", label: \"Wood\" },\r\n    { def: \"Uranium\", label: \"Uranium\" },\r\n    { def: \"Jade\", label: \"Jade\" },\r\n    { def: \"Cloth\", label: \"Cloth\" },\r\n    { def: \"Synthread\", label: \"Synthread\" },\r\n    { def: \"DevilstrandCloth\", label: \"Devilstrand\" },\r\n    { def: \"Hyperweave\", label: \"Hyperweave\" },\r\n    { def: \"WoolMegasloth\", label: \"Megasloth wool\" },\r\n    { def: \"WoolMuffalo\", label: \"Muffalo wool\" },\r\n    { def: \"WoolAlpaca\", label: \"Alpaca wool\" },\r\n    { def: \"WoolBison\", label: \"Bison wool\" },\r\n    { def: \"WoolSheep\", label: \"Sheep wool\" },\r\n    { def: \"Leather_Plain\", label: \"Plainleather\" },\r\n    { def: \"Leather_Dog\", label: \"Dog leather\" },\r\n    { def: \"Leather_Wolf\", label: \"Wolfskin\" },\r\n    { def: \"Leather_Panthera\", label: \"Panthera fur\" },\r\n    { def: \"Leather_Camel\", label: \"Camelhide\" },\r\n    { def: \"Leather_Bluefur\", label: \"Bluefur\" },\r\n    { def: \"Leather_Bear\", label: \"Bearskin\" },\r\n    { def: \"Leather_GuineaPig\", label: \"Guinea pig fur\" },\r\n    { def: \"Leather_Human\", label: \"Human leather\" },\r\n    { def: \"Leather_Pig\", label: \"Pigskin\" },\r\n    { def: \"Leather_Light\", label: \"Lightleather\" },\r\n    { def: \"Leather_Bird\", label: \"Birdskin\" },\r\n    { def: \"Leather_Chinchilla\", label: \"Chinchilla fur\" },\r\n    { def: \"Leather_Fox\", label: \"Foxfur\" },\r\n    { def: \"Leather_Lizard\", label: \"Lizardskin\" },\r\n    { def: \"Leather_Elephant\", label: \"Elephant leather\" },\r\n    { def: \"Leather_Heavy\", label: \"Heavy fur\" },\r\n    { def: \"Leather_Rhinoceros\", label: \"Rhinoceros leather\" },\r\n    { def: \"Leather_Thrumbo\", label: \"Thrumbofur\" },\r\n    { def: \"Leather_Patch\", label: \"Patchleather\" },\r\n    { def: \"BlocksSandstone\", label: \"Sandstone blocks\" },\r\n    { def: \"BlocksGranite\", label: \"Granite blocks\" },\r\n    { def: \"BlocksLimestone\", label: \"Limestone blocks\" },\r\n    { def: \"BlocksSlate\", label: \"Slate blocks\" },\r\n    { def: \"BlocksMarble\", label: \"Marble blocks\" },\r\n    { def: \"RawHops\", label: \"Hops\" },\r\n    { def: \"MedicineHerbal\", label: \"Herbal medicine\" },\r\n    { def: \"MedicineIndustrial\", label: \"Medicine\" },\r\n    { def: \"MedicineUltratech\", label: \"Glitterworld medicine\" },\r\n    { def: \"ArchotechEye\", label: \"Archotech eye\" },\r\n    { def: \"ArchotechArm\", label: \"Archotech arm\" },\r\n    { def: \"ArchotechLeg\", label: \"Archotech leg\" },\r\n    { def: \"BionicEye\", label: \"Bionic eye\" },\r\n    { def: \"BionicArm\", label: \"Bionic arm\" },\r\n    { def: \"BionicLeg\", label: \"Bionic leg\" },\r\n    { def: \"BionicSpine\", label: \"Bionic spine\" },\r\n    { def: \"BionicHeart\", label: \"Bionic heart\" },\r\n    { def: \"BionicStomach\", label: \"Bionic stomach\" },\r\n    { def: \"DeathAcidifier\", label: \"Death acidifier\" },\r\n    { def: \"BionicEar\", label: \"Bionic ear\" },\r\n    { def: \"Heart\", label: \"Heart\" },\r\n    { def: \"Lung\", label: \"Lung\" },\r\n    { def: \"Kidney\", label: \"Kidney\" },\r\n    { def: \"Liver\", label: \"Liver\" },\r\n    { def: \"SimpleProstheticLeg\", label: \"Prosthetic leg\" },\r\n    { def: \"SimpleProstheticArm\", label: \"Prosthetic arm\" },\r\n    { def: \"SimpleProstheticHeart\", label: \"Prosthetic heart\" },\r\n    { def: \"CochlearImplant\", label: \"Cochlear implant\" },\r\n    { def: \"PowerClaw\", label: \"Power claw\" },\r\n    { def: \"Joywire\", label: \"Joywire\" },\r\n    { def: \"Painstopper\", label: \"Painstopper\" },\r\n    { def: \"Corpse_Human\", label: \"Human corpse\" },\r\n    { def: \"Corpse_Muffalo\", label: \"Muffalo corpse\" },\r\n    { def: \"Corpse_Gazelle\", label: \"Gazelle corpse\" },\r\n    { def: \"Corpse_Iguana\", label: \"Iguana corpse\" },\r\n    { def: \"Corpse_Dromedary\", label: \"Dromedary corpse\" },\r\n    { def: \"Corpse_Bear_Grizzly\", label: \"Grizzly bear corpse\" },\r\n    { def: \"Corpse_Bear_Polar\", label: \"Polar bear corpse\" },\r\n    { def: \"Corpse_Cougar\", label: \"Cougar corpse\" },\r\n    { def: \"Corpse_Panther\", label: \"Panther corpse\" },\r\n    { def: \"Corpse_Lynx\", label: \"Lynx corpse\" },\r\n    { def: \"Corpse_Cassowary\", label: \"Cassowary corpse\" },\r\n    { def: \"Corpse_Emu\", label: \"Emu corpse\" },\r\n    { def: \"Corpse_Ostrich\", label: \"Ostrich corpse\" },\r\n    { def: \"Corpse_Turkey\", label: \"Turkey corpse\" },\r\n    { def: \"Corpse_Chicken\", label: \"Chicken corpse\" },\r\n    { def: \"Corpse_Pig\", label: \"Pig corpse\" },\r\n    { def: \"Corpse_Cow\", label: \"Cow corpse\" },\r\n    { def: \"Corpse_Alpaca\", label: \"Alpaca corpse\" },\r\n    { def: \"Corpse_Duck\", label: \"Duck corpse\" },\r\n    { def: \"Corpse_Bison\", label: \"Bison corpse\" },\r\n    { def: \"Corpse_Goat\", label: \"Goat corpse\" },\r\n    { def: \"Corpse_Goose\", label: \"Goose corpse\" },\r\n    { def: \"Corpse_Sheep\", label: \"Sheep corpse\" },\r\n    { def: \"Corpse_Horse\", label: \"Horse corpse\" },\r\n    { def: \"Corpse_Yak\", label: \"Yak corpse\" },\r\n    { def: \"Corpse_GuineaPig\", label: \"Guinea pig corpse\" },\r\n    { def: \"Corpse_Donkey\", label: \"Donkey corpse\" },\r\n    { def: \"Corpse_Rhinoceros\", label: \"Rhinoceros corpse\" },\r\n    { def: \"Corpse_Elephant\", label: \"Elephant corpse\" },\r\n    { def: \"Corpse_Megasloth\", label: \"Megasloth corpse\" },\r\n    { def: \"Corpse_Thrumbo\", label: \"Thrumbo corpse\" },\r\n    { def: \"Corpse_Hare\", label: \"Hare corpse\" },\r\n    { def: \"Corpse_Snowhare\", label: \"Snowhare corpse\" },\r\n    { def: \"Corpse_YorkshireTerrier\", label: \"Yorkshire terrier corpse\" },\r\n    { def: \"Corpse_Husky\", label: \"Husky corpse\" },\r\n    { def: \"Corpse_LabradorRetriever\", label: \"Labrador retriever corpse\" },\r\n    { def: \"Corpse_Cat\", label: \"Cat corpse\" },\r\n    { def: \"Corpse_Squirrel\", label: \"Squirrel corpse\" },\r\n    { def: \"Corpse_Alphabeaver\", label: \"Alphabeaver corpse\" },\r\n    { def: \"Corpse_Capybara\", label: \"Capybara corpse\" },\r\n    { def: \"Corpse_Chinchilla\", label: \"Chinchilla corpse\" },\r\n    { def: \"Corpse_Boomrat\", label: \"Boomrat corpse\" },\r\n    { def: \"Corpse_Raccoon\", label: \"Raccoon corpse\" },\r\n    { def: \"Corpse_Rat\", label: \"Rat corpse\" },\r\n    { def: \"Corpse_Deer\", label: \"Deer corpse\" },\r\n    { def: \"Corpse_Ibex\", label: \"Ibex corpse\" },\r\n    { def: \"Corpse_Elk\", label: \"Elk corpse\" },\r\n    { def: \"Corpse_Caribou\", label: \"Caribou corpse\" },\r\n    { def: \"Corpse_WildBoar\", label: \"Wild boar corpse\" },\r\n    { def: \"Corpse_Tortoise\", label: \"Tortoise corpse\" },\r\n    { def: \"Corpse_Cobra\", label: \"Cobra corpse\" },\r\n    { def: \"Corpse_Monkey\", label: \"Monkey corpse\" },\r\n    { def: \"Corpse_Boomalope\", label: \"Boomalope corpse\" },\r\n    { def: \"Corpse_Warg\", label: \"Warg corpse\" },\r\n    { def: \"Corpse_Wolf_Timber\", label: \"Timber wolf corpse\" },\r\n    { def: \"Corpse_Wolf_Arctic\", label: \"Arctic wolf corpse\" },\r\n    { def: \"Corpse_Fox_Fennec\", label: \"Fennec fox corpse\" },\r\n    { def: \"Corpse_Fox_Red\", label: \"Red fox corpse\" },\r\n    { def: \"Corpse_Fox_Arctic\", label: \"Arctic fox corpse\" },\r\n    { def: \"Corpse_Megascarab\", label: \"Megascarab corpse\" },\r\n    { def: \"Corpse_Spelopede\", label: \"Spelopede corpse\" },\r\n    { def: \"Corpse_Megaspider\", label: \"Megaspider corpse\" },\r\n    { def: \"Corpse_Mech_Centipede\", label: \"Centipede corpse\" },\r\n    { def: \"Corpse_Mech_Lancer\", label: \"Lancer corpse\" },\r\n    { def: \"Corpse_Mech_Scyther\", label: \"Scyther corpse\" },\r\n    { def: \"Corpse_Mech_Pikeman\", label: \"Pikeman corpse\" },\r\n    { def: \"Apparel_TribalA\", label: \"Tribalwear\" },\r\n    { def: \"Apparel_Parka\", label: \"Parka\" },\r\n    { def: \"Apparel_Pants\", label: \"Pants\" },\r\n    { def: \"Apparel_BasicShirt\", label: \"T-shirt\" },\r\n    { def: \"Apparel_CollarShirt\", label: \"Button-down shirt\" },\r\n    { def: \"Apparel_Duster\", label: \"Duster\" },\r\n    { def: \"Apparel_Jacket\", label: \"Jacket\" },\r\n    { def: \"Apparel_PsyfocusShirt\", label: \"Eltex shirt\" },\r\n    { def: \"Apparel_PsyfocusVest\", label: \"Eltex vest\" },\r\n    { def: \"Apparel_PsyfocusRobe\", label: \"Eltex robe\" },\r\n    { def: \"Apparel_CowboyHat\", label: \"Cowboy hat\" },\r\n    { def: \"Apparel_BowlerHat\", label: \"Bowler hat\" },\r\n    { def: \"Apparel_TribalHeaddress\", label: \"Tribal headdress\" },\r\n    { def: \"Apparel_Tuque\", label: \"Tuque\" },\r\n    { def: \"Apparel_WarMask\", label: \"War mask\" },\r\n    { def: \"Apparel_WarVeil\", label: \"War veil\" },\r\n    { def: \"Apparel_PsychicFoilHelmet\", label: \"Psychic foil helmet\" },\r\n    { def: \"Apparel_PsyfocusHelmet\", label: \"Eltex helmet\" },\r\n    { def: \"Apparel_EltexSkullcap\", label: \"Eltex skullcap\" },\r\n    { def: \"Apparel_PlateArmor\", label: \"Plate armor\" },\r\n    { def: \"Apparel_FlakVest\", label: \"Flak vest\" },\r\n    { def: \"Apparel_FlakPants\", label: \"Flak pants\" },\r\n    { def: \"Apparel_FlakJacket\", label: \"Flak jacket\" },\r\n    { def: \"Apparel_PowerArmor\", label: \"Marine armor\" },\r\n    { def: \"Apparel_ArmorRecon\", label: \"Recon armor\" },\r\n    { def: \"Apparel_ArmorReconPrestige\", label: \"Prestige recon armor\" },\r\n    { def: \"Apparel_ArmorMarinePrestige\", label: \"Prestige marine armor\" },\r\n    { def: \"Apparel_ArmorCataphract\", label: \"Cataphract armor\" },\r\n    {\r\n        def: \"Apparel_ArmorCataphractPrestige\",\r\n        label: \"Prestige cataphract armor\",\r\n    },\r\n    { def: \"Apparel_ArmorLocust\", label: \"Locust armor\" },\r\n    { def: \"Apparel_ArmorMarineGrenadier\", label: \"Grenadier armor\" },\r\n    { def: \"Apparel_ArmorCataphractPhoenix\", label: \"Phoenix armor\" },\r\n    { def: \"Apparel_SimpleHelmet\", label: \"Simple helmet\" },\r\n    { def: \"Apparel_AdvancedHelmet\", label: \"Flak helmet\" },\r\n    { def: \"Apparel_PowerArmorHelmet\", label: \"Marine helmet\" },\r\n    { def: \"Apparel_ArmorHelmetRecon\", label: \"Recon helmet\" },\r\n    { def: \"Apparel_ArmorHelmetReconPrestige\", label: \"Prestige recon helmet\" },\r\n    {\r\n        def: \"Apparel_ArmorMarineHelmetPrestige\",\r\n        label: \"Prestige marine helmet\",\r\n    },\r\n    { def: \"Apparel_ArmorHelmetCataphract\", label: \"Cataphract helmet\" },\r\n    {\r\n        def: \"Apparel_ArmorHelmetCataphractPrestige\",\r\n        label: \"Prestige cataphract helmet\",\r\n    },\r\n    { def: \"Apparel_Gunlink\", label: \"Gunlink\" },\r\n    { def: \"Apparel_ShieldBelt\", label: \"Shield belt\" },\r\n    { def: \"Apparel_SmokepopBelt\", label: \"Smokepop pack\" },\r\n    { def: \"Apparel_PsychicShockLance\", label: \"Psychic shock lance\" },\r\n    { def: \"Apparel_PsychicInsanityLance\", label: \"Psychic insanity lance\" },\r\n    {\r\n        def: \"OrbitalTargeterBombardment\",\r\n        label: \"Orbital bombardment targeter\",\r\n    },\r\n    { def: \"OrbitalTargeterPowerBeam\", label: \"Orbital power beam targeter\" },\r\n    { def: \"TornadoGenerator\", label: \"Tornado generator\" },\r\n    { def: \"Apparel_PackJump\", label: \"Jump pack\" },\r\n    { def: \"Apparel_PackBroadshield\", label: \"Low-shield pack\" },\r\n    {\r\n        def: \"OrbitalTargeterMechCluster\",\r\n        label: \"Orbital mech cluster targeter\",\r\n    },\r\n    { def: \"Apparel_ShirtRuffle\", label: \"Formal shirt\" },\r\n    { def: \"Apparel_Corset\", label: \"Corset\" },\r\n    { def: \"Apparel_VestRoyal\", label: \"Formal vest\" },\r\n    { def: \"Apparel_RobeRoyal\", label: \"Prestige robe\" },\r\n    { def: \"Apparel_Cape\", label: \"Cape\" },\r\n    { def: \"Apparel_HatLadies\", label: \"Ladies hat\" },\r\n    { def: \"Apparel_HatTop\", label: \"Top hat\" },\r\n    { def: \"Apparel_HatHood\", label: \"Hood\" },\r\n    { def: \"Apparel_Coronet\", label: \"Coronet\" },\r\n    { def: \"Apparel_Crown\", label: \"Crown\" },\r\n    { def: \"Apparel_CrownStellic\", label: \"Stellic crown\" },\r\n    { def: \"Apparel_Beret\", label: \"Beret\" },\r\n    { def: \"MeleeWeapon_Mace\", label: \"Mace\" },\r\n    { def: \"MeleeWeapon_Gladius\", label: \"Gladius\" },\r\n    { def: \"MeleeWeapon_LongSword\", label: \"Longsword\" },\r\n    { def: \"MeleeWeapon_Club\", label: \"Club\" },\r\n    { def: \"MeleeWeapon_Knife\", label: \"Knife\" },\r\n    { def: \"MeleeWeapon_Ikwa\", label: \"Ikwa\" },\r\n    { def: \"MeleeWeapon_Spear\", label: \"Spear\" },\r\n    { def: \"MeleeWeapon_Axe\", label: \"Axe\" },\r\n    { def: \"MeleeWeapon_Warhammer\", label: \"Warhammer\" },\r\n    { def: \"MeleeWeapon_MonoSword\", label: \"Monosword\" },\r\n    { def: \"MeleeWeapon_Zeushammer\", label: \"Zeushammer\" },\r\n    { def: \"MeleeWeapon_PlasmaSword\", label: \"Plasmasword\" },\r\n    { def: \"MeleeWeapon_PsyfocusStaff\", label: \"Eltex staff\" },\r\n    { def: \"MeleeWeapon_MonoSwordBladelink\", label: \"Persona monosword\" },\r\n    { def: \"MeleeWeapon_ZeusHammerBladelink\", label: \"Persona zeushammer\" },\r\n    { def: \"MeleeWeapon_PlasmaSwordBladelink\", label: \"Persona plasmasword\" },\r\n    { def: \"Gun_Revolver\", label: \"Revolver\" },\r\n    { def: \"Gun_Autopistol\", label: \"Autopistol\" },\r\n    { def: \"Gun_MachinePistol\", label: \"Machine pistol\" },\r\n    { def: \"Gun_IncendiaryLauncher\", label: \"Incendiary launcher\" },\r\n    { def: \"Gun_SmokeLauncher\", label: \"Smoke launcher\" },\r\n    { def: \"Gun_EmpLauncher\", label: \"EMP launcher\" },\r\n    { def: \"Gun_BoltActionRifle\", label: \"Bolt-action rifle\" },\r\n    { def: \"Gun_PumpShotgun\", label: \"Pump shotgun\" },\r\n    { def: \"Gun_ChainShotgun\", label: \"Chain shotgun\" },\r\n    { def: \"Gun_HeavySMG\", label: \"Heavy SMG\" },\r\n    { def: \"Gun_LMG\", label: \"LMG\" },\r\n    { def: \"Gun_AssaultRifle\", label: \"Assault rifle\" },\r\n    { def: \"Gun_SniperRifle\", label: \"Sniper rifle\" },\r\n    { def: \"Gun_Minigun\", label: \"Minigun\" },\r\n    { def: \"Gun_TripleRocket\", label: \"Triple rocket launcher\" },\r\n    { def: \"Gun_DoomsdayRocket\", label: \"Doomsday rocket launcher\" },\r\n    { def: \"Gun_ChargeBlasterHeavy\", label: \"Heavy charge blaster\" },\r\n    { def: \"Gun_InfernoCannon\", label: \"Inferno cannon\" },\r\n    { def: \"Gun_Needle\", label: \"Needle gun\" },\r\n    { def: \"Bow_Short\", label: \"Short bow\" },\r\n    { def: \"Pila\", label: \"Pila\" },\r\n    { def: \"Bow_Recurve\", label: \"Recurve bow\" },\r\n    { def: \"Bow_Great\", label: \"Greatbow\" },\r\n    { def: \"Gun_ChargeRifle\", label: \"Charge rifle\" },\r\n    { def: \"Gun_ChargeLance\", label: \"Charge lance\" },\r\n    { def: \"Gun_ChargeBlasterHeavyTurret\", label: \"Light charge blaster\" },\r\n    { def: \"Gun_InfernoCannonTurret\", label: \"Inferno cannon\" },\r\n    { def: \"Weapon_GrenadeFrag\", label: \"Frag grenades\" },\r\n    { def: \"Weapon_GrenadeMolotov\", label: \"Molotov cocktails\" },\r\n    { def: \"Weapon_GrenadeEMP\", label: \"EMP grenades\" },\r\n    { def: \"Beer\", label: \"Beer\" },\r\n    { def: \"Ambrosia\", label: \"Ambrosia\" },\r\n    { def: \"GoJuice\", label: \"Go-juice\" },\r\n    { def: \"Luciferium\", label: \"Luciferium\" },\r\n    { def: \"Penoxycyline\", label: \"Penoxycyline\" },\r\n    { def: \"Flake\", label: \"Flake\" },\r\n    { def: \"PsychiteTea\", label: \"Psychite tea\" },\r\n    { def: \"Yayo\", label: \"Yayo\" },\r\n    { def: \"SmokeleafJoint\", label: \"Smokeleaf joint\" },\r\n    { def: \"WakeUp\", label: \"Wake-up\" },\r\n    { def: \"Meat_Muffalo\", label: \"Muffalo meat\" },\r\n    { def: \"Meat_Gazelle\", label: \"Gazelle meat\" },\r\n    { def: \"Meat_Iguana\", label: \"Iguana meat\" },\r\n    { def: \"Meat_Dromedary\", label: \"Dromedary meat\" },\r\n    { def: \"Meat_Bear_Grizzly\", label: \"Bear meat\" },\r\n    { def: \"Meat_Cougar\", label: \"Cougar meat\" },\r\n    { def: \"Meat_Panther\", label: \"Panther meat\" },\r\n    { def: \"Meat_Lynx\", label: \"Lynx meat\" },\r\n    { def: \"Meat_Cassowary\", label: \"Bird meat\" },\r\n    { def: \"Meat_Turkey\", label: \"Turkey meat\" },\r\n    { def: \"Meat_Chicken\", label: \"Chicken meat\" },\r\n    { def: \"Meat_Pig\", label: \"Pork\" },\r\n    { def: \"Meat_Cow\", label: \"Beef\" },\r\n    { def: \"Meat_Alpaca\", label: \"Alpaca meat\" },\r\n    { def: \"Meat_Duck\", label: \"Duck meat\" },\r\n    { def: \"Meat_Bison\", label: \"Bison meat\" },\r\n    { def: \"Meat_Goat\", label: \"Goat meat\" },\r\n    { def: \"Meat_Sheep\", label: \"Sheep meat\" },\r\n    { def: \"Meat_Horse\", label: \"Horse meat\" },\r\n    { def: \"Meat_Yak\", label: \"Yak beef\" },\r\n    { def: \"Meat_GuineaPig\", label: \"Guinea pig meat\" },\r\n    { def: \"Meat_Donkey\", label: \"Donkey meat\" },\r\n    { def: \"Meat_Rhinoceros\", label: \"Rhinoceros meat\" },\r\n    { def: \"Meat_Elephant\", label: \"Elephant meat\" },\r\n    { def: \"Meat_Megasloth\", label: \"Megasloth meat\" },\r\n    { def: \"Meat_Thrumbo\", label: \"Thrumbo meat\" },\r\n    { def: \"Meat_Hare\", label: \"Hare meat\" },\r\n    { def: \"Meat_Megaspider\", label: \"Insect meat\" },\r\n    { def: \"Meat_YorkshireTerrier\", label: \"Yorkshire terrier meat\" },\r\n    { def: \"Meat_Husky\", label: \"Husky meat\" },\r\n    { def: \"Meat_LabradorRetriever\", label: \"Labrador retriever meat\" },\r\n    { def: \"Meat_Cat\", label: \"Cat meat\" },\r\n    { def: \"Meat_Squirrel\", label: \"Squirrel meat\" },\r\n    { def: \"Meat_Alphabeaver\", label: \"Alphabeaver meat\" },\r\n    { def: \"Meat_Capybara\", label: \"Capybara meat\" },\r\n    { def: \"Meat_Chinchilla\", label: \"Chinchilla meat\" },\r\n    { def: \"Meat_Boomrat\", label: \"Boomrat meat\" },\r\n    { def: \"Meat_Raccoon\", label: \"Raccoon meat\" },\r\n    { def: \"Meat_Rat\", label: \"Rat meat\" },\r\n    { def: \"Meat_Deer\", label: \"Venison\" },\r\n    { def: \"Meat_Ibex\", label: \"Ibex meat\" },\r\n    { def: \"Meat_Elk\", label: \"Elk meat\" },\r\n    { def: \"Meat_Caribou\", label: \"Caribou meat\" },\r\n    { def: \"Meat_Tortoise\", label: \"Tortoise meat\" },\r\n    { def: \"Meat_Cobra\", label: \"Cobra meat\" },\r\n    { def: \"Meat_Monkey\", label: \"Monkey meat\" },\r\n    { def: \"Meat_Boomalope\", label: \"Boomalope meat\" },\r\n    { def: \"Meat_Warg\", label: \"Warg meat\" },\r\n    { def: \"Meat_Wolf_Timber\", label: \"Wolf meat\" },\r\n    { def: \"Meat_Fox_Fennec\", label: \"Fox meat\" },\r\n    { def: \"Meat_Human\", label: \"Human meat\" },\r\n    { def: \"Milk\", label: \"Milk\" },\r\n    { def: \"InsectJelly\", label: \"Insect jelly\" },\r\n    { def: \"EggChickenUnfertilized\", label: \"Chicken egg (unfert.)\" },\r\n    { def: \"EggDuckUnfertilized\", label: \"Duck egg (unfert.)\" },\r\n    { def: \"EggGooseUnfertilized\", label: \"Goose egg (unfert.)\" },\r\n    { def: \"EggChickenFertilized\", label: \"Chicken egg (fert.)\" },\r\n    { def: \"EggCobraFertilized\", label: \"Cobra egg (fert.)\" },\r\n    { def: \"EggIguanaFertilized\", label: \"Iguana egg (fert.)\" },\r\n    { def: \"EggTortoiseFertilized\", label: \"Tortoise egg (fert.)\" },\r\n    { def: \"EggCassowaryFertilized\", label: \"Cassowary egg (fert.)\" },\r\n    { def: \"EggEmuFertilized\", label: \"Emu egg (fert.)\" },\r\n    { def: \"EggOstrichFertilized\", label: \"Ostrich egg (fert.)\" },\r\n    { def: \"EggTurkeyFertilized\", label: \"Turkey egg (fert.)\" },\r\n    { def: \"EggDuckFertilized\", label: \"Duck egg (fert.)\" },\r\n    { def: \"EggGooseFertilized\", label: \"Goose egg (fert.)\" },\r\n    { def: \"Hay\", label: \"Hay\" },\r\n    { def: \"RawPotatoes\", label: \"Potatoes\" },\r\n    { def: \"RawFungus\", label: \"Raw fungus\" },\r\n    { def: \"RawRice\", label: \"Rice\" },\r\n    { def: \"RawAgave\", label: \"Agave fruit\" },\r\n    { def: \"RawCorn\", label: \"Corn\" },\r\n    { def: \"RawBerries\", label: \"Berries\" },\r\n    { def: \"ChunkSandstone\", label: \"Sandstone chunk\" },\r\n    { def: \"ChunkGranite\", label: \"Granite chunk\" },\r\n    { def: \"ChunkLimestone\", label: \"Limestone chunk\" },\r\n    { def: \"ChunkSlate\", label: \"Slate chunk\" },\r\n    { def: \"ChunkMarble\", label: \"Marble chunk\" },\r\n    { def: \"ChunkSlagSteel\", label: \"Steel slag chunk\" },\r\n    { def: \"Kibble\", label: \"Kibble\" },\r\n    { def: \"Pemmican\", label: \"Pemmican\" },\r\n    { def: \"Chocolate\", label: \"Chocolate\" },\r\n    { def: \"PsychoidLeaves\", label: \"Psychoid leaves\" },\r\n    { def: \"SmokeleafLeaves\", label: \"Smokeleaf leaves\" },\r\n    { def: \"ComponentIndustrial\", label: \"Component\" },\r\n    { def: \"MechSerumHealer\", label: \"Healer mech serum\" },\r\n    { def: \"PsychicSensitizer\", label: \"Psychic sensitizer\" },\r\n    { def: \"PsychicHarmonizer\", label: \"Psychic harmonizer\" },\r\n    { def: \"PsychicReader\", label: \"Psychic reader\" },\r\n    { def: \"Neurocalculator\", label: \"Neurocalculator\" },\r\n    { def: \"LearningAssistant\", label: \"Learning assistant\" },\r\n    { def: \"GastroAnalyzer\", label: \"Gastro-analyzer\" },\r\n    { def: \"Immunoenhancer\", label: \"Immunoenhancer\" },\r\n    { def: \"Coagulator\", label: \"Coagulator\" },\r\n    { def: \"HealingEnhancer\", label: \"Healing enhancer\" },\r\n    { def: \"ToughskinGland\", label: \"Toughskin gland\" },\r\n    { def: \"ArmorskinGland\", label: \"Armorskin gland\" },\r\n    { def: \"StoneskinGland\", label: \"Stoneskin gland\" },\r\n    { def: \"AestheticShaper\", label: \"Aesthetic shaper\" },\r\n    { def: \"AestheticNose\", label: \"Aesthetic nose\" },\r\n    { def: \"LoveEnhancer\", label: \"Love enhancer\" },\r\n    { def: \"DetoxifierStomach\", label: \"Detoxifier stomach\" },\r\n    { def: \"ReprocessorStomach\", label: \"Reprocessor stomach\" },\r\n    { def: \"NuclearStomach\", label: \"Nuclear stomach\" },\r\n    { def: \"CircadianAssistant\", label: \"Circadian assistant\" },\r\n    { def: \"CircadianHalfCycler\", label: \"Circadian half-cycler\" },\r\n    { def: \"Mindscrew\", label: \"Mindscrew\" },\r\n    { def: \"DrillArm\", label: \"Drill arm\" },\r\n    { def: \"FieldHand\", label: \"Field hand\" },\r\n    { def: \"HandTalon\", label: \"Hand talon\" },\r\n    { def: \"ElbowBlade\", label: \"Elbow blade\" },\r\n    { def: \"KneeSpike\", label: \"Knee spike\" },\r\n    { def: \"VenomFangs\", label: \"Venom fangs\" },\r\n    { def: \"VenomTalon\", label: \"Venom talon\" },\r\n    { def: \"Neutroamine\", label: \"Neutroamine\" },\r\n    { def: \"ComponentSpacer\", label: \"Advanced component\" },\r\n    { def: \"Chemfuel\", label: \"Chemfuel\" },\r\n    { def: \"BroadshieldCore\", label: \"Shield core\" },\r\n];\r\n\r\nexport const stats = [\r\n    { def: \"Ability_RequiredPsylink\", label: \"Psylink level\" },\r\n    { def: \"Ability_CastingTime\", label: \"Casting time\" },\r\n    { def: \"Ability_EntropyGain\", label: \"Neural heat gain\" },\r\n    { def: \"Ability_PsyfocusCost\", label: \"Psyfocus cost\" },\r\n    { def: \"Ability_Range\", label: \"Range\" },\r\n    { def: \"Ability_Duration\", label: \"Duration\" },\r\n    { def: \"Ability_EffectRadius\", label: \"Effect radius\" },\r\n    { def: \"Ability_GoodwillImpact\", label: \"Goodwill impact\" },\r\n    { def: \"Ability_DetectChancePerEntropy\", label: \"Detection chance\" },\r\n    {\r\n        def: \"StuffEffectMultiplierArmor\",\r\n        label: \"Armor - Material effect multiplier\",\r\n    },\r\n    {\r\n        def: \"StuffEffectMultiplierInsulation_Cold\",\r\n        label: \"Insulation - Cold - Material effect multiplier\",\r\n    },\r\n    {\r\n        def: \"StuffEffectMultiplierInsulation_Heat\",\r\n        label: \"Insulation - Heat - Material effect multiplier\",\r\n    },\r\n    { def: \"ArmorRating_Sharp\", label: \"Armor - Sharp\" },\r\n    { def: \"ArmorRating_Blunt\", label: \"Armor - Blunt\" },\r\n    { def: \"ArmorRating_Heat\", label: \"Armor - Heat\" },\r\n    { def: \"Insulation_Cold\", label: \"Insulation - Cold\" },\r\n    { def: \"Insulation_Heat\", label: \"Insulation - Heat\" },\r\n    { def: \"EnergyShieldEnergyMax\", label: \"Shield max energy\" },\r\n    { def: \"EnergyShieldRechargeRate\", label: \"Shield recharge rate\" },\r\n    { def: \"SmokepopBeltRadius\", label: \"Smokepop pack radius\" },\r\n    { def: \"EquipDelay\", label: \"Equip delay\" },\r\n    { def: \"MaxHitPoints\", label: \"Max hit points\" },\r\n    { def: \"Mass\", label: \"Mass\" },\r\n    { def: \"MarketValue\", label: \"Market value\" },\r\n    { def: \"MarketValueIgnoreHp\", label: \"Market value ignoring hitpoints\" },\r\n    { def: \"SellPriceFactor\", label: \"Sell price multiplier\" },\r\n    { def: \"RoyalFavorValue\", label: \"Honor value\" },\r\n    { def: \"Flammability\", label: \"Flammability\" },\r\n    { def: \"WorkToMake\", label: \"Work to make\" },\r\n    { def: \"DeteriorationRate\", label: \"Deterioration rate\" },\r\n    { def: \"Beauty\", label: \"Beauty\" },\r\n    { def: \"Cleanliness\", label: \"Cleanliness\" },\r\n    { def: \"Comfort\", label: \"Comfort\" },\r\n    { def: \"Nutrition\", label: \"Nutrition\" },\r\n    { def: \"FoodPoisonChanceFixedHuman\", label: \"Food poison chance\" },\r\n    { def: \"ShootingAccuracyTurret\", label: \"Shooting accuracy\" },\r\n    { def: \"MedicalPotency\", label: \"Medical potency\" },\r\n    { def: \"MedicalQualityMax\", label: \"Medical tend quality maximum\" },\r\n    { def: \"ConstructionSpeedFactor\", label: \"Construction speed\" },\r\n    { def: \"MeditationFocusStrength\", label: \"Meditation psyfocus bonus\" },\r\n    { def: \"PsychicSensitivityOffset\", label: \"Psychic sensitivity offset\" },\r\n    { def: \"WorkToBuild\", label: \"Work to build\" },\r\n    { def: \"DoorOpenSpeed\", label: \"Door opening speed\" },\r\n    { def: \"BedRestEffectiveness\", label: \"Rest effectiveness\" },\r\n    { def: \"TrapMeleeDamage\", label: \"Trap melee damage\" },\r\n    { def: \"TrapSpringChance\", label: \"Trap spring chance\" },\r\n    { def: \"ResearchSpeedFactor\", label: \"Research speed factor\" },\r\n    { def: \"MedicalTendQualityOffset\", label: \"Medical tend quality offset\" },\r\n    { def: \"ImmunityGainSpeedFactor\", label: \"Immunity gain speed factor\" },\r\n    { def: \"WorkTableWorkSpeedFactor\", label: \"Work speed factor\" },\r\n    { def: \"WorkTableEfficiencyFactor\", label: \"Work efficiency factor\" },\r\n    { def: \"JoyGainFactor\", label: \"Recreation power\" },\r\n    {\r\n        def: \"SurgerySuccessChanceFactor\",\r\n        label: \"Surgery success chance factor\",\r\n    },\r\n    { def: \"MeleeDPS\", label: \"Melee DPS\" },\r\n    { def: \"MeleeArmorPenetration\", label: \"Melee armor penetration\" },\r\n    { def: \"MeleeHitChance\", label: \"Melee hit chance\" },\r\n    { def: \"MeleeDodgeChance\", label: \"Melee dodge chance\" },\r\n    { def: \"ShootingAccuracyPawn\", label: \"Shooting accuracy\" },\r\n    { def: \"AimingDelayFactor\", label: \"Aiming time\" },\r\n    { def: \"PawnTrapSpringChance\", label: \"Trap spring chance\" },\r\n    { def: \"IncomingDamageFactor\", label: \"Incoming damage multiplier\" },\r\n    { def: \"MoveSpeed\", label: \"Move speed\" },\r\n    { def: \"MentalBreakThreshold\", label: \"Mental break threshold\" },\r\n    { def: \"PsychicSensitivity\", label: \"Psychic sensitivity\" },\r\n    { def: \"ToxicSensitivity\", label: \"Toxic sensitivity\" },\r\n    { def: \"GlobalLearningFactor\", label: \"Global learning factor\" },\r\n    { def: \"HungerRateMultiplier\", label: \"Hunger rate multiplier\" },\r\n    { def: \"RestRateMultiplier\", label: \"Rest rate multiplier\" },\r\n    { def: \"EatingSpeed\", label: \"Eating speed\" },\r\n    { def: \"ComfyTemperatureMin\", label: \"Minimum comfortable temperature\" },\r\n    { def: \"ComfyTemperatureMax\", label: \"Maximum comfortable temperature\" },\r\n    { def: \"ImmunityGainSpeed\", label: \"Immunity gain speed\" },\r\n    { def: \"CarryingCapacity\", label: \"Carrying capacity\" },\r\n    { def: \"MeatAmount\", label: \"Meat amount\" },\r\n    { def: \"LeatherAmount\", label: \"Leather amount\" },\r\n    { def: \"MinimumHandlingSkill\", label: \"Minimum handling skill\" },\r\n    { def: \"PainShockThreshold\", label: \"Pain shock threshold\" },\r\n    { def: \"ForagedNutritionPerDay\", label: \"Foraged food amount\" },\r\n    { def: \"NegotiationAbility\", label: \"Negotiation ability\" },\r\n    { def: \"PawnBeauty\", label: \"Beauty\" },\r\n    { def: \"ArrestSuccessChance\", label: \"Arrest success chance\" },\r\n    { def: \"TradePriceImprovement\", label: \"Trade price improvement\" },\r\n    { def: \"SocialImpact\", label: \"Social impact\" },\r\n    { def: \"TameAnimalChance\", label: \"Tame animal chance\" },\r\n    { def: \"TrainAnimalChance\", label: \"Train animal chance\" },\r\n    { def: \"WorkSpeedGlobal\", label: \"Global work speed\" },\r\n    { def: \"MiningSpeed\", label: \"Mining speed\" },\r\n    { def: \"DeepDrillingSpeed\", label: \"Deep drilling speed\" },\r\n    { def: \"MiningYield\", label: \"Mining yield\" },\r\n    { def: \"SmoothingSpeed\", label: \"Smoothing speed\" },\r\n    { def: \"ResearchSpeed\", label: \"Research speed\" },\r\n    { def: \"AnimalGatherSpeed\", label: \"Animal gather speed\" },\r\n    { def: \"AnimalGatherYield\", label: \"Animal gather yield\" },\r\n    { def: \"PlantWorkSpeed\", label: \"Plant work speed\" },\r\n    { def: \"PlantHarvestYield\", label: \"Plant harvest yield\" },\r\n    { def: \"HuntingStealth\", label: \"Hunting stealth\" },\r\n    { def: \"ConstructionSpeed\", label: \"Construction speed\" },\r\n    { def: \"ConstructSuccessChance\", label: \"Construct success chance\" },\r\n    {\r\n        def: \"FixBrokenDownBuildingSuccessChance\",\r\n        label: \"Repair success chance\",\r\n    },\r\n    { def: \"MedicalTendSpeed\", label: \"Medical tend speed\" },\r\n    { def: \"MedicalTendQuality\", label: \"Medical tend quality\" },\r\n    { def: \"MedicalOperationSpeed\", label: \"Medical operation speed\" },\r\n    {\r\n        def: \"MedicalSurgerySuccessChance\",\r\n        label: \"Medical surgery success chance\",\r\n    },\r\n    { def: \"SmeltingSpeed\", label: \"Smelting speed\" },\r\n    { def: \"GeneralLaborSpeed\", label: \"General labor speed\" },\r\n    { def: \"DrugSynthesisSpeed\", label: \"Drug synthesis speed\" },\r\n    { def: \"CookSpeed\", label: \"Cooking speed\" },\r\n    { def: \"FoodPoisonChance\", label: \"Food poison chance\" },\r\n    { def: \"DrugCookingSpeed\", label: \"Drug cooking speed\" },\r\n    { def: \"ButcheryFleshSpeed\", label: \"Butchery speed\" },\r\n    { def: \"ButcheryMechanoidSpeed\", label: \"Mechanoid shredding speed\" },\r\n    { def: \"ButcheryFleshEfficiency\", label: \"Butchery efficiency\" },\r\n    {\r\n        def: \"ButcheryMechanoidEfficiency\",\r\n        label: \"Mechanoid shredding efficiency\",\r\n    },\r\n    { def: \"StuffPower_Armor_Sharp\", label: \"Armor - Sharp\" },\r\n    { def: \"StuffPower_Armor_Blunt\", label: \"Armor - Blunt\" },\r\n    { def: \"StuffPower_Armor_Heat\", label: \"Armor - Heat\" },\r\n    { def: \"StuffPower_Insulation_Cold\", label: \"Insulation - Cold\" },\r\n    { def: \"StuffPower_Insulation_Heat\", label: \"Insulation - Heat\" },\r\n    { def: \"MeleeWeapon_AverageDPS\", label: \"Melee damage per second\" },\r\n    {\r\n        def: \"MeleeWeapon_AverageArmorPenetration\",\r\n        label: \"Melee armor penetration\",\r\n    },\r\n    { def: \"MeleeWeapon_DamageMultiplier\", label: \"Melee damage multiplier\" },\r\n    { def: \"MeleeWeapon_CooldownMultiplier\", label: \"Melee cooldown\" },\r\n    { def: \"SharpDamageMultiplier\", label: \"Sharp damage\" },\r\n    { def: \"BluntDamageMultiplier\", label: \"Blunt damage\" },\r\n    { def: \"Bladelink_DetectionChance\", label: \"Detection chance\" },\r\n    { def: \"AccuracyTouch\", label: \"Accuracy (close)\" },\r\n    { def: \"AccuracyShort\", label: \"Accuracy (short)\" },\r\n    { def: \"AccuracyMedium\", label: \"Accuracy (medium)\" },\r\n    { def: \"AccuracyLong\", label: \"Accuracy (long)\" },\r\n    { def: \"RangedWeapon_Cooldown\", label: \"Ranged cooldown\" },\r\n    { def: \"RangedWeapon_DamageMultiplier\", label: \"Damage multiplier\" },\r\n    { def: \"JumpRange\", label: \"Jump range\" },\r\n    { def: \"PsychicEntropyMax\", label: \"Neural heat limit\" },\r\n    { def: \"PsychicEntropyRecoveryRate\", label: \"Neural heat recovery rate\" },\r\n    { def: \"PsychicEntropyGain\", label: \"Neural heat gain\" },\r\n    { def: \"MeditationFocusGain\", label: \"Meditation psyfocus gain\" },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Switch } from \"./Switch\";\r\nimport { TextureProps } from \"./TexturePreview\";\r\nimport Select from \"react-select\";\r\nimport { observer } from \"mobx-react\";\r\nimport { computed } from \"mobx\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport { stuffs } from \"../data/defs\";\r\nimport flatten from \"lodash/flatten\";\r\n\r\n@observer\r\nexport default class TextureStuff extends Component<TextureProps & FloorProps> {\r\n    @computed get options() {\r\n        const { floor } = this.props;\r\n        return flatten(\r\n            floor.stuffCategories.map((cat) =>\r\n                stuffs[cat].map((s) => ({ label: s.label, value: s.color }))\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { settings, toggleSetting, updateSetting } = this.props.texture;\r\n        return (\r\n            <div className=\"columns\" style={{ alignItems: \"center\" }}>\r\n                <div className=\"column is-4\">\r\n                    <Switch\r\n                        id=\"texture-stuff-preview\"\r\n                        label=\"Preview stuff colour\"\r\n                        checked={settings.preview}\r\n                        onChange={() => toggleSetting(\"preview\")}\r\n                    />\r\n                </div>\r\n                {settings.preview && (\r\n                    <>\r\n                        <div className=\"column is-1\">\r\n                            <div\r\n                                className=\"colour-preview\"\r\n                                style={{\r\n                                    backgroundColor: settings.previewColor,\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"column is-7\">\r\n                            <Select\r\n                                id=\"texture-stuff-preview-stuff\"\r\n                                value={this.options.find(\r\n                                    (o) => o.value == settings.previewColor\r\n                                )}\r\n                                defaultValue={this.options[0]}\r\n                                onChange={(o) => {\r\n                                    console.log({ o });\r\n                                    updateSetting(\r\n                                        \"previewColor\",\r\n                                        (o as option).value\r\n                                    );\r\n                                }}\r\n                                options={this.options}\r\n                                className=\"react-select is-small\"\r\n                                classNamePrefix=\" \"\r\n                            ></Select>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, autorun, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport FetchButton from \"./FetchButton\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport TexturePreview from \"./TexturePreview\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport * as yup from \"yup\";\r\nimport \"bulma-slider\";\r\nimport { errorArray } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\nimport { TextureSize } from \"./TextureSize\";\r\nimport { Switch } from \"./Switch\";\r\nimport debounce from \"lodash/debounce\";\r\nimport TextureStuff from \"./TextureStuff\";\r\n\r\nexport interface TextureSettings {\r\n    contrast: number;\r\n    brightness: number;\r\n    mirror: boolean;\r\n    desaturate: boolean;\r\n    revision: number;\r\n    tile: boolean;\r\n    tilesX: number;\r\n    tilesY: number;\r\n    grid: boolean;\r\n    preview: boolean;\r\n    previewColor: string;\r\n}\r\n\r\nexport const TextureSchema = yup.object().shape({\r\n    raw: yup.mixed().required(\"floor must have a texture\"),\r\n    out: yup\r\n        .object()\r\n        .required()\r\n        .shape({\r\n            texture: yup.mixed().required(),\r\n            size: yup.object().when(\"raw\", {\r\n                is: (raw) => !!raw,\r\n                then: yup\r\n                    .object()\r\n                    .shape({ width: yup.number(), height: yup.number() })\r\n                    .test(\r\n                        \"dims\",\r\n                        \"floor textures should be 1024x1024 pixels\",\r\n                        (size) => size?.height === 1024 && size.width === 1024\r\n                    )\r\n                    .required(),\r\n            }),\r\n        }),\r\n});\r\n\r\ntype settingUpdateFn = <\r\n    K extends keyof TextureSettings,\r\n    V extends TextureSettings[K]\r\n>(\r\n    setting: K,\r\n    value: V\r\n) => void;\r\n\r\ntype settingToggleFn = (setting: BooleanProperties<TextureSettings>) => void;\r\ntype Size = { width: number; height: number };\r\n\r\nexport class Texture {\r\n    @observable raw: {\r\n        texture: Blob;\r\n        size: Size;\r\n    };\r\n    @observable out?: {\r\n        texture: Blob;\r\n        size: Size;\r\n    };\r\n    @observable settings: TextureSettings;\r\n    @observable rendering: boolean = false;\r\n\r\n    @action updateSetting: settingUpdateFn = (setting, value): void => {\r\n        this.settings[setting] = value;\r\n        this.settings.revision++;\r\n    };\r\n\r\n    @action toggleSetting: settingToggleFn = (setting): void => {\r\n        this.settings[setting] = !this.settings[setting];\r\n        this.settings.revision++;\r\n    };\r\n\r\n    @action async updateTexture(settings: TextureSettings, raw: Blob) {\r\n        const canvas = this.renderCanvas;\r\n        const {\r\n            brightness,\r\n            desaturate,\r\n            contrast,\r\n            tile,\r\n            tilesX,\r\n            tilesY,\r\n        } = settings;\r\n        if (!canvas || !raw) return;\r\n        this.rendering = true;\r\n\r\n        const rawData = await createImageBitmap(raw);\r\n\r\n        const width = 1024;\r\n        const height = 1024;\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        const filter = `contrast(${contrast / 100}) saturate(${\r\n            desaturate ? 0 : 1\r\n        }) brightness(${brightness / 100})`;\r\n        ctx!.filter = filter;\r\n\r\n        if (tile) {\r\n            const dest = {\r\n                // take account of possible stretching\r\n                width: width / tilesX,\r\n                height: height / tilesY,\r\n            };\r\n            for (let x = 0; x < tilesX; x++) {\r\n                for (let y = 0; y < tilesY; y++) {\r\n                    // draw image in each tile\r\n                    ctx.drawImage(\r\n                        rawData,\r\n                        x * dest.width,\r\n                        y * dest.height,\r\n                        dest.width,\r\n                        dest.height\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            ctx.drawImage(rawData, 0, 0, width, height);\r\n        }\r\n\r\n        // after rendering canvas, update out texture\r\n        canvas.toBlob((blob) => {\r\n            if (blob)\r\n                this.out = {\r\n                    texture: blob,\r\n                    size: { width: canvas.width, height: canvas.height },\r\n                };\r\n            else {\r\n                console.error(\"failed creating out texture\");\r\n            }\r\n            this.rendering = false;\r\n        });\r\n    }\r\n\r\n    setTiles() {\r\n        this.settings.tilesX = Math.floor(1024 / this.raw.size.width);\r\n        this.settings.tilesY = Math.floor(1024 / this.raw.size.height);\r\n    }\r\n    private setRawSize = async () => {\r\n        const image = await createImageBitmap(this.raw.texture);\r\n        this.raw.size = {\r\n            width: image.width,\r\n            height: image.height,\r\n        };\r\n        this.setTiles();\r\n    };\r\n    private renderCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n    private updateTextureDebounced = debounce(this.updateTexture, 500, {\r\n        trailing: true,\r\n        leading: true,\r\n        maxWait: 500,\r\n    });\r\n\r\n    constructor(raw: Blob) {\r\n        this.raw = {\r\n            texture: raw,\r\n            size: {\r\n                width: 0,\r\n                height: 0,\r\n            },\r\n        };\r\n        this.settings = {\r\n            contrast: 100,\r\n            brightness: 100,\r\n            mirror: false,\r\n            desaturate: false,\r\n            tile: false,\r\n            tilesX: 1,\r\n            tilesY: 1,\r\n            revision: 0,\r\n            grid: false,\r\n            preview: false,\r\n            previewColor: \"white\",\r\n        };\r\n        this.setRawSize();\r\n        autorun(\r\n            () => {\r\n                const { settings, raw } = this;\r\n\r\n                // revisions are incremented by settings changes, track it here to trigger autoruns.\r\n                /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n                const revision = settings.revision;\r\n                if (raw) this.updateTextureDebounced(settings, raw.texture);\r\n            },\r\n            {\r\n                name: \"updateTexture\",\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nexport default class TextureComponent extends Component<FloorProps> {\r\n    @action updateTexture = (texture: Blob) => {\r\n        this.props.floor.texture = new Texture(texture);\r\n    };\r\n\r\n    @computed get errors(): string[] {\r\n        // console.log(\r\n        //     this.props.floor.validationErrors.texture,\r\n        //     errorArray(this.props.floor.validationErrors.texture as any)\r\n        // );\r\n        return errorArray(this.props.floor.validationErrors.texture as any);\r\n    }\r\n\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { texture } = floor;\r\n        return (\r\n            <>\r\n                <label className=\"label\">Texture</label>\r\n                {!texture && (\r\n                    <>\r\n                        <UploadButton\r\n                            setTexture={this.updateTexture}\r\n                        ></UploadButton>\r\n                        <FetchButton\r\n                            setTexture={this.updateTexture}\r\n                        ></FetchButton>\r\n                    </>\r\n                )}\r\n                {texture && (\r\n                    <button\r\n                        className=\"button is-danger is-small is-pulled-right\"\r\n                        style={{\r\n                            position: \"relative\",\r\n                            top: \"-30px\",\r\n                            marginBottom: \"-30px\",\r\n                        }}\r\n                        onClick={() => (floor.texture = undefined)}\r\n                    >\r\n                        Clear Texture\r\n                    </button>\r\n                )}\r\n                <TexturePreview texture={texture} />\r\n                {this.errors &&\r\n                    this.errors.map((error, index) => (\r\n                        <Error touched={false} error={error} key={index} />\r\n                    ))}\r\n                {texture && <TextureSize texture={texture} />}\r\n                {texture && (\r\n                    <>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-mirror`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Check pattern tiling\"\r\n                                    checked={texture.settings.mirror}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"mirror\")\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-grid`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Show floor grid\"\r\n                                    checked={texture.settings.grid}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"grid\")\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-desaturate`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Desaturate\"\r\n                                    checked={texture.settings.desaturate}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"desaturate\")\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <TextureStuff texture={texture} floor={floor} />\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">\r\n                                Contrast: {texture.settings.contrast}%\r\n                            </label>\r\n                            <input\r\n                                className=\"slider is-fullwidth is-small is-primary\"\r\n                                step=\"1\"\r\n                                min=\"0\"\r\n                                max=\"200\"\r\n                                value={texture.settings.contrast}\r\n                                onChange={(ev) =>\r\n                                    texture.updateSetting(\r\n                                        \"contrast\",\r\n                                        parseInt(ev.target.value)\r\n                                    )\r\n                                }\r\n                                type=\"range\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">\r\n                                Brightness: {texture.settings.brightness}%\r\n                            </label>\r\n                            <input\r\n                                className=\"slider is-fullwidth is-small is-primary\"\r\n                                step=\"1\"\r\n                                min=\"0\"\r\n                                max=\"200\"\r\n                                value={texture.settings.brightness}\r\n                                onChange={(ev) =>\r\n                                    texture.updateSetting(\r\n                                        \"brightness\",\r\n                                        parseInt(ev.target.value)\r\n                                    )\r\n                                }\r\n                                type=\"range\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export const simpleMode_materials: Material[] = [\r\n    \"Stone\",\r\n    \"Wood\",\r\n    \"Cloth\",\r\n    \"Metal\",\r\n];\r\n\r\nexport const simpleMode_stuffCategories: { [key in Material]: string[] } = {\r\n    Stone: [\"Stony\"],\r\n    Wood: [\"Woody\"],\r\n    Metal: [\"Metallic\"],\r\n    Cloth: [\"Fabric\"],\r\n};\r\n\r\nexport const simpleMode_type: Type[] = [\"Basic\", \"Pretty\", \"Royal\"];\r\n\r\nexport const simpleMode_stuffCost: { [key in Type]: number } = {\r\n    Basic: 4,\r\n    Pretty: 4,\r\n    Royal: 10,\r\n};\r\n\r\nexport const simpleMode_tags: { [key in Type]: string[] } = {\r\n    Basic: [\"Floor\"],\r\n    Pretty: [\"Floor\"],\r\n    Royal: [\"Floor\", \"FineFloor\"],\r\n};\r\n\r\nexport const simpleMode_researchPrerequisites: {\r\n    [mat in Material]: { [key in Type]: string[] };\r\n} = {\r\n    Stone: {\r\n        Basic: [],\r\n        Pretty: [\"Stonecutting\"],\r\n        Royal: [\"Stonecutting\"],\r\n    },\r\n    Wood: {\r\n        Basic: [],\r\n        Pretty: [],\r\n        Royal: [],\r\n    },\r\n    Metal: {\r\n        Basic: [],\r\n        Pretty: [\"Machining\"],\r\n        Royal: [\"Machining\"],\r\n    },\r\n    Cloth: {\r\n        Basic: [\"CarpetMaking\"],\r\n        Pretty: [\"CarpetMaking\"],\r\n        Royal: [\"CarpetMaking\"],\r\n    },\r\n};\r\n\r\nexport const simpleMode_affordances: { [mat in Material]: string[] } = {\r\n    Stone: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Wood: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Metal: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Cloth: [\"Light\", \"Medium\", \"Heavy\"],\r\n};\r\n\r\nexport const simpleMode_affordanceNeeded: { [mat in Material]: string } = {\r\n    Stone: \"Heavy\",\r\n    Wood: \"Heavy\",\r\n    Metal: \"Heavy\",\r\n    Cloth: \"Heavy\",\r\n};\r\n\r\nexport const simpleMode_burnedTerrain: Partial<\r\n    { [mat in Material]: string }\r\n> = {\r\n    Wood: \"BurnedWoodPlankFloor\",\r\n    Cloth: \"BurnedCarpet\",\r\n};\r\n\r\nexport const simpleMode_stats: {\r\n    [mat in Material]: { [key in Type]: defValue[] };\r\n} = {\r\n    Stone: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 75,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 150,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 800,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n        ],\r\n    },\r\n    Wood: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 250,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.25,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 400,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 2100,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n    },\r\n    Cloth: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 250,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.25,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 400,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 2100,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n    },\r\n    Metal: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 800,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.1,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 1500,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 8000,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.3,\r\n            },\r\n        ],\r\n    },\r\n};\r\n","export const edgeTypes: EdgeType[] = [\"Fade\", \"FadeRough\", \"Hard\"];\r\n","import classNames from \"classnames\";\r\nimport { action, computed } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { DeleteX } from \"../StuffedFloorModGenerator\";\r\nimport { errorArray, ValidationErrors } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\n\r\ninterface CostListProps {\r\n    id: string;\r\n    costs: defValue[];\r\n    errors?: ValidationErrors<defValue>[];\r\n}\r\n\r\n@observer\r\nexport default class CostList extends Component<CostListProps> {\r\n    static costCount = 0;\r\n\r\n    @computed get errorArray(): string[] {\r\n        const { errors } = this.props;\r\n        const msgs: string[] = [];\r\n        if (errors) {\r\n            for (const error of errors) {\r\n                msgs.push(...errorArray(error));\r\n            }\r\n        }\r\n        return [...new Set(msgs)];\r\n    }\r\n\r\n    @action add = () => {\r\n        this.props.costs.push({\r\n            id: `cost-${this.props.id}-${CostList.costCount++}`,\r\n            def: \"\",\r\n            value: 0,\r\n        });\r\n    };\r\n\r\n    @action delete = (id: id) => {\r\n        const removing = this.props.costs.findIndex((cost) => cost.id === id);\r\n        if (removing < 0) return;\r\n        this.props.costs.splice(removing, 1);\r\n    };\r\n\r\n    render() {\r\n        const { costs, errors } = this.props;\r\n\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label\">CostList</label>\r\n                <div className=\"costlist tags\">\r\n                    {costs.map((defCount, index) => (\r\n                        <Cost\r\n                            cost={defCount}\r\n                            key={defCount.id}\r\n                            onDelete={this.delete}\r\n                            errors={errors?.[index]}\r\n                        />\r\n                    ))}\r\n                    <button\r\n                        className=\"button is-success is-small\"\r\n                        onClick={this.add}\r\n                    >\r\n                        Add Cost\r\n                    </button>\r\n                </div>\r\n                {this.errorArray.map((msg, index) => (\r\n                    <Error touched={true} error={msg} key={index} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface CostProps {\r\n    cost: defValue;\r\n    errors?: ValidationErrors<defValue>;\r\n    onDelete: (id: id) => void;\r\n}\r\n\r\n@observer\r\nexport class Cost extends Component<CostProps> {\r\n    render() {\r\n        const { cost, onDelete, errors } = this.props;\r\n        return (\r\n            <div className=\"defCount tag is-info\">\r\n                <input\r\n                    id={`defCount-count-${cost.id}`}\r\n                    placeholder=\"count\"\r\n                    value={cost.value}\r\n                    onChange={(e) =>\r\n                        (cost.value = parseInt(e.target.value) || 0)\r\n                    }\r\n                    style={{\r\n                        width: `calc( ${\r\n                            cost.value.toString().length\r\n                        }ch + 5px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: cost.value === 0,\r\n                        error: errors?.value,\r\n                    })}\r\n                />\r\n                ×\r\n                <input\r\n                    id={`defCount-def-${cost.id}`}\r\n                    placeholder=\"thingDef\"\r\n                    value={cost.def}\r\n                    onChange={(e) => (cost.def = e.target.value)}\r\n                    style={{\r\n                        width: cost.def\r\n                            ? `calc( ${cost.def.length}ch + 15px )`\r\n                            : `calc( ${\"thingDef\".length}ch + 15px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: !cost.def,\r\n                        error: errors?.def,\r\n                    })}\r\n                    list=\"building-materials-list\"\r\n                />\r\n                <div className=\"remove\" onClick={() => onDelete(cost.id)}>\r\n                    <DeleteX />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import classNames from \"classnames\";\r\nimport { action, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { ChangeEvent, Component } from \"react\";\r\nimport { DeleteX } from \"../StuffedFloorModGenerator\";\r\nimport { errorArray, ValidationErrors } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\n\r\ninterface StatListProps {\r\n    id: string;\r\n    stats: defValue[];\r\n    errors?: ValidationErrors<defValue>[];\r\n}\r\n\r\n@observer\r\nexport default class StatList extends Component<StatListProps> {\r\n    static statCount = 0;\r\n\r\n    @computed get errorArray(): string[] {\r\n        const { errors } = this.props;\r\n        const msgs: string[] = [];\r\n        if (errors) {\r\n            for (const error of errors) {\r\n                msgs.push(...errorArray(error));\r\n            }\r\n        }\r\n        return [...new Set(msgs)];\r\n    }\r\n\r\n    @action add = () => {\r\n        this.props.stats.push({\r\n            id: `stat-${this.props.id}-${StatList.statCount++}`,\r\n            def: \"\",\r\n            value: 0,\r\n        });\r\n    };\r\n\r\n    @action delete = (id: id) => {\r\n        const removing = this.props.stats.findIndex((stat) => stat.id === id);\r\n        if (removing < 0) return;\r\n        this.props.stats.splice(removing, 1);\r\n    };\r\n\r\n    render() {\r\n        const { stats, errors } = this.props;\r\n\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label\">StatList</label>\r\n                <div className=\"statlist tags\">\r\n                    {stats.map((stat, index) => (\r\n                        <Stat\r\n                            stat={stat}\r\n                            key={stat.id}\r\n                            onDelete={this.delete}\r\n                            errors={errors?.[index]}\r\n                        />\r\n                    ))}\r\n                    <button\r\n                        className=\"button is-success is-small\"\r\n                        onClick={this.add}\r\n                    >\r\n                        Add Stat\r\n                    </button>\r\n                </div>\r\n                {this.errorArray.map((msg, index) => (\r\n                    <Error touched={true} error={msg} key={index} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StatProps {\r\n    stat: defValue;\r\n    errors?: ValidationErrors<defValue>;\r\n    onDelete: (id: id) => void;\r\n}\r\n\r\ninterface StatState {\r\n    valueTemp: string;\r\n}\r\n\r\n@observer\r\nexport class Stat extends Component<StatProps, StatState> {\r\n    @observable valueTemp: string;\r\n\r\n    @action updateValue = (ev: ChangeEvent<HTMLInputElement>): void => {\r\n        this.valueTemp = ev.target.value;\r\n    };\r\n\r\n    @action applyValue = (): void => {\r\n        this.props.stat.value =\r\n            parseFloat(this.valueTemp.replace(/,/g, \".\")) || 0;\r\n        this.valueTemp = this.props.stat.value.toString();\r\n    };\r\n\r\n    constructor(props: StatProps) {\r\n        super(props);\r\n        this.valueTemp = props.stat.value.toString();\r\n    }\r\n\r\n    render() {\r\n        const { stat, errors, onDelete } = this.props;\r\n        return (\r\n            <div className=\"defCount tag is-info\">\r\n                <input\r\n                    id={`defCount-def-${stat.id}`}\r\n                    placeholder=\"thingDef\"\r\n                    value={stat.def}\r\n                    onChange={(e) => (stat.def = e.target.value)}\r\n                    style={{\r\n                        width: stat.def\r\n                            ? `calc( ${stat.def.length}ch + 15px )`\r\n                            : `calc( ${\"thingDef\".length}ch + 15px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: !stat.def,\r\n                        error: errors?.def,\r\n                    })}\r\n                    list=\"stats-list\"\r\n                />\r\n                =\r\n                <input\r\n                    id={`defCount-count-${stat.id}`}\r\n                    value={this.valueTemp}\r\n                    onChange={this.updateValue}\r\n                    onBlur={this.applyValue}\r\n                    style={{\r\n                        width: `calc( ${\r\n                            this.valueTemp.toString().length\r\n                        }ch + 5px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: stat.value === 0,\r\n                        error: errors?.value,\r\n                    })}\r\n                />\r\n                <div className=\"remove\" onClick={() => onDelete(stat.id)}>\r\n                    <DeleteX />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import uniq from \"lodash/uniq\";\r\nimport { action, computed, IObservableArray, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    ActionMeta,\r\n    OptionsType,\r\n    OptionTypeBase,\r\n    ValueType,\r\n} from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { Error } from \"./Error\";\r\n\r\ninterface StringListProps {\r\n    label: string;\r\n    selected: IObservableArray<string>;\r\n    options: string[];\r\n    defs?: boolean;\r\n    errors?: string[];\r\n    id: string;\r\n}\r\n\r\n@observer\r\nexport class StringList extends Component<StringListProps> {\r\n    @computed get options() {\r\n        return this.props.options.map((o) => ({ label: o, value: o }));\r\n    }\r\n\r\n    @observable touched = false;\r\n\r\n    @action\r\n    handleChange = (\r\n        _value: ValueType<OptionTypeBase>,\r\n        meta: ActionMeta<OptionTypeBase>\r\n    ) => {\r\n        const value = _value as OptionsType<OptionTypeBase>;\r\n        const { selected } = this.props;\r\n        this.touched = true;\r\n        switch (meta.action) {\r\n            case \"clear\":\r\n                selected.clear();\r\n                break;\r\n            case \"select-option\":\r\n                selected.push(meta.option!.value);\r\n                break;\r\n            case \"create-option\":\r\n                // new option is not listed in meta,\r\n                // add whatever we don't already have\r\n                // should be one element, but it can't\r\n                // hurt to be safe, right?...\r\n                const newOptions = value.filter(\r\n                    (v) => selected.indexOf(v.value) < 0\r\n                );\r\n                for (const option of newOptions) {\r\n                    selected.push(option.value);\r\n                }\r\n                break;\r\n            case \"pop-value\":\r\n            case \"remove-value\":\r\n                const index = selected.indexOf(meta.removedValue!.value);\r\n                if (index >= 0) {\r\n                    selected.splice(index, 1);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    render() {\r\n        const { label, selected, id, errors } = this.props;\r\n        const msgs = Array.isArray(errors) ? errors : [errors];\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label\" htmlFor={id}>\r\n                    {label}\r\n                </label>\r\n                <CreatableSelect\r\n                    id={id}\r\n                    isMulti\r\n                    onChange={this.handleChange}\r\n                    onBlur={() => (this.touched = true)}\r\n                    options={this.options}\r\n                    value={selected.map((cat) => ({\r\n                        label: cat,\r\n                        value: cat,\r\n                    }))}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\" \"\r\n                />\r\n                {errors &&\r\n                    uniq(msgs).map((error, index) => (\r\n                        <Error\r\n                            touched={this.touched}\r\n                            error={error}\r\n                            key={index}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { ValueType } from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { Error } from \"./Error\";\r\n\r\ninterface StringWithDefaultProps {\r\n    label: string;\r\n    selected: string;\r\n    options: string[];\r\n    error?: string;\r\n    id: string;\r\n    noneOption?: boolean;\r\n    updateSelected: (value: string) => void;\r\n}\r\n\r\n@observer\r\nexport class StringWithDefaults extends Component<StringWithDefaultProps> {\r\n    @observable touched = false;\r\n\r\n    @computed get selectedOption(): option | undefined {\r\n        const { selected } = this.props;\r\n        if (selected) {\r\n            return {\r\n                label: selected,\r\n                value: selected,\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    @computed get options(): option[] {\r\n        const opts = this.props.options.map((o) => ({ value: o, label: o }));\r\n        if (this.props.noneOption) opts.push({ value: \"\", label: \"<None>\" });\r\n        return opts;\r\n    }\r\n\r\n    @action onChange = (value: ValueType<option>) => {\r\n        this.touched = true;\r\n        this.props.updateSelected((value as option).value);\r\n    };\r\n\r\n    render() {\r\n        const { label, id, error } = this.props;\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label\" htmlFor={id}>\r\n                    {label}\r\n                </label>\r\n                <CreatableSelect\r\n                    id={id}\r\n                    onChange={this.onChange}\r\n                    onBlur={() => (this.touched = true)}\r\n                    options={this.options}\r\n                    value={this.selectedOption}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\" \"\r\n                />\r\n                <Error touched={this.touched} error={error} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { simpleMode_materials, simpleMode_type } from \"../data/defaults\";\r\nimport {\r\n    stuffCategories,\r\n    researchDefs,\r\n    burnedFloorDefs,\r\n    affordances,\r\n    tags,\r\n} from \"../data/defs\";\r\nimport { edgeTypes } from \"../data/enums\";\r\nimport CostList from \"./CostList\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport StatList from \"./StatList\";\r\nimport { StringList } from \"./StringList\";\r\nimport Input from \"./Input\";\r\nimport { StringWithDefaults } from \"./StringWithDefaults\";\r\n\r\n@observer\r\nexport class FloorSettings extends Component<FloorProps> {\r\n    @observable detailed: boolean = false;\r\n    @observable simple: SimpleSettings = {\r\n        material: \"Stone\",\r\n        type: \"Pretty\",\r\n    };\r\n\r\n    @action toggleDetailed = () => {\r\n        this.detailed = !this.detailed;\r\n\r\n        if (!this.detailed)\r\n            this.props.floor.resetFloor(this.simple.material, this.simple.type);\r\n    };\r\n\r\n    @action setMaterial = (material: Material) => {\r\n        this.simple.material = material;\r\n        this.props.floor.resetFloor(material, this.simple.type);\r\n    };\r\n\r\n    @action setType = (type: Type) => {\r\n        this.simple.type = type;\r\n        this.props.floor.resetFloor(this.simple.material, type);\r\n    };\r\n\r\n    render() {\r\n        const { floor } = this.props;\r\n        const settings = this.detailed ? (\r\n            /* eslint-disable react/jsx-pascal-case */\r\n            <FloorSettings_Detail floor={floor}></FloorSettings_Detail>\r\n        ) : (\r\n            <FloorSettings_Simple\r\n                floor={floor}\r\n                settings={this.simple}\r\n                setMaterial={this.setMaterial}\r\n                setType={this.setType}\r\n            ></FloorSettings_Simple>\r\n            /* eslint-enable react/jsx-pascal-case */\r\n        );\r\n\r\n        return (\r\n            <div className=\"settings\">\r\n                <div className=\"field\">\r\n                    <input\r\n                        id={`${floor.id}-settings-detailed`}\r\n                        type=\"checkbox\"\r\n                        className=\"switch is-rounded is-outlined is-small\"\r\n                        checked={this.detailed}\r\n                        onChange={this.toggleDetailed}\r\n                    />\r\n                    <label htmlFor={`${floor.id}-settings-detailed`}>\r\n                        advanced mode\r\n                    </label>\r\n                </div>\r\n                {settings}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nexport class FloorSettings_Detail extends Component<FloorProps> {\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { validationErrors: errors } = floor;\r\n        return (\r\n            <div className=\"settings-detail\">\r\n                <StringList\r\n                    label=\"Stuff Categories\"\r\n                    id={`${floor.id}-stuff-categories`}\r\n                    options={stuffCategories}\r\n                    selected={floor.stuffCategories}\r\n                    errors={errors.stuffCategories}\r\n                ></StringList>\r\n                <Input\r\n                    label=\"Stuff Cost\"\r\n                    value={floor.stuffcost}\r\n                    id={`${floor.id}-stuff-cost`}\r\n                    onChange={(e) =>\r\n                        (floor.stuffcost = parseInt(e.target.value) || 0)\r\n                    }\r\n                    error={errors.stuffcost}\r\n                />\r\n                <CostList\r\n                    {...floor}\r\n                    errors={floor.validationErrors.costs}\r\n                ></CostList>\r\n                <StatList\r\n                    {...floor}\r\n                    errors={floor.validationErrors.stats}\r\n                ></StatList>\r\n                <StringList\r\n                    label=\"Research Prerequisites\"\r\n                    id={`${floor.id}-research-prerequisites`}\r\n                    options={researchDefs.map((d) => d.def)}\r\n                    selected={floor.researchPrerequisites}\r\n                    errors={errors.researchPrerequisites}\r\n                ></StringList>\r\n                <StringWithDefaults\r\n                    label=\"Burned Def\"\r\n                    id={`${floor.id}-burned-def`}\r\n                    selected={floor.burnedDef || \"\"}\r\n                    options={burnedFloorDefs}\r\n                    error={errors.burnedDef}\r\n                    updateSelected={(value) => (floor.burnedDef = value)}\r\n                />\r\n                <div className=\"field\">\r\n                    <label htmlFor={`${floor.id}-edge-type`} className=\"label\">\r\n                        Edge Type\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-edge-type`}\r\n                        defaultValue={{\r\n                            label: floor.edgeType as string,\r\n                            value: floor.edgeType as string,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            floor.edgeType = option.value as EdgeType;\r\n                        }}\r\n                        options={edgeTypes.map((edge) => ({\r\n                            label: edge,\r\n                            value: edge,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n                <StringWithDefaults\r\n                    label=\"Affordance Needed\"\r\n                    id={`${floor.id}-affordance-needed`}\r\n                    selected={floor.terrainAffordanceNeeded}\r\n                    options={affordances}\r\n                    updateSelected={(value) =>\r\n                        (floor.terrainAffordanceNeeded = value as Affordance)\r\n                    }\r\n                    error={errors.terrainAffordanceNeeded}\r\n                />\r\n                <StringList\r\n                    label=\"Affordances\"\r\n                    id={`${floor.id}-affordances`}\r\n                    options={affordances}\r\n                    selected={floor.affordances}\r\n                    errors={errors.affordances}\r\n                ></StringList>\r\n                <StringList\r\n                    label=\"Tags\"\r\n                    id={`${floor.id}-tags`}\r\n                    options={tags}\r\n                    selected={floor.tags}\r\n                    errors={errors.tags}\r\n                ></StringList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface SimpleSettings {\r\n    material: Material;\r\n    type: Type;\r\n}\r\n\r\ninterface SimpleSettingsProps extends FloorProps {\r\n    settings: SimpleSettings;\r\n    setMaterial: (mat: Material) => void;\r\n    setType: (type: Type) => void;\r\n}\r\n\r\n@observer\r\nexport class FloorSettings_Simple extends Component<SimpleSettingsProps> {\r\n    render() {\r\n        const { settings, floor, setMaterial, setType } = this.props;\r\n        return (\r\n            <div className=\"settings-simple\">\r\n                <div className=\"field\">\r\n                    <label\r\n                        htmlFor={`${floor.id}-simple-material`}\r\n                        className=\"label\"\r\n                    >\r\n                        Material\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-simple-material`}\r\n                        value={{\r\n                            label: settings.material,\r\n                            value: settings.material,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            setMaterial(option.value as Material);\r\n                        }}\r\n                        options={simpleMode_materials.map((mat) => ({\r\n                            label: mat,\r\n                            value: mat,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label\r\n                        htmlFor={`${floor.id}-simple-type`}\r\n                        className=\"label\"\r\n                    >\r\n                        Beauty\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-simple-type`}\r\n                        defaultValue={{\r\n                            label: settings.type,\r\n                            value: settings.type,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            setType(option.value as Type);\r\n                        }}\r\n                        options={simpleMode_type.map((type) => ({\r\n                            label: type,\r\n                            value: type,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport Input from \"./Input\";\r\n\r\n@observer\r\nexport class FloorBasics extends Component<FloorProps> {\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { validationErrors: errors } = floor;\r\n\r\n        return (\r\n            <>\r\n                <Input\r\n                    label=\"Label\"\r\n                    error={errors.label}\r\n                    id={`${floor.id}-label`}\r\n                    value={floor.label}\r\n                    onChange={(e) => (floor.label = e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"Description\"\r\n                    id={`${floor.id}-desc`}\r\n                    value={floor.description}\r\n                    onChange={(e) => (floor.description = e.target.value)}\r\n                    error={errors.description}\r\n                    element={<textarea className=\"textarea\" />}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { action, computed, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport { sanitizeString, unwrapErrors } from \"../utils\";\nimport TextureComponent, { Texture, TextureSchema } from \"./Texture\";\nimport {\n    simpleMode_stuffCost,\n    simpleMode_stats,\n    simpleMode_stuffCategories,\n    simpleMode_researchPrerequisites,\n    simpleMode_tags,\n    simpleMode_burnedTerrain,\n} from \"../data/defaults\";\nimport { about } from \"../StuffedFloorModGenerator\";\nimport * as yup from \"yup\";\nimport { FloorSettings } from \"./FloorSettings\";\nimport { FloorBasics } from \"./FloorBasics\";\nimport random from \"lodash/random\";\n\nexport interface FloorProps {\n    floor: Floor;\n}\n\nexport const DefSchema = yup\n    .string()\n    .label(\"def\")\n    .trim()\n    .matches(\n        /^[a-z]+[a-z0-9_\\.]*$/i,\n        \"def must start with a letter, and may not contain spaces or special characters other than '_'\"\n    );\nexport const CostSchema = yup.object().shape({\n    def: DefSchema.required(),\n    value: yup.number().label(\"cost\").required().moreThan(0),\n});\nexport const StatSchema = yup.object().shape({\n    def: DefSchema.required(),\n    value: yup.number().label(\"stat\").required(),\n});\n\nexport const FloorSchema = yup.object().shape({\n    defName: yup.string().required(),\n    label: yup.string().required(),\n    description: yup.string().required(),\n    texture: TextureSchema.required(\"floor must have a texture\"),\n    researchPrerequisites: yup.array().of(DefSchema.required()),\n    stuffCost: yup.number().integer().positive(),\n    stuffCategories: yup.array().required().of(DefSchema.required()),\n    costs: yup.array().of(CostSchema),\n    stats: yup.array().of(StatSchema),\n    affordances: yup.array().required().min(1).of(DefSchema.required()),\n    tags: yup.array().of(yup.string()),\n    burnedDef: DefSchema,\n    terrainAffordanceNeeded: DefSchema,\n});\n\nexport class Floor {\n    static floorCount = 0;\n\n    id: string;\n    @computed get defName(): string {\n        return sanitizeString(`StuffedFloor_${about.name}_${this.label}`);\n    }\n    @observable label: string = \"\";\n    @observable description: string = \"\";\n    @observable texture?: Texture;\n    @observable edgeType: EdgeType = \"Hard\";\n    @observable stuffCategories = observable.array<string>([]);\n    @observable stuffcost: number = 0;\n    @observable costs: defValue[] = [];\n    @observable stats: defValue[] = [];\n    @observable affordances = observable.array<string>([\n        \"Light\",\n        \"Medium\",\n        \"Heavy\",\n    ]);\n    @observable tags = observable.array<string>([\"Floor\"]);\n    @observable terrainAffordanceNeeded: Affordance = \"Heavy\";\n    @observable researchPrerequisites = observable.array<string>([]);\n    @observable burnedDef?: string;\n\n    @action resetFloor = (material: Material, type: Type) => {\n        this.costs = [];\n        this.affordances.replace([\"Light\", \"Medium\", \"Heavy\"]);\n        this.terrainAffordanceNeeded = \"Heavy\";\n        this.edgeType = \"Hard\";\n        this.stuffCategories.replace(simpleMode_stuffCategories[material]);\n        this.researchPrerequisites.replace(\n            simpleMode_researchPrerequisites[material][type]\n        );\n        this.burnedDef = simpleMode_burnedTerrain[material];\n        this.stats = simpleMode_stats[material][type];\n        this.stuffcost = simpleMode_stuffCost[type];\n        this.tags.replace(simpleMode_tags[type]);\n    };\n\n    @computed get validationErrors() {\n        return unwrapErrors<Floor>(this, FloorSchema);\n    }\n    constructor() {\n        this.id = `floor-${Floor.floorCount++}`;\n        this.resetFloor(\"Stone\", \"Pretty\");\n    }\n}\n\nexport interface TextureLoaderProps {\n    setTexture: (texture: Blob) => void;\n}\n\n@observer\nexport default class FloorComponent extends Component<FloorProps> {\n    constructor(props: FloorProps) {\n        super(props);\n        // this.fetchKitten();\n    }\n\n    async fetchKitten() {\n        try {\n            const result = await fetch(\n                `https://placekitten.com/${random(200, 500)}/${random(\n                    200,\n                    500\n                )}`\n            );\n            const blob = await result.blob();\n            this.props.floor.texture = new Texture(blob);\n        } catch (err) {\n            console.error(`Error fetching kitten`);\n        }\n    }\n\n    render() {\n        const floor = this.props.floor;\n        return (\n            <div className=\"floor\">\n                <div className=\"top columns\">\n                    <div className=\"basics column is-half\">\n                        <FloorBasics floor={floor}></FloorBasics>\n                        <FloorSettings floor={floor}></FloorSettings>\n                    </div>\n                    <div className=\"texture column is-half\">\n                        <TextureComponent floor={floor}></TextureComponent>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import { action } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { DeleteX, FloorStore } from \"../StuffedFloorModGenerator\";\r\nimport { Floor } from \"./Floor\";\r\n\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n// bulma requires an 'a' element for tab tags,\r\n// which can't have a link.\r\n\r\ninterface TabManagerProps {\r\n    floors: FloorStore;\r\n    onTabChange: (tab: string) => void;\r\n    tab: string;\r\n}\r\n@observer\r\nexport default class TabManager extends Component<TabManagerProps> {\r\n    @action addFloor = () => {\r\n        const { floors, onTabChange } = this.props;\r\n        const floor = new Floor();\r\n        floors.addFloor(floor);\r\n        onTabChange(floor.id);\r\n    };\r\n\r\n    render() {\r\n        const { tab, floors, onTabChange } = this.props;\r\n\r\n        return (\r\n            <div className=\"tabs is-boxed\">\r\n                <ul>\r\n                    <li className={tab === \"about\" ? \"is-active\" : \"\"}>\r\n                        <a onClick={() => onTabChange(\"about\")}>About</a>\r\n                    </li>\r\n                    {floors.floors.map((floor) => (\r\n                        <li\r\n                            key={floor.id}\r\n                            className={tab === floor.id ? \"is-active\" : \"\"}\r\n                        >\r\n                            <a onClick={() => onTabChange(floor.id)}>\r\n                                {floor.label || floor.id}\r\n                                {tab === floor.id && (\r\n                                    <DeleteX\r\n                                        className=\"delete-x\"\r\n                                        onClick={() =>\r\n                                            floors.removeFloor(floor.id)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                    <li className=\"create-floor-button\">\r\n                        <a onClick={this.addFloor}>+ Add Floor</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport DownloadButton from \"./components/DownloadButton\";\nimport { observer } from \"mobx-react\";\nimport AboutComponent, { About } from \"./components/About\";\nimport { action, autorun, IObservableValue, observable } from \"mobx\";\nimport FloorComponent, { Floor } from \"./components/Floor\";\nimport \"./styles/style.scss\";\nimport TabManager from \"./components/TabManager\";\nimport { buildingMaterials, stats } from \"./data/defs\";\n\nexport class FloorStore {\n    @observable floors = observable.array<Floor>([]);\n    @action addFloor(floor: Floor): void {\n        this.floors.push(floor);\n    }\n    @action removeFloor(id: string): void {\n        const floor = this.floors.find((f) => f.id === id);\n        if (floor) this.floors.remove(floor);\n    }\n\n    constructor() {\n        this.floors.push(new Floor());\n    }\n}\n\n@observer\nexport class DeleteX extends Component<Partial<React.SVGProps<SVGSVGElement>>> {\n    render() {\n        return (\n            <>\n                <svg\n                    height=\"14\"\n                    width=\"14\"\n                    viewBox=\"0 0 20 20\"\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    {...this.props}\n                >\n                    <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path>\n                </svg>\n            </>\n        );\n    }\n}\n\nexport const about = new About();\nexport const floors = new FloorStore();\nexport const submitting = observable.box(false);\n\n@observer\nexport default class StuffedFloorModGenerator extends Component {\n    @observable about: About = about;\n    @observable floors: FloorStore = floors;\n    @observable tab: string = \"floor-0\";\n    @observable submitting: IObservableValue<boolean> = submitting;\n\n    @action changeTab = (tab: string) => {\n        this.tab = tab;\n    };\n\n    render() {\n        const floor = this.floors.floors.find((f) => f.id === this.tab);\n        return (\n            <div id=\"main\" className=\"container\">\n                <div className=\"box\">\n                    <TabManager\n                        floors={this.floors}\n                        tab={this.tab}\n                        onTabChange={this.changeTab}\n                    ></TabManager>\n                    {this.tab === \"about\" && (\n                        <AboutComponent about={this.about}></AboutComponent>\n                    )}\n                    {floor && <FloorComponent floor={floor}></FloorComponent>}\n                </div>\n\n                <datalist id=\"building-materials-list\">\n                    {buildingMaterials.map((m, i) => (\n                        <option key={i}>{m.def}</option>\n                    ))}\n                </datalist>\n\n                <datalist id=\"stats-list\">\n                    {stats.map((s, i) => (\n                        <option key={i}>{s.def}</option>\n                    ))}\n                </datalist>\n\n                <DownloadButton\n                    about={this.about}\n                    floors={this.floors}\n                ></DownloadButton>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport StuffedFloorGenerator from \"./StuffedFloorModGenerator\";\n\nReactDOM.render(\n    // <React.StrictMode>\n    <StuffedFloorGenerator />,\n    // </React.StrictMode>\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}