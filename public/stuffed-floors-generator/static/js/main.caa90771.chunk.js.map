{"version":3,"sources":["utils.ts","mod-builder.ts","components/Error.tsx","components/ErrorList.tsx","components/DownloadButton.tsx","components/Help.tsx","components/Input.tsx","components/PreviewImage.tsx","components/Mod.tsx","components/FetchButton.tsx","components/TexturePreview.tsx","components/UploadButton.tsx","components/Switch.tsx","components/TextureSize.tsx","data/defs.ts","components/TextureStuff.tsx","components/Texture.tsx","data/defaults.ts","data/enums.ts","components/DeleteX.tsx","components/CostList.tsx","components/StatList.tsx","components/StringList.tsx","components/StringWithDefaults.tsx","components/FloorSettings_Detail.tsx","components/FloorSettings_Simple.tsx","components/FloorSettings.tsx","components/FloorBasics.tsx","components/Floor.tsx","components/TabManager.tsx","components/About.tsx","StuffedFloorModGenerator.tsx","index.tsx"],"names":["alphanumericRegex","sanitizeString","str","replace","elementSize","element","computedStyle","getComputedStyle","width","clientWidth","height","clientHeight","parseFloat","paddingTop","paddingBottom","paddingLeft","paddingRight","unwrapErrors","object","schema","validateSync","abortEarly","err","ValidationError","errors","inner","error","set","path","message","waitForFontLoad","font","a","timeout","interval","Promise","resolve","reject","poller","setInterval","document","fonts","load","check","clearInterval","setTimeout","errorArray","errorObject","msgs","key","Object","prototype","hasOwnProperty","call","el","push","Array","isArray","forEach","e","isObject","aboutTemplate","handlebars","compile","floorDefTemplate","RenderAbout","about","validationErrors","packageId","RenderFloors","floors","BuildMod","zip","jszip","modFolder","name","aboutXml","file","floorXml","floor","texture","out","defName","generateAsync","type","Error","observer","this","props","touched","submitting","get","className","Component","ErrorList","label","map","index","DownloadButton","classNames","button","building","onClick","download","isEmpty","filter","id","observable","computed","action","length","archive","saveAs","Help","video","title","children","fontSize","Tooltip","placement","arrow","interactive","Input","small","help","inputProps","Element","React","cloneElement","onBlur","htmlFor","PREVIEW_SIZE","PreviewImage","canvasRef","createRef","componentDidUpdate","renderCanvas","componentDidMount","canvas","current","ctx","getContext","availableSize","parentElement","Math","min","scale","fillStyle","fillRect","bannerSettings","merge","defaultBannerSettings","bannerHeight","pointOffset","x","y","bannerOffset","drawBannerBackground","drawTextures","drawBannerForeground","drawBannerTitle","mod","ref","data-mod","floorCount","cols","ceil","sqrt","rows","floorSize","i","drawFloorPreview","col","row","size","tl","titleSize","textBaseline","textAlign","fillText","createImageBitmap","textureData","stuffCount","stuffs","previewSize","angleOffset","abs","tan","previewOffset","previewTiles","pos","translate","rotate","globalCompositeOperation","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","drawImage","color","_settings","colours","text","titleOffset","margin","bannerSlant","POINTS","topLeft","topRight","bottomLeft","bottomRight","bannerFg","createPath","fill","pointLeft","pointRight","bannerBg","context","beginPath","points","moveTo","lineTo","closePath","blueColours","boxBg","Mod","author","console","log","ModSchema","yup","required","description","url","ModComponent","value","onChange","target","FetchButton","inputRef","style","marginTop","onSubmit","input","fetch","result","blob","setTexture","TexturePreview","mirror","settings","sw","sh","preview","previewColor","grid","setLineDash","strokeStyle","lineWidth","stroke","data-rendering","rendering","data-revision","revision","UploadButton","accept","loadTexture","PureComponent","event","files","Switch","checked","switch","TextureSize","toggleSetting","updateSetting","raw","tile","tilesX","tilesY","alignItems","rounded","outlined","src","alt","ev","parseInt","stuffCategories","Metallic","def","Woody","Stony","Fabric","Leathery","affordances","tags","researchDefs","burnedFloorDefs","buildingMaterials","stats","TextureStuff","backgroundColor","options","find","o","defaultValue","classNamePrefix","flatten","cat","s","TextureSchema","shape","Texture","setRawSize","image","setTiles","createElement","updateTextureDebounced","debounce","updateTexture","trailing","leading","maxWait","contrast","brightness","desaturate","autorun","rawData","dest","toBlob","max","setting","TextureComponent","position","top","marginBottom","undefined","step","simpleMode_materials","simpleMode_stuffCategories","Stone","Wood","Metal","Cloth","simpleMode_type","simpleMode_stuffCost","Basic","Pretty","Royal","simpleMode_tags","simpleMode_researchPrerequisites","simpleMode_burnedTerrain","simpleMode_stats","edgeTypes","DeleteX","viewBox","aria-hidden","focusable","d","CostList","costs","defCount","cost","onDelete","delete","add","msg","Set","costCount","removing","findIndex","splice","Cost","placeholder","toString","blank","list","StatList","stat","statCount","Stat","valueTemp","updateValue","applyValue","StringList","selected","isMulti","handleChange","uniq","_value","meta","clear","option","newOptions","v","indexOf","removedValue","StringWithDefaults","selectedOption","opts","noneOption","updateSelected","FloorSettings_Detail","stuffcost","researchPrerequisites","burnedDef","edgeType","_option","edge","terrainAffordanceNeeded","FloorSettings_Simple","setMaterial","setType","material","mat","FloorSettings","detailed","simple","toggleDetailed","resetFloor","FloorBasics","DefSchema","trim","matches","CostSchema","moreThan","StatSchema","FloorSchema","of","stuffCost","integer","positive","Floor","array","FloorComponent","random","TabManager","onTabChange","tab","removeFloor","addFloor","About","changeTab","FloorStore","f","remove","box","StuffedFloorModGenerator","m","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.caa90771.chunk.js","sourcesContent":["import { isObject } from \"lodash\";\r\nimport set from \"lodash/set\";\r\nimport { Schema, ValidationError } from \"yup\";\r\n\r\nconst alphanumericRegex = /[^a-z0-9_]+/gi;\r\nexport const sanitizeString = (str: string): string => {\r\n    return str.replace(alphanumericRegex, \"\");\r\n};\r\n\r\n// https://stackoverflow.com/a/56531945\r\nexport const elementSize = (element: HTMLElement) => {\r\n    var computedStyle = getComputedStyle(element);\r\n\r\n    let width = element.clientWidth; // width with padding\r\n    let height = element.clientHeight; // height with padding\r\n\r\n    height -=\r\n        parseFloat(computedStyle.paddingTop) +\r\n        parseFloat(computedStyle.paddingBottom);\r\n    width -=\r\n        parseFloat(computedStyle.paddingLeft) +\r\n        parseFloat(computedStyle.paddingRight);\r\n    return { height, width };\r\n};\r\n\r\nexport type ValidationErrors<T> = {\r\n    [K in keyof Partial<T>]: T[K] extends any[]\r\n        ? ValidationErrors<T[K][number]>[]\r\n        : string;\r\n};\r\n\r\nexport function unwrapErrors<T>(\r\n    object: T,\r\n    schema: Schema<any, T>\r\n): ValidationErrors<T> {\r\n    try {\r\n        schema.validateSync(object, { abortEarly: false });\r\n    } catch (err) {\r\n        if (err instanceof ValidationError) {\r\n            const errors = {} as ValidationErrors<T>;\r\n            for (const error of err.inner) {\r\n                set(errors, error.path, error.message);\r\n            }\r\n            return errors;\r\n        }\r\n    }\r\n    return {} as ValidationErrors<T>;\r\n}\r\n\r\nexport async function waitForFontLoad(\r\n    font: string,\r\n    timeout = 1000,\r\n    interval = 10\r\n) {\r\n    return new Promise((resolve, reject) => {\r\n        // repeatedly poll check\r\n        const poller = setInterval(async () => {\r\n            try {\r\n                await document.fonts.load(font);\r\n            } catch (err) {\r\n                reject(err);\r\n            }\r\n            if (document.fonts.check(font)) {\r\n                clearInterval(poller);\r\n                resolve(true);\r\n            }\r\n        }, interval);\r\n        setTimeout(() => clearInterval(poller), timeout);\r\n    });\r\n}\r\n\r\nexport function errorArray(errorObject: any): string[] {\r\n    const msgs: string[] = [];\r\n    if (!errorObject) return msgs;\r\n    if (typeof errorObject === \"string\") return [errorObject];\r\n    for (const key in errorObject) {\r\n        if (Object.prototype.hasOwnProperty.call(errorObject, key)) {\r\n            const el = errorObject[key];\r\n            if (!el) continue;\r\n            if (typeof el === \"string\") {\r\n                msgs.push(el);\r\n            } else if (Array.isArray(el)) {\r\n                el.forEach((e) => msgs.push(...errorArray(e)));\r\n            } else if (isObject(el)) {\r\n                msgs.push(...errorArray(el));\r\n            }\r\n        }\r\n    }\r\n\r\n    return msgs;\r\n}\r\n","import handlebars from \"handlebars\";\r\nimport raw from \"raw.macro\";\r\nimport { Mod } from \"./components/Mod\";\r\nimport jszip from \"jszip\";\r\nimport { FloorStore } from \"./StuffedFloorModGenerator\";\r\nimport { sanitizeString } from \"./utils\";\r\n\r\nconst aboutTemplate = handlebars.compile<Mod>(raw(\"./templates/About.xml\"));\r\nconst floorDefTemplate = handlebars.compile<FloorStore>(\r\n    raw(\"./templates/StuffedFloorDefs.xml\")\r\n);\r\n\r\nfunction RenderAbout(about: Mod) {\r\n    return aboutTemplate({\r\n        ...about,\r\n        validationErrors: about.validationErrors,\r\n        packageId: about.packageId,\r\n    });\r\n}\r\n\r\nfunction RenderFloors(floors: FloorStore) {\r\n    return floorDefTemplate(floors);\r\n}\r\n\r\nexport async function BuildMod(about: Mod, floors: FloorStore) {\r\n    const zip = new jszip();\r\n    const modFolder = sanitizeString(about.name);\r\n    const aboutXml = RenderAbout(about);\r\n    zip.file(`${modFolder}/About/About.xml`, aboutXml);\r\n\r\n    const floorXml = RenderFloors(floors);\r\n    zip.file(`${modFolder}/Defs/Floors.xml`, floorXml);\r\n\r\n    for (const floor of floors.floors) {\r\n        if (floor.texture?.out)\r\n            zip.file(\r\n                `${modFolder}/Textures/Floors/${floor.defName}.png`,\r\n                floor.texture.out.texture\r\n            );\r\n    }\r\n\r\n    return await zip.generateAsync({ type: \"blob\" });\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { submitting } from \"../StuffedFloorModGenerator\";\r\n\r\nexport interface ErrorProps {\r\n    error?: string;\r\n    touched: boolean;\r\n}\r\n\r\n@observer\r\nexport class Error extends Component<ErrorProps> {\r\n    render() {\r\n        const { touched, error } = this.props;\r\n        return (\r\n            ((touched || submitting.get()) && error && (\r\n                <div className=\"error\">{error}</div>\r\n            )) ||\r\n            null\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Error } from \"./Error\";\r\n\r\ninterface ErrorListProps {\r\n    label: string;\r\n    errors: string[];\r\n}\r\n\r\nexport default class ErrorList extends Component<ErrorListProps> {\r\n    render() {\r\n        const { label, errors } = this.props;\r\n        return (\r\n            <div className=\"error-list ml-3 p1\">\r\n                <h5 className=\"is-5 title ml-3\">{label}</h5>\r\n                {errors.map((error, index) => (\r\n                    <Error touched error={error} key={index} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport { observer } from \"mobx-react\";\nimport { action, computed, observable } from \"mobx\";\nimport { FloorStore, submitting } from \"../StuffedFloorModGenerator\";\nimport { Mod } from \"./Mod\";\nimport { BuildMod } from \"../mod-builder\";\nimport classNames from \"classnames\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { errorArray } from \"../utils\";\nimport ErrorList from \"./ErrorList\";\n\ninterface DownloadButtonProps {\n    floors: FloorStore;\n    about: Mod;\n}\n\n@observer\nexport default class DownloadButton extends Component<DownloadButtonProps> {\n    @observable building = false;\n    @observable touched = false;\n    @computed get errors() {\n        const errors = [];\n        const { about, floors } = this.props;\n        if (!isEmpty(about.validationErrors)) {\n            errors.push({\n                label: \"About\",\n                errors: errorArray(about.validationErrors),\n            });\n        }\n        errors.push(\n            ...floors.floors\n                .filter((floor) => !isEmpty(floor.validationErrors))\n                .map((floor) => ({\n                    label: floor.label || floor.id,\n                    errors: errorArray(floor.validationErrors),\n                }))\n        );\n\n        return errors;\n    }\n\n    @action\n    download = async () => {\n        this.touched = true;\n        const { floors, about } = this.props;\n        if (this.errors.length) {\n            submitting.set(true);\n            return;\n        } else {\n            this.building = true;\n        }\n        const archive = await BuildMod(about, floors);\n        saveAs(archive, `${this.props.about.name}.zip`);\n        this.building = false;\n    };\n\n    render() {\n        return (\n            <div className=\"flex top\">\n                <button\n                    className={classNames({\n                        button: true,\n                        \"is-large\": true,\n                        \"is-primary\": true,\n                        \"is-loading\": this.building,\n                    })}\n                    onClick={this.download}\n                >\n                    Download Mod\n                </button>\n                {this.touched &&\n                    this.errors.map((error, index) => (\n                        <ErrorList {...error} key={index} />\n                    ))}\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\ninterface BaseHelpProps {\r\n    video?: boolean;\r\n    fontSize?: \"inherit\" | \"default\" | \"small\" | \"large\";\r\n}\r\n\r\ninterface TextHelpProps extends BaseHelpProps {\r\n    title: string | React.ReactElement<any, any>;\r\n    children?: never;\r\n}\r\n\r\ninterface RichHelpProps extends BaseHelpProps {\r\n    children: React.ReactElement<any, any>;\r\n    title?: never;\r\n}\r\n\r\ntype HelpProps = TextHelpProps | RichHelpProps;\r\n\r\nexport default class Help extends Component<HelpProps> {\r\n    render() {\r\n        const { video, title, children, fontSize = \"small\" } = this.props;\r\n        return (\r\n            <Tooltip\r\n                title={title || children!}\r\n                placement=\"right-end\"\r\n                arrow\r\n                interactive\r\n            >\r\n                <span className=\"flex pl-2\">\r\n                    {video && <PlayCircleFilledIcon fontSize={fontSize} />}\r\n                    {!video && <InfoIcon fontSize={fontSize} />}\r\n                </span>\r\n            </Tooltip>\r\n        );\r\n    }\r\n}\r\n","import { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component, InputHTMLAttributes } from \"react\";\nimport { Error } from \"./Error\";\nimport Help from \"./Help\";\n\ninterface InputProps\n    extends InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement> {\n    label: string;\n    error?: string;\n    element?: any;\n    small?: boolean;\n    help?: string | React.ReactElement<any, any>;\n}\n\n@observer\nexport default class Input extends Component<InputProps> {\n    @observable touched = false;\n\n    @action onBlur = () => {\n        this.touched = true;\n    };\n\n    render() {\n        const {\n            id,\n            label,\n            error,\n            element,\n            small,\n            help,\n            ...inputProps\n        } = this.props;\n\n        const Element = element ? (\n            React.cloneElement(element, {\n                ...inputProps,\n                id,\n                onBlur: this.onBlur,\n            })\n        ) : (\n            <input\n                className=\"input\"\n                {...inputProps}\n                id={id}\n                onBlur={this.onBlur}\n            />\n        );\n\n        if (small) {\n            return (\n                <div className=\"field is-horizontal\">\n                    <div className=\"field-label is-small\">\n                        <label htmlFor={id} className=\"label\">\n                            {label}\n                        </label>\n                    </div>\n                    <div className=\"field-body\">\n                        <div className=\"control\">{Element}</div>\n                        {help && <Help title=\"string\" />}\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"field\">\n                    <label htmlFor={id} className=\"label flex\">\n                        {label}\n                        {help && <Help title={help} />}\n                    </label>\n                    <div className=\"control\">{Element}</div>\n                    <Error touched={this.touched} error={error} />\n                </div>\n            );\n        }\n    }\n}\n","import { merge } from \"lodash\";\r\nimport { action, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, createRef } from \"react\";\r\nimport { mod, floors, FloorStore } from \"../StuffedFloorModGenerator\";\r\nimport { elementSize, waitForFontLoad } from \"../utils\";\r\nimport { Floor } from \"./Floor\";\r\n\r\nconst PREVIEW_SIZE = {\r\n    width: 640,\r\n    height: 380,\r\n};\r\nconst TILE_SIZE = 1024 / 16;\r\nconst ANGLE = -0.1;\r\n\r\n@observer\r\nexport default class PreviewImage extends Component {\r\n    @observable floors = floors;\r\n    @observable about = mod;\r\n    canvasRef = createRef<HTMLCanvasElement>();\r\n    @action async renderCanvas() {\r\n        const canvas = this.canvasRef.current;\r\n        if (!canvas) throw new Error(\"canvas ref not bound!\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) throw new Error(\"could not get rendering context\");\r\n\r\n        await waitForFontLoad(\"40pt Staatliches\");\r\n\r\n        const availableSize = elementSize(canvas.parentElement!);\r\n        canvas.width = Math.min(PREVIEW_SIZE.width, availableSize.width);\r\n        const scale = canvas.width / PREVIEW_SIZE.width;\r\n        canvas.height = PREVIEW_SIZE.height * scale;\r\n        ctx.scale(scale, scale);\r\n\r\n        // draw background\r\n        ctx.fillStyle = \"#222222\";\r\n        ctx.fillRect(0, 0, PREVIEW_SIZE.width, PREVIEW_SIZE.height);\r\n\r\n        const bannerSettings = merge({}, defaultBannerSettings, {\r\n            width: 620,\r\n            bannerHeight: 60,\r\n            pointOffset: { x: 100, y: 30 },\r\n            bannerOffset: { x: 10, y: 220 },\r\n        });\r\n        drawBannerBackground(ctx, bannerSettings);\r\n\r\n        // draw textures\r\n        await drawTextures(floors, ctx);\r\n\r\n        // draw banner\r\n        drawBannerForeground(ctx, bannerSettings);\r\n        drawBannerTitle(mod.name, ctx, bannerSettings);\r\n    }\r\n\r\n    componentDidUpdate = this.renderCanvas;\r\n    componentDidMount = this.renderCanvas;\r\n\r\n    render() {\r\n        /* eslint-disable @typescript-eslint/no-unused-vars */\r\n        const { name } = this.about;\r\n        const floors = this.floors;\r\n        /* eslint-enable */\r\n        return (\r\n            <div className=\"preview\">\r\n                <span className=\"label\">Preview</span>\r\n                <canvas ref={this.canvasRef} data-mod />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nasync function drawTextures(floors: FloorStore, ctx: CanvasRenderingContext2D) {\r\n    const floorCount = floors.floors.length;\r\n    const cols = Math.ceil(Math.sqrt(floorCount));\r\n    const rows = Math.ceil(floorCount / cols); // sounds the same as cols, but isn't. sqrt(2) = 1.4 -> 2 cols, 1 row\r\n    const floorSize = {\r\n        width: (PREVIEW_SIZE.width - 30) / cols,\r\n        height: (PREVIEW_SIZE.height - 10) / rows,\r\n    };\r\n\r\n    for (let i = 0; i < floorCount; i++) {\r\n        await drawFloorPreview(\r\n            floors.floors[i],\r\n            i % cols,\r\n            Math.floor(i / cols),\r\n            floorSize,\r\n            floorCount > 1,\r\n            ctx\r\n        );\r\n    }\r\n}\r\n\r\nasync function drawFloorPreview(\r\n    floor: Floor,\r\n    col: number,\r\n    row: number,\r\n    size: size,\r\n    label: boolean,\r\n    ctx: CanvasRenderingContext2D\r\n) {\r\n    const tl = { x: col * size.width + 30, y: row * size.height + 10 };\r\n    size = { width: size.width - 10, height: size.height - 10 };\r\n    // ctx.strokeStyle = \"red\";\r\n    // ctx.strokeRect(tl.x, tl.y, size.width, size.height);\r\n\r\n    ctx.fillStyle = \"#fff\";\r\n    const titleSize = label ? 20 : 0;\r\n\r\n    // draw label\r\n    if (label) {\r\n        ctx.font = `${titleSize}px Staatliches`;\r\n        ctx.textBaseline = \"top\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(\r\n            floor.label || floor.id,\r\n            tl.x + size.width / 2,\r\n            tl.y + 4,\r\n            size.width\r\n        );\r\n    }\r\n\r\n    // draw previews\r\n    const texture = floor.texture?.out?.texture;\r\n    if (!texture) return;\r\n    const textureData = await createImageBitmap(floor.texture?.out?.texture!);\r\n    const stuffCount = floor.stuffs.length;\r\n    let previewSize = Math.min(\r\n        size.height - titleSize,\r\n        size.width / Math.sqrt(stuffCount)\r\n    );\r\n    const angleOffset = Math.abs(previewSize * Math.tan(ANGLE));\r\n    if (previewSize + angleOffset > size.height - titleSize) {\r\n        previewSize = size.height - titleSize - angleOffset;\r\n    }\r\n    const rows = Math.floor(size.height / (previewSize * 0.66));\r\n    const cols = Math.ceil(stuffCount / rows);\r\n    const previewOffset = {\r\n        x: cols > 1 ? (size.width - angleOffset - previewSize) / (cols - 1) : 0,\r\n        y:\r\n            rows > 1\r\n                ? (size.height - angleOffset - previewSize) / (rows - 1)\r\n                : 0,\r\n    };\r\n    const previewTiles = Math.ceil(previewSize / TILE_SIZE);\r\n\r\n    for (let i = 0; i < stuffCount; i++) {\r\n        const col = i % cols;\r\n        const row = Math.floor(i / cols);\r\n        const pos = {\r\n            x: tl.x + col * previewOffset.x,\r\n            y: tl.y + angleOffset + row * previewOffset.y + titleSize,\r\n        };\r\n\r\n        ctx.translate(pos.x, pos.y);\r\n        ctx.rotate(ANGLE);\r\n\r\n        // for each stuff, create a mini preview.\r\n        // render center x tiles of texture, depending on preview size\r\n        ctx.globalCompositeOperation = \"source-over\";\r\n        ctx.shadowColor = \"rgba(0,0,0,.5)\";\r\n        ctx.shadowBlur = 5;\r\n        ctx.shadowOffsetX = 3;\r\n        ctx.shadowOffsetY = 3;\r\n        ctx.drawImage(\r\n            textureData,\r\n            ((16 - previewTiles) / 2) * TILE_SIZE,\r\n            ((16 - previewTiles) / 2) * TILE_SIZE,\r\n            previewTiles * TILE_SIZE,\r\n            previewTiles * TILE_SIZE,\r\n            0,\r\n            0,\r\n            previewSize,\r\n            previewSize\r\n        );\r\n\r\n        // overlay stuff colour\r\n        ctx.globalCompositeOperation = \"multiply\";\r\n        ctx.shadowColor = \"transparent\";\r\n        ctx.fillStyle = floor.stuffs[i].color;\r\n        ctx.fillRect(0, 0, previewSize, previewSize);\r\n\r\n        ctx.rotate(-ANGLE);\r\n        ctx.translate(-pos.x, -pos.y);\r\n    }\r\n\r\n    ctx.globalCompositeOperation = \"source-over\";\r\n}\r\n\r\nfunction drawBannerTitle(\r\n    title: string,\r\n    ctx: CanvasRenderingContext2D,\r\n    _settings: BannerSettings\r\n) {\r\n    // draw title\r\n    ctx.fillStyle = _settings.colours.text;\r\n    ctx.font = `${_settings.bannerHeight}px Staatliches`;\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.fillText(\r\n        title || \"Your Mod Name\",\r\n        _settings.width / 2 +\r\n            _settings.bannerOffset.x +\r\n            _settings.titleOffset.x,\r\n        _settings.margin +\r\n            _settings.titleOffset.y +\r\n            _settings.pointOffset.y +\r\n            _settings.bannerOffset.y +\r\n            _settings.bannerHeight / 2,\r\n        _settings.width - (_settings.margin + _settings.bannerSlant) * 2\r\n    );\r\n    ctx.font = `20px Staatliches`;\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillText(\r\n        \"A Stuffed Floors mod\",\r\n        _settings.width / 2 +\r\n            _settings.bannerOffset.x +\r\n            _settings.titleOffset.x,\r\n        _settings.margin +\r\n            _settings.titleOffset.y +\r\n            _settings.pointOffset.y +\r\n            _settings.bannerOffset.y +\r\n            _settings.bannerHeight,\r\n        _settings.width - (_settings.margin + _settings.bannerSlant) * 2\r\n    );\r\n}\r\n\r\nfunction drawBannerForeground(\r\n    ctx: CanvasRenderingContext2D,\r\n    _settings: BannerSettings\r\n) {\r\n    const POINTS = {\r\n        topLeft: {\r\n            x: _settings.margin + _settings.bannerOffset.x,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        topRight: {\r\n            x:\r\n                _settings.width +\r\n                _settings.bannerOffset.x -\r\n                _settings.margin -\r\n                _settings.bannerSlant,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        bottomLeft: {\r\n            x:\r\n                _settings.margin +\r\n                _settings.bannerOffset.x +\r\n                _settings.bannerSlant,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerHeight +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        bottomRight: {\r\n            x: _settings.width + _settings.bannerOffset.x - _settings.margin,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerHeight +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n    };\r\n\r\n    // draw banner foreground\r\n    ctx.fillStyle = _settings.colours.bannerFg;\r\n    createPath(\r\n        ctx,\r\n        POINTS.topLeft,\r\n        POINTS.topRight,\r\n        POINTS.bottomRight,\r\n        POINTS.bottomLeft\r\n    );\r\n    ctx.fill();\r\n}\r\n\r\nfunction drawBannerBackground(\r\n    ctx: CanvasRenderingContext2D,\r\n    _settings: BannerSettings\r\n) {\r\n    const POINTS = {\r\n        topLeft: {\r\n            x: _settings.margin + _settings.bannerOffset.x,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        topRight: {\r\n            x:\r\n                _settings.width +\r\n                _settings.bannerOffset.x -\r\n                _settings.margin -\r\n                _settings.bannerSlant,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        bottomLeft: {\r\n            x:\r\n                _settings.margin +\r\n                _settings.bannerOffset.x +\r\n                _settings.bannerSlant,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerHeight +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        bottomRight: {\r\n            x: _settings.width + _settings.bannerOffset.x - _settings.margin,\r\n            y:\r\n                _settings.margin +\r\n                _settings.bannerHeight +\r\n                _settings.bannerOffset.y +\r\n                _settings.pointOffset.y,\r\n        },\r\n        pointLeft: {\r\n            x:\r\n                _settings.margin +\r\n                _settings.bannerOffset.x +\r\n                _settings.pointOffset.x,\r\n            y: _settings.margin + _settings.bannerOffset.y,\r\n        },\r\n        pointRight: {\r\n            x:\r\n                _settings.width +\r\n                _settings.bannerOffset.x -\r\n                _settings.margin -\r\n                _settings.pointOffset.x,\r\n            y:\r\n                _settings.margin +\r\n                2 * _settings.pointOffset.y +\r\n                _settings.bannerOffset.y +\r\n                _settings.bannerHeight,\r\n        },\r\n    };\r\n\r\n    // draw banner background pieces\r\n    ctx.fillStyle = _settings.colours.bannerBg;\r\n    createPath(ctx, POINTS.topLeft, POINTS.pointLeft, POINTS.bottomLeft);\r\n    ctx.fill();\r\n    createPath(ctx, POINTS.bottomRight, POINTS.pointRight, POINTS.topRight);\r\n    ctx.fill();\r\n}\r\n\r\nfunction createPath(\r\n    context: CanvasRenderingContext2D,\r\n    ...points: { x: number; y: number }[]\r\n): void {\r\n    context.beginPath();\r\n    context.moveTo(points[0].x, points[0].y);\r\n    for (let i = 1; i < points.length; i++) {\r\n        context.lineTo(points[i].x, points[i].y);\r\n    }\r\n    context.closePath();\r\n}\r\n\r\nexport type point = { x: number; y: number };\r\nexport type colour = string;\r\n\r\nexport interface BannerSettings {\r\n    width: number;\r\n    margin: number;\r\n    pointOffset: point;\r\n    titleOffset: point;\r\n    colours: {\r\n        [label: string]: colour;\r\n    };\r\n    blueColours: {\r\n        [label: string]: colour;\r\n    };\r\n    bannerOffset: point;\r\n    bannerHeight: number;\r\n    bannerSlant: number;\r\n}\r\n\r\nconst defaultBannerSettings: BannerSettings = {\r\n    width: 480,\r\n    margin: 0,\r\n    pointOffset: { x: 80, y: 10 },\r\n    bannerOffset: { x: 0, y: 0 },\r\n    titleOffset: { x: 0, y: 5 },\r\n    colours: {\r\n        bannerBg: \"#762800\",\r\n        bannerFg: \"#C7602C\",\r\n        text: \"#fff\",\r\n    },\r\n    blueColours: {\r\n        bannerBg: \"#145398\",\r\n        bannerFg: \"#2c87e9\",\r\n        boxBg: \"#1a222b\",\r\n        text: \"#fff\",\r\n    },\r\n    bannerHeight: 30,\r\n    bannerSlant: 10,\r\n};\r\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { computed, observable } from \"mobx\";\nimport { sanitizeString, unwrapErrors } from \"../utils\";\nimport * as yup from \"yup\";\nimport Input from \"./Input\";\nimport PreviewImage from \"./PreviewImage\";\n\nexport interface ModProps {\n    mod: Mod;\n}\n\nexport class Mod {\n    @observable name: string = \"\";\n    @observable description: string = \"\";\n    @observable author: string = \"\";\n    @observable url: string = \"\";\n\n    @computed get packageId() {\n        return sanitizeString(this.author) + \".\" + sanitizeString(this.name);\n    }\n\n    @computed get validationErrors() {\n        console.log(\"updating errors\");\n        return unwrapErrors<Mod>(this, ModSchema);\n    }\n}\n\nexport const ModSchema = yup.object({\n    name: yup.string().required(),\n    description: yup.string().required(),\n    author: yup.string().required(),\n    url: yup.string().url(),\n    packageId: yup.string().required(),\n});\n\n@observer\nexport default class ModComponent extends Component<ModProps> {\n    render() {\n        const {\n            name,\n            description,\n            author,\n            url,\n            validationErrors: errors,\n        } = this.props.mod;\n        return (\n            <div id=\"about\">\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        <Input\n                            label=\"Mod Name\"\n                            id=\"mod.name\"\n                            value={name}\n                            onChange={(e) =>\n                                (this.props.mod.name = e.target.value)\n                            }\n                            error={errors.name}\n                            help=\"Mod name as shown in game\"\n                        />\n                        <Input\n                            label=\"Mod Description\"\n                            id=\"mod.desc\"\n                            value={description}\n                            onChange={(e) =>\n                                (this.props.mod.description = e.target.value)\n                            }\n                            error={errors.description}\n                            element={<textarea className=\"textarea\" />}\n                            help=\"Mod description as shown in game\"\n                        />\n                        <Input\n                            label=\"Author\"\n                            id=\"mod.author\"\n                            value={author}\n                            onChange={(e) =>\n                                (this.props.mod.author = e.target.value)\n                            }\n                            error={errors.author}\n                            help=\"Author name as shown in game\"\n                        />\n                        <Input\n                            label=\"Link\"\n                            id=\"mod.url\"\n                            value={url}\n                            onChange={(e) =>\n                                (this.props.mod.url = e.target.value)\n                            }\n                            error={errors.url}\n                            help=\"Link to a page where players can find more information about your mod. This is not required.\"\n                        />\n                    </div>\n                    <div className=\"column\">\n                        <PreviewImage />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import { action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component, createRef } from \"react\";\nimport { TextureLoaderProps } from \"./Floor\";\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n\n@observer\nexport default class FetchButton extends Component<TextureLoaderProps> {\n    inputRef = createRef<HTMLInputElement>();\n\n    @action\n    onSubmit = async () => {\n        const input = this.inputRef.current;\n        if (!input) return;\n\n        try {\n            const result = await fetch(CORS_PROXY + input.value);\n            const blob = await result.blob();\n            this.props.setTexture(blob);\n        } catch (err) {\n            console.error(`Error fetching ${input.value}: \\n${err}`);\n        }\n    };\n\n    render() {\n        return (\n            <div\n                className=\"field has-addons is-fullwidth\"\n                style={{ marginTop: \"1em\" }}\n            >\n                <div className=\"control is-expanded\">\n                    <input\n                        type=\"text\"\n                        className=\"input\"\n                        ref={this.inputRef}\n                        name=\"url\"\n                        id=\"url\"\n                    />\n                </div>\n                <div className=\"control\">\n                    <button\n                        className=\"button is-info fetch-button\"\n                        onClick={this.onSubmit}\n                    >\n                        Fetch\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import { observer } from \"mobx-react\";\nimport React, { Component, createRef } from \"react\";\nimport { elementSize } from \"../utils\";\nimport { Texture } from \"./Texture\";\n\nexport interface TextureProps {\n    texture: Texture;\n}\n\n@observer\nexport default class TexturePreview extends Component<Partial<TextureProps>> {\n    canvasRef = createRef<HTMLCanvasElement>();\n\n    renderCanvas = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas || !this.props.texture?.out) return;\n        const { mirror } = this.props.texture.settings;\n        const availableSize = elementSize(canvas.parentElement!);\n        const textureData = await createImageBitmap(\n            this.props.texture.out.texture\n        );\n\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.globalCompositeOperation = \"source-over\";\n        canvas.width = Math.min(textureData.width, availableSize.width);\n        const scale = canvas.width / textureData.width;\n        canvas.height = textureData.height * scale;\n        ctx.scale(scale, scale);\n\n        if (mirror) {\n            const sw = textureData.width / 2,\n                sh = textureData.height / 2;\n\n            // render each quadrant in the opposite quadrant\n            ctx.drawImage(textureData, sw, sh, sw, sh, 0, 0, sw, sw); // br -> tl\n            ctx.drawImage(textureData, 0, sh, sw, sh, sw, 0, sw, sw); // bl -> tr\n            ctx.drawImage(textureData, 0, 0, sw, sh, sw, sw, sw, sw); // tl -> br\n            ctx.drawImage(textureData, sw, 0, sw, sh, 0, sw, sw, sw); // tr -> bl\n        } else {\n            // just render source in canvas\n            ctx.drawImage(textureData, 0, 0);\n        }\n\n        // stuff preview overlay\n        if (this.props.texture.settings.preview) {\n            ctx.globalCompositeOperation = \"multiply\";\n            ctx.fillStyle = this.props.texture.settings.previewColor;\n            ctx.fillRect(0, 0, textureData.width, textureData.height);\n        }\n\n        // game cells preview / overlay\n        ctx.globalCompositeOperation = \"source-over\";\n        if (this.props.texture.settings.grid) {\n            const width = textureData.width / 16;\n            const height = textureData.height / 16;\n            ctx.setLineDash([5]);\n            for (let x = 0; x < 16; x++) {\n                // vertical lines\n                ctx.moveTo(x * width - 1, 0);\n                ctx.lineTo(x * width - 1, textureData.height);\n            }\n            for (let y = 0; y < 16; y++) {\n                // horizontal lines\n                ctx.moveTo(0, y * height - 1);\n                ctx.lineTo(textureData.width, y * height - 1);\n            }\n            ctx.strokeStyle = \"#d1652f\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n        }\n    };\n\n    componentDidUpdate = this.renderCanvas;\n    componentDidMount = this.renderCanvas;\n\n    render() {\n        const { texture } = this.props;\n        return (\n            <>\n                {texture && (\n                    <canvas\n                        ref={this.canvasRef}\n                        data-rendering={texture.rendering}\n                        data-revision={texture.settings.revision}\n                    ></canvas>\n                )}\n                {!texture && <div className=\"no-content\">No Texture</div>}\n            </>\n        );\n    }\n}\n","import { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { ChangeEvent, PureComponent } from \"react\";\nimport { TextureLoaderProps } from \"./Floor\";\n\n@observer\nexport default class UploadButton extends PureComponent<TextureLoaderProps> {\n    @observable target = \"\";\n    @action loadTexture = async (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files?.length) {\n            const file = event.target.files[0];\n            this.props.setTexture(file);\n            this.target = file.name;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"file is-fullwidth has-name is-right\">\n                <label className=\"file-label\">\n                    <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"texture\"\n                        id=\"texture\"\n                        accept=\"image/*\"\n                        onChange={this.loadTexture}\n                    />\n                    <span className=\"file-cta fetch-button\">Upload</span>\n                    <span className=\"file-name\">{this.target}</span>\n                </label>\n            </div>\n        );\n    }\n}\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Help from \"./Help\";\r\n\r\nexport type SwitchProps = React.InputHTMLAttributes<HTMLInputElement> & {\r\n    label: string;\r\n    rounded?: boolean;\r\n    outlined?: boolean;\r\n    small?: boolean;\r\n    help?: string | React.ReactElement<any, any>;\r\n};\r\n\r\n@observer\r\nexport class Switch extends Component<SwitchProps> {\r\n    render() {\r\n        const { id, label, onChange, checked, help } = this.props;\r\n        return (\r\n            <div className=\"field flex\">\r\n                <input\r\n                    id={id}\r\n                    type=\"checkbox\"\r\n                    className={classNames({\r\n                        switch: true,\r\n                        \"is-rounded\": true,\r\n                        \"is-outlined\": true,\r\n                        \"is-small\": true,\r\n                    })}\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n                {help && <Help title={help} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./Input\";\r\nimport { Switch } from \"./Switch\";\r\nimport { TextureProps } from \"./TexturePreview\";\r\n\r\n@observer\r\nexport class TextureSize extends Component<TextureProps> {\r\n    render() {\r\n        const { texture } = this.props;\r\n        const { settings, toggleSetting, updateSetting } = texture;\r\n        return (\r\n            <div className=\"texture-size\">\r\n                <span className=\"help\">\r\n                    Texture size:{\" \"}\r\n                    {`${texture.raw.size.width} x ${texture.raw.size.height} (original)`}\r\n                    {settings.tile &&\r\n                        `, ${texture.raw.size.width * settings.tilesX} x ${\r\n                            texture.raw.size.height * settings.tilesY\r\n                        } (tiled)`}\r\n                    {`, 1024 x 1024 (output)`}\r\n                </span>\r\n                <div className=\"columns\" style={{ alignItems: \"center\" }}>\r\n                    <div className=\"column\">\r\n                        <Switch\r\n                            id=\"texture-tiling\"\r\n                            label=\"Tile\"\r\n                            small={true}\r\n                            rounded={true}\r\n                            outlined={true}\r\n                            checked={settings.tile}\r\n                            onChange={() => toggleSetting(\"tile\")}\r\n                            help={\r\n                                <div>\r\n                                    <p>\r\n                                        Repeat the source texture multiple times\r\n                                        to make individual patterns smaller, or\r\n                                        to stop non-square textures getting\r\n                                        stretched too badly.\r\n                                    </p>\r\n                                    <img\r\n                                        src=\"https://i.imgur.com/pV5R48G.gif\"\r\n                                        alt=\"repeating example\"\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                    {settings.tile && (\r\n                        <>\r\n                            <div className=\"column\">\r\n                                <Input\r\n                                    id=\"texture-tiling-x\"\r\n                                    label=\"x\"\r\n                                    small={true}\r\n                                    element={\r\n                                        <input className=\"input is-small\" />\r\n                                    }\r\n                                    value={settings.tilesX}\r\n                                    onChange={(ev) =>\r\n                                        updateSetting(\r\n                                            \"tilesX\",\r\n                                            parseInt(ev.target.value) || 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Input\r\n                                    id=\"texture-tiling-y\"\r\n                                    label=\"y\"\r\n                                    small={true}\r\n                                    element={\r\n                                        <input className=\"input is-small\" />\r\n                                    }\r\n                                    value={settings.tilesY}\r\n                                    onChange={(ev) =>\r\n                                        updateSetting(\r\n                                            \"tilesY\",\r\n                                            parseInt(ev.target.value) || 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export type def = { def: string; label: string };\r\nexport type stuff = def & {\r\n    color: string; // rgb( r, g, b )\r\n};\r\n\r\nexport const stuffCategories = [\r\n    \"Metallic\",\r\n    \"Woody\",\r\n    \"Stony\",\r\n    \"Fabric\",\r\n    \"Leathery\",\r\n];\r\n\r\nexport const stuffs: { [category: string]: stuff[] } = {\r\n    Metallic: [\r\n        { def: \"Silver\", label: \"Silver\", color: \"rgb(180, 173, 150)\" },\r\n        { def: \"Gold\", label: \"Gold\", color: \"rgb(255, 235, 122)\" },\r\n        { def: \"Steel\", label: \"Steel\", color: \"rgb(105, 105, 105)\" },\r\n        { def: \"Plasteel\", label: \"Plasteel\", color: \"rgb(160, 178, 181)\" },\r\n        { def: \"Uranium\", label: \"Uranium\", color: \"rgb(100, 100, 100)\" },\r\n    ],\r\n    Woody: [{ def: \"WoodLog\", label: \"Wood\", color: \"rgb(133, 97, 67)\" }],\r\n    Stony: [\r\n        { def: \"Jade\", label: \"Jade\", color: \"rgb(85, 118, 69)\" },\r\n        {\r\n            def: \"BlocksSandstone\",\r\n            label: \"Sandstone blocks\",\r\n            color: \"rgb(126, 104, 94)\",\r\n        },\r\n        {\r\n            def: \"BlocksGranite\",\r\n            label: \"Granite blocks\",\r\n            color: \"rgb(105, 95, 97)\",\r\n        },\r\n        {\r\n            def: \"BlocksLimestone\",\r\n            label: \"Limestone blocks\",\r\n            color: \"rgb(158, 153, 135)\",\r\n        },\r\n        { def: \"BlocksSlate\", label: \"Slate blocks\", color: \"rgb(70, 70, 70)\" },\r\n        {\r\n            def: \"BlocksMarble\",\r\n            label: \"Marble blocks\",\r\n            color: \"rgb(132, 135, 132)\",\r\n        },\r\n    ],\r\n    Fabric: [\r\n        { def: \"Cloth\", label: \"Cloth\", color: \"rgb(162, 157, 152)\" },\r\n        { def: \"Synthread\", label: \"Synthread\", color: \"rgb(174, 219, 228)\" },\r\n        {\r\n            def: \"DevilstrandCloth\",\r\n            label: \"Devilstrand\",\r\n            color: \"rgb(180, 60, 60)\",\r\n        },\r\n        { def: \"Hyperweave\", label: \"Hyperweave\", color: \"rgb(0, 106, 126)\" },\r\n        {\r\n            def: \"WoolMegasloth\",\r\n            label: \"Megasloth wool\",\r\n            color: \"rgb(189, 161, 116)\",\r\n        },\r\n        {\r\n            def: \"WoolMuffalo\",\r\n            label: \"Muffalo wool\",\r\n            color: \"rgb(179, 192, 186)\",\r\n        },\r\n        {\r\n            def: \"WoolAlpaca\",\r\n            label: \"Alpaca wool\",\r\n            color: \"rgb(180, 148, 109)\",\r\n        },\r\n        { def: \"WoolBison\", label: \"Bison wool\", color: \"rgb(104, 69, 45)\" },\r\n        { def: \"WoolSheep\", label: \"Sheep wool\", color: \"rgb(219, 214, 209)\" },\r\n    ],\r\n    Leathery: [\r\n        {\r\n            def: \"Leather_Plain\",\r\n            label: \"Plainleather\",\r\n            color: \"rgb(162, 106, 57)\",\r\n        },\r\n        {\r\n            def: \"Leather_Dog\",\r\n            label: \"Dog leather\",\r\n            color: \"rgb(209, 168, 39)\",\r\n        },\r\n        { def: \"Leather_Wolf\", label: \"Wolfskin\", color: \"rgb(115, 110, 100)\" },\r\n        {\r\n            def: \"Leather_Panthera\",\r\n            label: \"Panthera fur\",\r\n            color: \"rgb(60, 60, 60)\",\r\n        },\r\n        {\r\n            def: \"Leather_Camel\",\r\n            label: \"Camelhide\",\r\n            color: \"rgb(204, 180, 150)\",\r\n        },\r\n        {\r\n            def: \"Leather_Bluefur\",\r\n            label: \"Bluefur\",\r\n            color: \"rgb(152, 170, 174)\",\r\n        },\r\n        { def: \"Leather_Bear\", label: \"Bearskin\", color: \"rgb(112, 82, 65)\" },\r\n        {\r\n            def: \"Leather_GuineaPig\",\r\n            label: \"Guinea pig fur\",\r\n            color: \"rgb(179, 125, 55)\",\r\n        },\r\n        {\r\n            def: \"Leather_Human\",\r\n            label: \"Human leather\",\r\n            color: \"rgb(211, 194, 143)\",\r\n        },\r\n        { def: \"Leather_Pig\", label: \"Pigskin\", color: \"rgb(174, 150, 126)\" },\r\n        {\r\n            def: \"Leather_Light\",\r\n            label: \"Lightleather\",\r\n            color: \"rgb(140, 85, 36)\",\r\n        },\r\n        { def: \"Leather_Bird\", label: \"Birdskin\", color: \"rgb(76, 83, 99)\" },\r\n        {\r\n            def: \"Leather_Chinchilla\",\r\n            label: \"Chinchilla fur\",\r\n            color: \"rgb(178, 170, 158)\",\r\n        },\r\n        { def: \"Leather_Fox\", label: \"Foxfur\", color: \"rgb(178, 100, 34)\" },\r\n        {\r\n            def: \"Leather_Lizard\",\r\n            label: \"Lizardskin\",\r\n            color: \"rgb(101, 116, 58)\",\r\n        },\r\n        {\r\n            def: \"Leather_Elephant\",\r\n            label: \"Elephant leather\",\r\n            color: \"rgb(130, 126, 119)\",\r\n        },\r\n        {\r\n            def: \"Leather_Heavy\",\r\n            label: \"Heavy fur\",\r\n            color: \"rgb(189, 161, 116)\",\r\n        },\r\n        {\r\n            def: \"Leather_Rhinoceros\",\r\n            label: \"Rhinoceros leather\",\r\n            color: \"rgb(150, 150, 150)\",\r\n        },\r\n        {\r\n            def: \"Leather_Thrumbo\",\r\n            label: \"Thrumbofur\",\r\n            color: \"rgb(233, 233, 233)\",\r\n        },\r\n        {\r\n            def: \"Leather_Patch\",\r\n            label: \"Patchleather\",\r\n            color: \"rgb(90, 75, 60)\",\r\n        },\r\n    ],\r\n};\r\n\r\nexport const affordances: Affordance[] = [\r\n    \"Light\",\r\n    \"Medium\",\r\n    \"Heavy\",\r\n    \"Diggable\",\r\n    \"GrowSoil\",\r\n];\r\n\r\nexport const tags: string[] = [\"Floor\", \"FineFloor\"];\r\n\r\nexport const researchDefs: def[] = [\r\n    { def: \"PsychoidBrewing\", label: \"Psychoid brewing\" },\r\n    { def: \"TreeSowing\", label: \"Tree sowing\" },\r\n    { def: \"Brewing\", label: \"Beer brewing\" },\r\n    { def: \"ComplexFurniture\", label: \"Complex furniture\" },\r\n    { def: \"PassiveCooler\", label: \"Passive cooler\" },\r\n    { def: \"Stonecutting\", label: \"Stonecutting\" },\r\n    { def: \"ComplexClothing\", label: \"Complex clothing\" },\r\n    { def: \"DrugProduction\", label: \"Drug production\" },\r\n    { def: \"Cocoa\", label: \"Cocoa\" },\r\n    { def: \"Devilstrand\", label: \"Devilstrand\" },\r\n    { def: \"CarpetMaking\", label: \"Carpet making\" },\r\n    { def: \"Pemmican\", label: \"Pemmican\" },\r\n    { def: \"Smithing\", label: \"Smithing\" },\r\n    { def: \"RecurveBow\", label: \"Recurve bow\" },\r\n    { def: \"PsychiteRefining\", label: \"Psychite refining\" },\r\n    { def: \"WakeUpProduction\", label: \"Wake-up production\" },\r\n    { def: \"GoJuiceProduction\", label: \"Go-juice production\" },\r\n    { def: \"PenoxycylineProduction\", label: \"Penoxycyline production\" },\r\n    { def: \"LongBlades\", label: \"Long blades\" },\r\n    { def: \"PlateArmor\", label: \"Plate armor\" },\r\n    { def: \"Greatbow\", label: \"Greatbow\" },\r\n    { def: \"Electricity\", label: \"Electricity\" },\r\n    { def: \"Batteries\", label: \"Battery\" },\r\n    { def: \"BiofuelRefining\", label: \"Biofuel refining\" },\r\n    { def: \"WatermillGenerator\", label: \"Watermill generator\" },\r\n    { def: \"NutrientPaste\", label: \"Nutrient paste\" },\r\n    { def: \"SolarPanels\", label: \"Solar panel\" },\r\n    { def: \"AirConditioning\", label: \"Air conditioning\" },\r\n    { def: \"Autodoors\", label: \"Autodoor\" },\r\n    { def: \"Hydroponics\", label: \"Hydroponics\" },\r\n    { def: \"TubeTelevision\", label: \"Tube television\" },\r\n    { def: \"PackagedSurvivalMeal\", label: \"Packaged survival meal\" },\r\n    { def: \"Firefoam\", label: \"Firefoam\" },\r\n    { def: \"IEDs\", label: \"IEDs\" },\r\n    { def: \"GeothermalPower\", label: \"Geothermal power\" },\r\n    { def: \"SterileMaterials\", label: \"Sterile materials\" },\r\n    { def: \"ColoredLights\", label: \"Colored lights\" },\r\n    { def: \"Machining\", label: \"Machining\" },\r\n    { def: \"SmokepopBelt\", label: \"Smokepop packs\" },\r\n    { def: \"Prosthetics\", label: \"Prosthetics\" },\r\n    { def: \"Gunsmithing\", label: \"Gunsmithing\" },\r\n    { def: \"FlakArmor\", label: \"Flak armor\" },\r\n    { def: \"Mortars\", label: \"Mortars\" },\r\n    { def: \"BlowbackOperation\", label: \"Blowback operation\" },\r\n    { def: \"GasOperation\", label: \"Gas operation\" },\r\n    { def: \"GunTurrets\", label: \"Gun turrets\" },\r\n    { def: \"MicroelectronicsBasics\", label: \"Microelectronics\" },\r\n    { def: \"FlatscreenTelevision\", label: \"Flatscreen television\" },\r\n    { def: \"MoisturePump\", label: \"Moisture pump\" },\r\n    { def: \"HospitalBed\", label: \"Hospital bed\" },\r\n    { def: \"DeepDrilling\", label: \"Deep drilling\" },\r\n    { def: \"GroundPenetratingScanner\", label: \"Ground-penetrating scanner\" },\r\n    { def: \"TransportPod\", label: \"Transport pod\" },\r\n    { def: \"MedicineProduction\", label: \"Medicine production\" },\r\n    { def: \"LongRangeMineralScanner\", label: \"Long-range mineral scanner\" },\r\n    { def: \"ShieldBelt\", label: \"Shields\" },\r\n    { def: \"PrecisionRifling\", label: \"Precision rifling\" },\r\n    { def: \"HeavyTurrets\", label: \"Autocannon turret\" },\r\n    { def: \"MultibarrelWeapons\", label: \"Multibarrel weapons\" },\r\n    { def: \"MultiAnalyzer\", label: \"Multi-analyzer\" },\r\n    { def: \"VitalsMonitor\", label: \"Vitals monitor\" },\r\n    { def: \"Fabrication\", label: \"Fabrication\" },\r\n    { def: \"AdvancedFabrication\", label: \"Advanced fabrication\" },\r\n    { def: \"Cryptosleep\", label: \"Cryptosleep casket\" },\r\n    { def: \"ReconArmor\", label: \"Recon armor\" },\r\n    { def: \"PoweredArmor\", label: \"Marine armor\" },\r\n    { def: \"ChargedShot\", label: \"Pulse-charged munitions\" },\r\n    { def: \"Bionics\", label: \"Bionic replacements\" },\r\n    { def: \"SniperTurret\", label: \"Uranium slug turret\" },\r\n    { def: \"ShipBasics\", label: \"Starflight basics\" },\r\n    { def: \"ShipCryptosleep\", label: \"Vacuum cryptosleep casket\" },\r\n    { def: \"ShipReactor\", label: \"Starship reactor\" },\r\n    { def: \"ShipEngine\", label: \"Johnson-Tanaka drive\" },\r\n    { def: \"ShipComputerCore\", label: \"Machine persuasion\" },\r\n    { def: \"ShipSensorCluster\", label: \"Starflight sensors\" },\r\n    { def: \"NobleApparel\", label: \"Noble apparel\" },\r\n    { def: \"RoyalApparel\", label: \"Royal apparel\" },\r\n    { def: \"CataphractArmor\", label: \"Cataphract armor\" },\r\n    { def: \"JumpPack\", label: \"Jump packs\" },\r\n    { def: \"Gunlink\", label: \"Gunlink\" },\r\n    { def: \"BrainWiring\", label: \"Brain wiring\" },\r\n    { def: \"SpecializedLimbs\", label: \"Specialized limbs\" },\r\n    { def: \"CompactWeaponry\", label: \"Compact weaponry\" },\r\n    { def: \"VenomSynthesis\", label: \"Poison synthesis\" },\r\n    { def: \"ArtificialMetabolism\", label: \"Artificial metabolism\" },\r\n    { def: \"NeuralComputation\", label: \"Neural computation\" },\r\n    { def: \"SkinHardening\", label: \"Skin hardening\" },\r\n    { def: \"HealingFactors\", label: \"Healing factors\" },\r\n    { def: \"FleshShaping\", label: \"Flesh shaping\" },\r\n    { def: \"MolecularAnalysis\", label: \"Molecular analysis\" },\r\n    { def: \"CircadianInfluence\", label: \"Circadian influence\" },\r\n    { def: \"Harp\", label: \"Harp\" },\r\n    { def: \"Harpsichord\", label: \"Harpsichord\" },\r\n    { def: \"Piano\", label: \"Piano\" },\r\n];\r\n\r\nexport const burnedFloorDefs: string[] = [\r\n    \"BurnedCarpet\",\r\n    \"BurnedWoodPlankFloor\",\r\n];\r\n\r\nexport const buildingMaterials: def[] = [\r\n    { def: \"Silver\", label: \"Silver\" },\r\n    { def: \"Gold\", label: \"Gold\" },\r\n    { def: \"Steel\", label: \"Steel\" },\r\n    { def: \"Plasteel\", label: \"Plasteel\" },\r\n    { def: \"WoodLog\", label: \"Wood\" },\r\n    { def: \"Uranium\", label: \"Uranium\" },\r\n    { def: \"Jade\", label: \"Jade\" },\r\n    { def: \"Cloth\", label: \"Cloth\" },\r\n    { def: \"Synthread\", label: \"Synthread\" },\r\n    { def: \"DevilstrandCloth\", label: \"Devilstrand\" },\r\n    { def: \"Hyperweave\", label: \"Hyperweave\" },\r\n    { def: \"WoolMegasloth\", label: \"Megasloth wool\" },\r\n    { def: \"WoolMuffalo\", label: \"Muffalo wool\" },\r\n    { def: \"WoolAlpaca\", label: \"Alpaca wool\" },\r\n    { def: \"WoolBison\", label: \"Bison wool\" },\r\n    { def: \"WoolSheep\", label: \"Sheep wool\" },\r\n    { def: \"Leather_Plain\", label: \"Plainleather\" },\r\n    { def: \"Leather_Dog\", label: \"Dog leather\" },\r\n    { def: \"Leather_Wolf\", label: \"Wolfskin\" },\r\n    { def: \"Leather_Panthera\", label: \"Panthera fur\" },\r\n    { def: \"Leather_Camel\", label: \"Camelhide\" },\r\n    { def: \"Leather_Bluefur\", label: \"Bluefur\" },\r\n    { def: \"Leather_Bear\", label: \"Bearskin\" },\r\n    { def: \"Leather_GuineaPig\", label: \"Guinea pig fur\" },\r\n    { def: \"Leather_Human\", label: \"Human leather\" },\r\n    { def: \"Leather_Pig\", label: \"Pigskin\" },\r\n    { def: \"Leather_Light\", label: \"Lightleather\" },\r\n    { def: \"Leather_Bird\", label: \"Birdskin\" },\r\n    { def: \"Leather_Chinchilla\", label: \"Chinchilla fur\" },\r\n    { def: \"Leather_Fox\", label: \"Foxfur\" },\r\n    { def: \"Leather_Lizard\", label: \"Lizardskin\" },\r\n    { def: \"Leather_Elephant\", label: \"Elephant leather\" },\r\n    { def: \"Leather_Heavy\", label: \"Heavy fur\" },\r\n    { def: \"Leather_Rhinoceros\", label: \"Rhinoceros leather\" },\r\n    { def: \"Leather_Thrumbo\", label: \"Thrumbofur\" },\r\n    { def: \"Leather_Patch\", label: \"Patchleather\" },\r\n    { def: \"BlocksSandstone\", label: \"Sandstone blocks\" },\r\n    { def: \"BlocksGranite\", label: \"Granite blocks\" },\r\n    { def: \"BlocksLimestone\", label: \"Limestone blocks\" },\r\n    { def: \"BlocksSlate\", label: \"Slate blocks\" },\r\n    { def: \"BlocksMarble\", label: \"Marble blocks\" },\r\n    { def: \"RawHops\", label: \"Hops\" },\r\n    { def: \"MedicineHerbal\", label: \"Herbal medicine\" },\r\n    { def: \"MedicineIndustrial\", label: \"Medicine\" },\r\n    { def: \"MedicineUltratech\", label: \"Glitterworld medicine\" },\r\n    { def: \"ArchotechEye\", label: \"Archotech eye\" },\r\n    { def: \"ArchotechArm\", label: \"Archotech arm\" },\r\n    { def: \"ArchotechLeg\", label: \"Archotech leg\" },\r\n    { def: \"BionicEye\", label: \"Bionic eye\" },\r\n    { def: \"BionicArm\", label: \"Bionic arm\" },\r\n    { def: \"BionicLeg\", label: \"Bionic leg\" },\r\n    { def: \"BionicSpine\", label: \"Bionic spine\" },\r\n    { def: \"BionicHeart\", label: \"Bionic heart\" },\r\n    { def: \"BionicStomach\", label: \"Bionic stomach\" },\r\n    { def: \"DeathAcidifier\", label: \"Death acidifier\" },\r\n    { def: \"BionicEar\", label: \"Bionic ear\" },\r\n    { def: \"Heart\", label: \"Heart\" },\r\n    { def: \"Lung\", label: \"Lung\" },\r\n    { def: \"Kidney\", label: \"Kidney\" },\r\n    { def: \"Liver\", label: \"Liver\" },\r\n    { def: \"SimpleProstheticLeg\", label: \"Prosthetic leg\" },\r\n    { def: \"SimpleProstheticArm\", label: \"Prosthetic arm\" },\r\n    { def: \"SimpleProstheticHeart\", label: \"Prosthetic heart\" },\r\n    { def: \"CochlearImplant\", label: \"Cochlear implant\" },\r\n    { def: \"PowerClaw\", label: \"Power claw\" },\r\n    { def: \"Joywire\", label: \"Joywire\" },\r\n    { def: \"Painstopper\", label: \"Painstopper\" },\r\n    { def: \"Corpse_Human\", label: \"Human corpse\" },\r\n    { def: \"Corpse_Muffalo\", label: \"Muffalo corpse\" },\r\n    { def: \"Corpse_Gazelle\", label: \"Gazelle corpse\" },\r\n    { def: \"Corpse_Iguana\", label: \"Iguana corpse\" },\r\n    { def: \"Corpse_Dromedary\", label: \"Dromedary corpse\" },\r\n    { def: \"Corpse_Bear_Grizzly\", label: \"Grizzly bear corpse\" },\r\n    { def: \"Corpse_Bear_Polar\", label: \"Polar bear corpse\" },\r\n    { def: \"Corpse_Cougar\", label: \"Cougar corpse\" },\r\n    { def: \"Corpse_Panther\", label: \"Panther corpse\" },\r\n    { def: \"Corpse_Lynx\", label: \"Lynx corpse\" },\r\n    { def: \"Corpse_Cassowary\", label: \"Cassowary corpse\" },\r\n    { def: \"Corpse_Emu\", label: \"Emu corpse\" },\r\n    { def: \"Corpse_Ostrich\", label: \"Ostrich corpse\" },\r\n    { def: \"Corpse_Turkey\", label: \"Turkey corpse\" },\r\n    { def: \"Corpse_Chicken\", label: \"Chicken corpse\" },\r\n    { def: \"Corpse_Pig\", label: \"Pig corpse\" },\r\n    { def: \"Corpse_Cow\", label: \"Cow corpse\" },\r\n    { def: \"Corpse_Alpaca\", label: \"Alpaca corpse\" },\r\n    { def: \"Corpse_Duck\", label: \"Duck corpse\" },\r\n    { def: \"Corpse_Bison\", label: \"Bison corpse\" },\r\n    { def: \"Corpse_Goat\", label: \"Goat corpse\" },\r\n    { def: \"Corpse_Goose\", label: \"Goose corpse\" },\r\n    { def: \"Corpse_Sheep\", label: \"Sheep corpse\" },\r\n    { def: \"Corpse_Horse\", label: \"Horse corpse\" },\r\n    { def: \"Corpse_Yak\", label: \"Yak corpse\" },\r\n    { def: \"Corpse_GuineaPig\", label: \"Guinea pig corpse\" },\r\n    { def: \"Corpse_Donkey\", label: \"Donkey corpse\" },\r\n    { def: \"Corpse_Rhinoceros\", label: \"Rhinoceros corpse\" },\r\n    { def: \"Corpse_Elephant\", label: \"Elephant corpse\" },\r\n    { def: \"Corpse_Megasloth\", label: \"Megasloth corpse\" },\r\n    { def: \"Corpse_Thrumbo\", label: \"Thrumbo corpse\" },\r\n    { def: \"Corpse_Hare\", label: \"Hare corpse\" },\r\n    { def: \"Corpse_Snowhare\", label: \"Snowhare corpse\" },\r\n    { def: \"Corpse_YorkshireTerrier\", label: \"Yorkshire terrier corpse\" },\r\n    { def: \"Corpse_Husky\", label: \"Husky corpse\" },\r\n    { def: \"Corpse_LabradorRetriever\", label: \"Labrador retriever corpse\" },\r\n    { def: \"Corpse_Cat\", label: \"Cat corpse\" },\r\n    { def: \"Corpse_Squirrel\", label: \"Squirrel corpse\" },\r\n    { def: \"Corpse_Alphabeaver\", label: \"Alphabeaver corpse\" },\r\n    { def: \"Corpse_Capybara\", label: \"Capybara corpse\" },\r\n    { def: \"Corpse_Chinchilla\", label: \"Chinchilla corpse\" },\r\n    { def: \"Corpse_Boomrat\", label: \"Boomrat corpse\" },\r\n    { def: \"Corpse_Raccoon\", label: \"Raccoon corpse\" },\r\n    { def: \"Corpse_Rat\", label: \"Rat corpse\" },\r\n    { def: \"Corpse_Deer\", label: \"Deer corpse\" },\r\n    { def: \"Corpse_Ibex\", label: \"Ibex corpse\" },\r\n    { def: \"Corpse_Elk\", label: \"Elk corpse\" },\r\n    { def: \"Corpse_Caribou\", label: \"Caribou corpse\" },\r\n    { def: \"Corpse_WildBoar\", label: \"Wild boar corpse\" },\r\n    { def: \"Corpse_Tortoise\", label: \"Tortoise corpse\" },\r\n    { def: \"Corpse_Cobra\", label: \"Cobra corpse\" },\r\n    { def: \"Corpse_Monkey\", label: \"Monkey corpse\" },\r\n    { def: \"Corpse_Boomalope\", label: \"Boomalope corpse\" },\r\n    { def: \"Corpse_Warg\", label: \"Warg corpse\" },\r\n    { def: \"Corpse_Wolf_Timber\", label: \"Timber wolf corpse\" },\r\n    { def: \"Corpse_Wolf_Arctic\", label: \"Arctic wolf corpse\" },\r\n    { def: \"Corpse_Fox_Fennec\", label: \"Fennec fox corpse\" },\r\n    { def: \"Corpse_Fox_Red\", label: \"Red fox corpse\" },\r\n    { def: \"Corpse_Fox_Arctic\", label: \"Arctic fox corpse\" },\r\n    { def: \"Corpse_Megascarab\", label: \"Megascarab corpse\" },\r\n    { def: \"Corpse_Spelopede\", label: \"Spelopede corpse\" },\r\n    { def: \"Corpse_Megaspider\", label: \"Megaspider corpse\" },\r\n    { def: \"Corpse_Mech_Centipede\", label: \"Centipede corpse\" },\r\n    { def: \"Corpse_Mech_Lancer\", label: \"Lancer corpse\" },\r\n    { def: \"Corpse_Mech_Scyther\", label: \"Scyther corpse\" },\r\n    { def: \"Corpse_Mech_Pikeman\", label: \"Pikeman corpse\" },\r\n    { def: \"Apparel_TribalA\", label: \"Tribalwear\" },\r\n    { def: \"Apparel_Parka\", label: \"Parka\" },\r\n    { def: \"Apparel_Pants\", label: \"Pants\" },\r\n    { def: \"Apparel_BasicShirt\", label: \"T-shirt\" },\r\n    { def: \"Apparel_CollarShirt\", label: \"Button-down shirt\" },\r\n    { def: \"Apparel_Duster\", label: \"Duster\" },\r\n    { def: \"Apparel_Jacket\", label: \"Jacket\" },\r\n    { def: \"Apparel_PsyfocusShirt\", label: \"Eltex shirt\" },\r\n    { def: \"Apparel_PsyfocusVest\", label: \"Eltex vest\" },\r\n    { def: \"Apparel_PsyfocusRobe\", label: \"Eltex robe\" },\r\n    { def: \"Apparel_CowboyHat\", label: \"Cowboy hat\" },\r\n    { def: \"Apparel_BowlerHat\", label: \"Bowler hat\" },\r\n    { def: \"Apparel_TribalHeaddress\", label: \"Tribal headdress\" },\r\n    { def: \"Apparel_Tuque\", label: \"Tuque\" },\r\n    { def: \"Apparel_WarMask\", label: \"War mask\" },\r\n    { def: \"Apparel_WarVeil\", label: \"War veil\" },\r\n    { def: \"Apparel_PsychicFoilHelmet\", label: \"Psychic foil helmet\" },\r\n    { def: \"Apparel_PsyfocusHelmet\", label: \"Eltex helmet\" },\r\n    { def: \"Apparel_EltexSkullcap\", label: \"Eltex skullcap\" },\r\n    { def: \"Apparel_PlateArmor\", label: \"Plate armor\" },\r\n    { def: \"Apparel_FlakVest\", label: \"Flak vest\" },\r\n    { def: \"Apparel_FlakPants\", label: \"Flak pants\" },\r\n    { def: \"Apparel_FlakJacket\", label: \"Flak jacket\" },\r\n    { def: \"Apparel_PowerArmor\", label: \"Marine armor\" },\r\n    { def: \"Apparel_ArmorRecon\", label: \"Recon armor\" },\r\n    { def: \"Apparel_ArmorReconPrestige\", label: \"Prestige recon armor\" },\r\n    { def: \"Apparel_ArmorMarinePrestige\", label: \"Prestige marine armor\" },\r\n    { def: \"Apparel_ArmorCataphract\", label: \"Cataphract armor\" },\r\n    {\r\n        def: \"Apparel_ArmorCataphractPrestige\",\r\n        label: \"Prestige cataphract armor\",\r\n    },\r\n    { def: \"Apparel_ArmorLocust\", label: \"Locust armor\" },\r\n    { def: \"Apparel_ArmorMarineGrenadier\", label: \"Grenadier armor\" },\r\n    { def: \"Apparel_ArmorCataphractPhoenix\", label: \"Phoenix armor\" },\r\n    { def: \"Apparel_SimpleHelmet\", label: \"Simple helmet\" },\r\n    { def: \"Apparel_AdvancedHelmet\", label: \"Flak helmet\" },\r\n    { def: \"Apparel_PowerArmorHelmet\", label: \"Marine helmet\" },\r\n    { def: \"Apparel_ArmorHelmetRecon\", label: \"Recon helmet\" },\r\n    { def: \"Apparel_ArmorHelmetReconPrestige\", label: \"Prestige recon helmet\" },\r\n    {\r\n        def: \"Apparel_ArmorMarineHelmetPrestige\",\r\n        label: \"Prestige marine helmet\",\r\n    },\r\n    { def: \"Apparel_ArmorHelmetCataphract\", label: \"Cataphract helmet\" },\r\n    {\r\n        def: \"Apparel_ArmorHelmetCataphractPrestige\",\r\n        label: \"Prestige cataphract helmet\",\r\n    },\r\n    { def: \"Apparel_Gunlink\", label: \"Gunlink\" },\r\n    { def: \"Apparel_ShieldBelt\", label: \"Shield belt\" },\r\n    { def: \"Apparel_SmokepopBelt\", label: \"Smokepop pack\" },\r\n    { def: \"Apparel_PsychicShockLance\", label: \"Psychic shock lance\" },\r\n    { def: \"Apparel_PsychicInsanityLance\", label: \"Psychic insanity lance\" },\r\n    {\r\n        def: \"OrbitalTargeterBombardment\",\r\n        label: \"Orbital bombardment targeter\",\r\n    },\r\n    { def: \"OrbitalTargeterPowerBeam\", label: \"Orbital power beam targeter\" },\r\n    { def: \"TornadoGenerator\", label: \"Tornado generator\" },\r\n    { def: \"Apparel_PackJump\", label: \"Jump pack\" },\r\n    { def: \"Apparel_PackBroadshield\", label: \"Low-shield pack\" },\r\n    {\r\n        def: \"OrbitalTargeterMechCluster\",\r\n        label: \"Orbital mech cluster targeter\",\r\n    },\r\n    { def: \"Apparel_ShirtRuffle\", label: \"Formal shirt\" },\r\n    { def: \"Apparel_Corset\", label: \"Corset\" },\r\n    { def: \"Apparel_VestRoyal\", label: \"Formal vest\" },\r\n    { def: \"Apparel_RobeRoyal\", label: \"Prestige robe\" },\r\n    { def: \"Apparel_Cape\", label: \"Cape\" },\r\n    { def: \"Apparel_HatLadies\", label: \"Ladies hat\" },\r\n    { def: \"Apparel_HatTop\", label: \"Top hat\" },\r\n    { def: \"Apparel_HatHood\", label: \"Hood\" },\r\n    { def: \"Apparel_Coronet\", label: \"Coronet\" },\r\n    { def: \"Apparel_Crown\", label: \"Crown\" },\r\n    { def: \"Apparel_CrownStellic\", label: \"Stellic crown\" },\r\n    { def: \"Apparel_Beret\", label: \"Beret\" },\r\n    { def: \"MeleeWeapon_Mace\", label: \"Mace\" },\r\n    { def: \"MeleeWeapon_Gladius\", label: \"Gladius\" },\r\n    { def: \"MeleeWeapon_LongSword\", label: \"Longsword\" },\r\n    { def: \"MeleeWeapon_Club\", label: \"Club\" },\r\n    { def: \"MeleeWeapon_Knife\", label: \"Knife\" },\r\n    { def: \"MeleeWeapon_Ikwa\", label: \"Ikwa\" },\r\n    { def: \"MeleeWeapon_Spear\", label: \"Spear\" },\r\n    { def: \"MeleeWeapon_Axe\", label: \"Axe\" },\r\n    { def: \"MeleeWeapon_Warhammer\", label: \"Warhammer\" },\r\n    { def: \"MeleeWeapon_MonoSword\", label: \"Monosword\" },\r\n    { def: \"MeleeWeapon_Zeushammer\", label: \"Zeushammer\" },\r\n    { def: \"MeleeWeapon_PlasmaSword\", label: \"Plasmasword\" },\r\n    { def: \"MeleeWeapon_PsyfocusStaff\", label: \"Eltex staff\" },\r\n    { def: \"MeleeWeapon_MonoSwordBladelink\", label: \"Persona monosword\" },\r\n    { def: \"MeleeWeapon_ZeusHammerBladelink\", label: \"Persona zeushammer\" },\r\n    { def: \"MeleeWeapon_PlasmaSwordBladelink\", label: \"Persona plasmasword\" },\r\n    { def: \"Gun_Revolver\", label: \"Revolver\" },\r\n    { def: \"Gun_Autopistol\", label: \"Autopistol\" },\r\n    { def: \"Gun_MachinePistol\", label: \"Machine pistol\" },\r\n    { def: \"Gun_IncendiaryLauncher\", label: \"Incendiary launcher\" },\r\n    { def: \"Gun_SmokeLauncher\", label: \"Smoke launcher\" },\r\n    { def: \"Gun_EmpLauncher\", label: \"EMP launcher\" },\r\n    { def: \"Gun_BoltActionRifle\", label: \"Bolt-action rifle\" },\r\n    { def: \"Gun_PumpShotgun\", label: \"Pump shotgun\" },\r\n    { def: \"Gun_ChainShotgun\", label: \"Chain shotgun\" },\r\n    { def: \"Gun_HeavySMG\", label: \"Heavy SMG\" },\r\n    { def: \"Gun_LMG\", label: \"LMG\" },\r\n    { def: \"Gun_AssaultRifle\", label: \"Assault rifle\" },\r\n    { def: \"Gun_SniperRifle\", label: \"Sniper rifle\" },\r\n    { def: \"Gun_Minigun\", label: \"Minigun\" },\r\n    { def: \"Gun_TripleRocket\", label: \"Triple rocket launcher\" },\r\n    { def: \"Gun_DoomsdayRocket\", label: \"Doomsday rocket launcher\" },\r\n    { def: \"Gun_ChargeBlasterHeavy\", label: \"Heavy charge blaster\" },\r\n    { def: \"Gun_InfernoCannon\", label: \"Inferno cannon\" },\r\n    { def: \"Gun_Needle\", label: \"Needle gun\" },\r\n    { def: \"Bow_Short\", label: \"Short bow\" },\r\n    { def: \"Pila\", label: \"Pila\" },\r\n    { def: \"Bow_Recurve\", label: \"Recurve bow\" },\r\n    { def: \"Bow_Great\", label: \"Greatbow\" },\r\n    { def: \"Gun_ChargeRifle\", label: \"Charge rifle\" },\r\n    { def: \"Gun_ChargeLance\", label: \"Charge lance\" },\r\n    { def: \"Gun_ChargeBlasterHeavyTurret\", label: \"Light charge blaster\" },\r\n    { def: \"Gun_InfernoCannonTurret\", label: \"Inferno cannon\" },\r\n    { def: \"Weapon_GrenadeFrag\", label: \"Frag grenades\" },\r\n    { def: \"Weapon_GrenadeMolotov\", label: \"Molotov cocktails\" },\r\n    { def: \"Weapon_GrenadeEMP\", label: \"EMP grenades\" },\r\n    { def: \"Beer\", label: \"Beer\" },\r\n    { def: \"Ambrosia\", label: \"Ambrosia\" },\r\n    { def: \"GoJuice\", label: \"Go-juice\" },\r\n    { def: \"Luciferium\", label: \"Luciferium\" },\r\n    { def: \"Penoxycyline\", label: \"Penoxycyline\" },\r\n    { def: \"Flake\", label: \"Flake\" },\r\n    { def: \"PsychiteTea\", label: \"Psychite tea\" },\r\n    { def: \"Yayo\", label: \"Yayo\" },\r\n    { def: \"SmokeleafJoint\", label: \"Smokeleaf joint\" },\r\n    { def: \"WakeUp\", label: \"Wake-up\" },\r\n    { def: \"Meat_Muffalo\", label: \"Muffalo meat\" },\r\n    { def: \"Meat_Gazelle\", label: \"Gazelle meat\" },\r\n    { def: \"Meat_Iguana\", label: \"Iguana meat\" },\r\n    { def: \"Meat_Dromedary\", label: \"Dromedary meat\" },\r\n    { def: \"Meat_Bear_Grizzly\", label: \"Bear meat\" },\r\n    { def: \"Meat_Cougar\", label: \"Cougar meat\" },\r\n    { def: \"Meat_Panther\", label: \"Panther meat\" },\r\n    { def: \"Meat_Lynx\", label: \"Lynx meat\" },\r\n    { def: \"Meat_Cassowary\", label: \"Bird meat\" },\r\n    { def: \"Meat_Turkey\", label: \"Turkey meat\" },\r\n    { def: \"Meat_Chicken\", label: \"Chicken meat\" },\r\n    { def: \"Meat_Pig\", label: \"Pork\" },\r\n    { def: \"Meat_Cow\", label: \"Beef\" },\r\n    { def: \"Meat_Alpaca\", label: \"Alpaca meat\" },\r\n    { def: \"Meat_Duck\", label: \"Duck meat\" },\r\n    { def: \"Meat_Bison\", label: \"Bison meat\" },\r\n    { def: \"Meat_Goat\", label: \"Goat meat\" },\r\n    { def: \"Meat_Sheep\", label: \"Sheep meat\" },\r\n    { def: \"Meat_Horse\", label: \"Horse meat\" },\r\n    { def: \"Meat_Yak\", label: \"Yak beef\" },\r\n    { def: \"Meat_GuineaPig\", label: \"Guinea pig meat\" },\r\n    { def: \"Meat_Donkey\", label: \"Donkey meat\" },\r\n    { def: \"Meat_Rhinoceros\", label: \"Rhinoceros meat\" },\r\n    { def: \"Meat_Elephant\", label: \"Elephant meat\" },\r\n    { def: \"Meat_Megasloth\", label: \"Megasloth meat\" },\r\n    { def: \"Meat_Thrumbo\", label: \"Thrumbo meat\" },\r\n    { def: \"Meat_Hare\", label: \"Hare meat\" },\r\n    { def: \"Meat_Megaspider\", label: \"Insect meat\" },\r\n    { def: \"Meat_YorkshireTerrier\", label: \"Yorkshire terrier meat\" },\r\n    { def: \"Meat_Husky\", label: \"Husky meat\" },\r\n    { def: \"Meat_LabradorRetriever\", label: \"Labrador retriever meat\" },\r\n    { def: \"Meat_Cat\", label: \"Cat meat\" },\r\n    { def: \"Meat_Squirrel\", label: \"Squirrel meat\" },\r\n    { def: \"Meat_Alphabeaver\", label: \"Alphabeaver meat\" },\r\n    { def: \"Meat_Capybara\", label: \"Capybara meat\" },\r\n    { def: \"Meat_Chinchilla\", label: \"Chinchilla meat\" },\r\n    { def: \"Meat_Boomrat\", label: \"Boomrat meat\" },\r\n    { def: \"Meat_Raccoon\", label: \"Raccoon meat\" },\r\n    { def: \"Meat_Rat\", label: \"Rat meat\" },\r\n    { def: \"Meat_Deer\", label: \"Venison\" },\r\n    { def: \"Meat_Ibex\", label: \"Ibex meat\" },\r\n    { def: \"Meat_Elk\", label: \"Elk meat\" },\r\n    { def: \"Meat_Caribou\", label: \"Caribou meat\" },\r\n    { def: \"Meat_Tortoise\", label: \"Tortoise meat\" },\r\n    { def: \"Meat_Cobra\", label: \"Cobra meat\" },\r\n    { def: \"Meat_Monkey\", label: \"Monkey meat\" },\r\n    { def: \"Meat_Boomalope\", label: \"Boomalope meat\" },\r\n    { def: \"Meat_Warg\", label: \"Warg meat\" },\r\n    { def: \"Meat_Wolf_Timber\", label: \"Wolf meat\" },\r\n    { def: \"Meat_Fox_Fennec\", label: \"Fox meat\" },\r\n    { def: \"Meat_Human\", label: \"Human meat\" },\r\n    { def: \"Milk\", label: \"Milk\" },\r\n    { def: \"InsectJelly\", label: \"Insect jelly\" },\r\n    { def: \"EggChickenUnfertilized\", label: \"Chicken egg (unfert.)\" },\r\n    { def: \"EggDuckUnfertilized\", label: \"Duck egg (unfert.)\" },\r\n    { def: \"EggGooseUnfertilized\", label: \"Goose egg (unfert.)\" },\r\n    { def: \"EggChickenFertilized\", label: \"Chicken egg (fert.)\" },\r\n    { def: \"EggCobraFertilized\", label: \"Cobra egg (fert.)\" },\r\n    { def: \"EggIguanaFertilized\", label: \"Iguana egg (fert.)\" },\r\n    { def: \"EggTortoiseFertilized\", label: \"Tortoise egg (fert.)\" },\r\n    { def: \"EggCassowaryFertilized\", label: \"Cassowary egg (fert.)\" },\r\n    { def: \"EggEmuFertilized\", label: \"Emu egg (fert.)\" },\r\n    { def: \"EggOstrichFertilized\", label: \"Ostrich egg (fert.)\" },\r\n    { def: \"EggTurkeyFertilized\", label: \"Turkey egg (fert.)\" },\r\n    { def: \"EggDuckFertilized\", label: \"Duck egg (fert.)\" },\r\n    { def: \"EggGooseFertilized\", label: \"Goose egg (fert.)\" },\r\n    { def: \"Hay\", label: \"Hay\" },\r\n    { def: \"RawPotatoes\", label: \"Potatoes\" },\r\n    { def: \"RawFungus\", label: \"Raw fungus\" },\r\n    { def: \"RawRice\", label: \"Rice\" },\r\n    { def: \"RawAgave\", label: \"Agave fruit\" },\r\n    { def: \"RawCorn\", label: \"Corn\" },\r\n    { def: \"RawBerries\", label: \"Berries\" },\r\n    { def: \"ChunkSandstone\", label: \"Sandstone chunk\" },\r\n    { def: \"ChunkGranite\", label: \"Granite chunk\" },\r\n    { def: \"ChunkLimestone\", label: \"Limestone chunk\" },\r\n    { def: \"ChunkSlate\", label: \"Slate chunk\" },\r\n    { def: \"ChunkMarble\", label: \"Marble chunk\" },\r\n    { def: \"ChunkSlagSteel\", label: \"Steel slag chunk\" },\r\n    { def: \"Kibble\", label: \"Kibble\" },\r\n    { def: \"Pemmican\", label: \"Pemmican\" },\r\n    { def: \"Chocolate\", label: \"Chocolate\" },\r\n    { def: \"PsychoidLeaves\", label: \"Psychoid leaves\" },\r\n    { def: \"SmokeleafLeaves\", label: \"Smokeleaf leaves\" },\r\n    { def: \"ComponentIndustrial\", label: \"Component\" },\r\n    { def: \"MechSerumHealer\", label: \"Healer mech serum\" },\r\n    { def: \"PsychicSensitizer\", label: \"Psychic sensitizer\" },\r\n    { def: \"PsychicHarmonizer\", label: \"Psychic harmonizer\" },\r\n    { def: \"PsychicReader\", label: \"Psychic reader\" },\r\n    { def: \"Neurocalculator\", label: \"Neurocalculator\" },\r\n    { def: \"LearningAssistant\", label: \"Learning assistant\" },\r\n    { def: \"GastroAnalyzer\", label: \"Gastro-analyzer\" },\r\n    { def: \"Immunoenhancer\", label: \"Immunoenhancer\" },\r\n    { def: \"Coagulator\", label: \"Coagulator\" },\r\n    { def: \"HealingEnhancer\", label: \"Healing enhancer\" },\r\n    { def: \"ToughskinGland\", label: \"Toughskin gland\" },\r\n    { def: \"ArmorskinGland\", label: \"Armorskin gland\" },\r\n    { def: \"StoneskinGland\", label: \"Stoneskin gland\" },\r\n    { def: \"AestheticShaper\", label: \"Aesthetic shaper\" },\r\n    { def: \"AestheticNose\", label: \"Aesthetic nose\" },\r\n    { def: \"LoveEnhancer\", label: \"Love enhancer\" },\r\n    { def: \"DetoxifierStomach\", label: \"Detoxifier stomach\" },\r\n    { def: \"ReprocessorStomach\", label: \"Reprocessor stomach\" },\r\n    { def: \"NuclearStomach\", label: \"Nuclear stomach\" },\r\n    { def: \"CircadianAssistant\", label: \"Circadian assistant\" },\r\n    { def: \"CircadianHalfCycler\", label: \"Circadian half-cycler\" },\r\n    { def: \"Mindscrew\", label: \"Mindscrew\" },\r\n    { def: \"DrillArm\", label: \"Drill arm\" },\r\n    { def: \"FieldHand\", label: \"Field hand\" },\r\n    { def: \"HandTalon\", label: \"Hand talon\" },\r\n    { def: \"ElbowBlade\", label: \"Elbow blade\" },\r\n    { def: \"KneeSpike\", label: \"Knee spike\" },\r\n    { def: \"VenomFangs\", label: \"Venom fangs\" },\r\n    { def: \"VenomTalon\", label: \"Venom talon\" },\r\n    { def: \"Neutroamine\", label: \"Neutroamine\" },\r\n    { def: \"ComponentSpacer\", label: \"Advanced component\" },\r\n    { def: \"Chemfuel\", label: \"Chemfuel\" },\r\n    { def: \"BroadshieldCore\", label: \"Shield core\" },\r\n];\r\n\r\nexport const stats = [\r\n    { def: \"Ability_RequiredPsylink\", label: \"Psylink level\" },\r\n    { def: \"Ability_CastingTime\", label: \"Casting time\" },\r\n    { def: \"Ability_EntropyGain\", label: \"Neural heat gain\" },\r\n    { def: \"Ability_PsyfocusCost\", label: \"Psyfocus cost\" },\r\n    { def: \"Ability_Range\", label: \"Range\" },\r\n    { def: \"Ability_Duration\", label: \"Duration\" },\r\n    { def: \"Ability_EffectRadius\", label: \"Effect radius\" },\r\n    { def: \"Ability_GoodwillImpact\", label: \"Goodwill impact\" },\r\n    { def: \"Ability_DetectChancePerEntropy\", label: \"Detection chance\" },\r\n    {\r\n        def: \"StuffEffectMultiplierArmor\",\r\n        label: \"Armor - Material effect multiplier\",\r\n    },\r\n    {\r\n        def: \"StuffEffectMultiplierInsulation_Cold\",\r\n        label: \"Insulation - Cold - Material effect multiplier\",\r\n    },\r\n    {\r\n        def: \"StuffEffectMultiplierInsulation_Heat\",\r\n        label: \"Insulation - Heat - Material effect multiplier\",\r\n    },\r\n    { def: \"ArmorRating_Sharp\", label: \"Armor - Sharp\" },\r\n    { def: \"ArmorRating_Blunt\", label: \"Armor - Blunt\" },\r\n    { def: \"ArmorRating_Heat\", label: \"Armor - Heat\" },\r\n    { def: \"Insulation_Cold\", label: \"Insulation - Cold\" },\r\n    { def: \"Insulation_Heat\", label: \"Insulation - Heat\" },\r\n    { def: \"EnergyShieldEnergyMax\", label: \"Shield max energy\" },\r\n    { def: \"EnergyShieldRechargeRate\", label: \"Shield recharge rate\" },\r\n    { def: \"SmokepopBeltRadius\", label: \"Smokepop pack radius\" },\r\n    { def: \"EquipDelay\", label: \"Equip delay\" },\r\n    { def: \"MaxHitPoints\", label: \"Max hit points\" },\r\n    { def: \"Mass\", label: \"Mass\" },\r\n    { def: \"MarketValue\", label: \"Market value\" },\r\n    { def: \"MarketValueIgnoreHp\", label: \"Market value ignoring hitpoints\" },\r\n    { def: \"SellPriceFactor\", label: \"Sell price multiplier\" },\r\n    { def: \"RoyalFavorValue\", label: \"Honor value\" },\r\n    { def: \"Flammability\", label: \"Flammability\" },\r\n    { def: \"WorkToMake\", label: \"Work to make\" },\r\n    { def: \"DeteriorationRate\", label: \"Deterioration rate\" },\r\n    { def: \"Beauty\", label: \"Beauty\" },\r\n    { def: \"Cleanliness\", label: \"Cleanliness\" },\r\n    { def: \"Comfort\", label: \"Comfort\" },\r\n    { def: \"Nutrition\", label: \"Nutrition\" },\r\n    { def: \"FoodPoisonChanceFixedHuman\", label: \"Food poison chance\" },\r\n    { def: \"ShootingAccuracyTurret\", label: \"Shooting accuracy\" },\r\n    { def: \"MedicalPotency\", label: \"Medical potency\" },\r\n    { def: \"MedicalQualityMax\", label: \"Medical tend quality maximum\" },\r\n    { def: \"ConstructionSpeedFactor\", label: \"Construction speed\" },\r\n    { def: \"MeditationFocusStrength\", label: \"Meditation psyfocus bonus\" },\r\n    { def: \"PsychicSensitivityOffset\", label: \"Psychic sensitivity offset\" },\r\n    { def: \"WorkToBuild\", label: \"Work to build\" },\r\n    { def: \"DoorOpenSpeed\", label: \"Door opening speed\" },\r\n    { def: \"BedRestEffectiveness\", label: \"Rest effectiveness\" },\r\n    { def: \"TrapMeleeDamage\", label: \"Trap melee damage\" },\r\n    { def: \"TrapSpringChance\", label: \"Trap spring chance\" },\r\n    { def: \"ResearchSpeedFactor\", label: \"Research speed factor\" },\r\n    { def: \"MedicalTendQualityOffset\", label: \"Medical tend quality offset\" },\r\n    { def: \"ImmunityGainSpeedFactor\", label: \"Immunity gain speed factor\" },\r\n    { def: \"WorkTableWorkSpeedFactor\", label: \"Work speed factor\" },\r\n    { def: \"WorkTableEfficiencyFactor\", label: \"Work efficiency factor\" },\r\n    { def: \"JoyGainFactor\", label: \"Recreation power\" },\r\n    {\r\n        def: \"SurgerySuccessChanceFactor\",\r\n        label: \"Surgery success chance factor\",\r\n    },\r\n    { def: \"MeleeDPS\", label: \"Melee DPS\" },\r\n    { def: \"MeleeArmorPenetration\", label: \"Melee armor penetration\" },\r\n    { def: \"MeleeHitChance\", label: \"Melee hit chance\" },\r\n    { def: \"MeleeDodgeChance\", label: \"Melee dodge chance\" },\r\n    { def: \"ShootingAccuracyPawn\", label: \"Shooting accuracy\" },\r\n    { def: \"AimingDelayFactor\", label: \"Aiming time\" },\r\n    { def: \"PawnTrapSpringChance\", label: \"Trap spring chance\" },\r\n    { def: \"IncomingDamageFactor\", label: \"Incoming damage multiplier\" },\r\n    { def: \"MoveSpeed\", label: \"Move speed\" },\r\n    { def: \"MentalBreakThreshold\", label: \"Mental break threshold\" },\r\n    { def: \"PsychicSensitivity\", label: \"Psychic sensitivity\" },\r\n    { def: \"ToxicSensitivity\", label: \"Toxic sensitivity\" },\r\n    { def: \"GlobalLearningFactor\", label: \"Global learning factor\" },\r\n    { def: \"HungerRateMultiplier\", label: \"Hunger rate multiplier\" },\r\n    { def: \"RestRateMultiplier\", label: \"Rest rate multiplier\" },\r\n    { def: \"EatingSpeed\", label: \"Eating speed\" },\r\n    { def: \"ComfyTemperatureMin\", label: \"Minimum comfortable temperature\" },\r\n    { def: \"ComfyTemperatureMax\", label: \"Maximum comfortable temperature\" },\r\n    { def: \"ImmunityGainSpeed\", label: \"Immunity gain speed\" },\r\n    { def: \"CarryingCapacity\", label: \"Carrying capacity\" },\r\n    { def: \"MeatAmount\", label: \"Meat amount\" },\r\n    { def: \"LeatherAmount\", label: \"Leather amount\" },\r\n    { def: \"MinimumHandlingSkill\", label: \"Minimum handling skill\" },\r\n    { def: \"PainShockThreshold\", label: \"Pain shock threshold\" },\r\n    { def: \"ForagedNutritionPerDay\", label: \"Foraged food amount\" },\r\n    { def: \"NegotiationAbility\", label: \"Negotiation ability\" },\r\n    { def: \"PawnBeauty\", label: \"Beauty\" },\r\n    { def: \"ArrestSuccessChance\", label: \"Arrest success chance\" },\r\n    { def: \"TradePriceImprovement\", label: \"Trade price improvement\" },\r\n    { def: \"SocialImpact\", label: \"Social impact\" },\r\n    { def: \"TameAnimalChance\", label: \"Tame animal chance\" },\r\n    { def: \"TrainAnimalChance\", label: \"Train animal chance\" },\r\n    { def: \"WorkSpeedGlobal\", label: \"Global work speed\" },\r\n    { def: \"MiningSpeed\", label: \"Mining speed\" },\r\n    { def: \"DeepDrillingSpeed\", label: \"Deep drilling speed\" },\r\n    { def: \"MiningYield\", label: \"Mining yield\" },\r\n    { def: \"SmoothingSpeed\", label: \"Smoothing speed\" },\r\n    { def: \"ResearchSpeed\", label: \"Research speed\" },\r\n    { def: \"AnimalGatherSpeed\", label: \"Animal gather speed\" },\r\n    { def: \"AnimalGatherYield\", label: \"Animal gather yield\" },\r\n    { def: \"PlantWorkSpeed\", label: \"Plant work speed\" },\r\n    { def: \"PlantHarvestYield\", label: \"Plant harvest yield\" },\r\n    { def: \"HuntingStealth\", label: \"Hunting stealth\" },\r\n    { def: \"ConstructionSpeed\", label: \"Construction speed\" },\r\n    { def: \"ConstructSuccessChance\", label: \"Construct success chance\" },\r\n    {\r\n        def: \"FixBrokenDownBuildingSuccessChance\",\r\n        label: \"Repair success chance\",\r\n    },\r\n    { def: \"MedicalTendSpeed\", label: \"Medical tend speed\" },\r\n    { def: \"MedicalTendQuality\", label: \"Medical tend quality\" },\r\n    { def: \"MedicalOperationSpeed\", label: \"Medical operation speed\" },\r\n    {\r\n        def: \"MedicalSurgerySuccessChance\",\r\n        label: \"Medical surgery success chance\",\r\n    },\r\n    { def: \"SmeltingSpeed\", label: \"Smelting speed\" },\r\n    { def: \"GeneralLaborSpeed\", label: \"General labor speed\" },\r\n    { def: \"DrugSynthesisSpeed\", label: \"Drug synthesis speed\" },\r\n    { def: \"CookSpeed\", label: \"Cooking speed\" },\r\n    { def: \"FoodPoisonChance\", label: \"Food poison chance\" },\r\n    { def: \"DrugCookingSpeed\", label: \"Drug cooking speed\" },\r\n    { def: \"ButcheryFleshSpeed\", label: \"Butchery speed\" },\r\n    { def: \"ButcheryMechanoidSpeed\", label: \"Mechanoid shredding speed\" },\r\n    { def: \"ButcheryFleshEfficiency\", label: \"Butchery efficiency\" },\r\n    {\r\n        def: \"ButcheryMechanoidEfficiency\",\r\n        label: \"Mechanoid shredding efficiency\",\r\n    },\r\n    { def: \"StuffPower_Armor_Sharp\", label: \"Armor - Sharp\" },\r\n    { def: \"StuffPower_Armor_Blunt\", label: \"Armor - Blunt\" },\r\n    { def: \"StuffPower_Armor_Heat\", label: \"Armor - Heat\" },\r\n    { def: \"StuffPower_Insulation_Cold\", label: \"Insulation - Cold\" },\r\n    { def: \"StuffPower_Insulation_Heat\", label: \"Insulation - Heat\" },\r\n    { def: \"MeleeWeapon_AverageDPS\", label: \"Melee damage per second\" },\r\n    {\r\n        def: \"MeleeWeapon_AverageArmorPenetration\",\r\n        label: \"Melee armor penetration\",\r\n    },\r\n    { def: \"MeleeWeapon_DamageMultiplier\", label: \"Melee damage multiplier\" },\r\n    { def: \"MeleeWeapon_CooldownMultiplier\", label: \"Melee cooldown\" },\r\n    { def: \"SharpDamageMultiplier\", label: \"Sharp damage\" },\r\n    { def: \"BluntDamageMultiplier\", label: \"Blunt damage\" },\r\n    { def: \"Bladelink_DetectionChance\", label: \"Detection chance\" },\r\n    { def: \"AccuracyTouch\", label: \"Accuracy (close)\" },\r\n    { def: \"AccuracyShort\", label: \"Accuracy (short)\" },\r\n    { def: \"AccuracyMedium\", label: \"Accuracy (medium)\" },\r\n    { def: \"AccuracyLong\", label: \"Accuracy (long)\" },\r\n    { def: \"RangedWeapon_Cooldown\", label: \"Ranged cooldown\" },\r\n    { def: \"RangedWeapon_DamageMultiplier\", label: \"Damage multiplier\" },\r\n    { def: \"JumpRange\", label: \"Jump range\" },\r\n    { def: \"PsychicEntropyMax\", label: \"Neural heat limit\" },\r\n    { def: \"PsychicEntropyRecoveryRate\", label: \"Neural heat recovery rate\" },\r\n    { def: \"PsychicEntropyGain\", label: \"Neural heat gain\" },\r\n    { def: \"MeditationFocusGain\", label: \"Meditation psyfocus gain\" },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Switch } from \"./Switch\";\r\nimport { TextureProps } from \"./TexturePreview\";\r\nimport Select from \"react-select\";\r\nimport { observer } from \"mobx-react\";\r\nimport { computed } from \"mobx\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport { stuffs } from \"../data/defs\";\r\nimport flatten from \"lodash/flatten\";\r\n\r\n@observer\r\nexport default class TextureStuff extends Component<TextureProps & FloorProps> {\r\n    @computed get options() {\r\n        const { floor } = this.props;\r\n        return flatten(\r\n            floor.stuffCategories.map((cat) =>\r\n                stuffs[cat].map((s) => ({ label: s.label, value: s.color }))\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { settings, toggleSetting, updateSetting } = this.props.texture;\r\n        return (\r\n            <div className=\"columns\" style={{ alignItems: \"center\" }}>\r\n                <div className=\"column is-4\">\r\n                    <Switch\r\n                        id=\"texture-stuff-preview\"\r\n                        label=\"Preview stuff colour\"\r\n                        checked={settings.preview}\r\n                        onChange={() => toggleSetting(\"preview\")}\r\n                    />\r\n                </div>\r\n                {settings.preview && (\r\n                    <>\r\n                        <div className=\"column is-1\">\r\n                            <div\r\n                                className=\"colour-preview\"\r\n                                style={{\r\n                                    backgroundColor: settings.previewColor,\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"column is-7\">\r\n                            <Select\r\n                                id=\"texture-stuff-preview-stuff\"\r\n                                value={this.options.find(\r\n                                    (o) => o.value === settings.previewColor\r\n                                )}\r\n                                defaultValue={this.options[0]}\r\n                                onChange={(o) => {\r\n                                    console.log({ o });\r\n                                    updateSetting(\r\n                                        \"previewColor\",\r\n                                        (o as option).value\r\n                                    );\r\n                                }}\r\n                                options={this.options}\r\n                                className=\"react-select is-small\"\r\n                                classNamePrefix=\" \"\r\n                            ></Select>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, autorun, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport FetchButton from \"./FetchButton\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport TexturePreview from \"./TexturePreview\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport * as yup from \"yup\";\r\nimport \"bulma-slider\";\r\nimport { errorArray } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\nimport { TextureSize } from \"./TextureSize\";\r\nimport { Switch } from \"./Switch\";\r\nimport debounce from \"lodash/debounce\";\r\nimport TextureStuff from \"./TextureStuff\";\r\nimport Help from \"./Help\";\r\n\r\nexport interface TextureSettings {\r\n    contrast: number;\r\n    brightness: number;\r\n    mirror: boolean;\r\n    desaturate: boolean;\r\n    revision: number;\r\n    tile: boolean;\r\n    tilesX: number;\r\n    tilesY: number;\r\n    grid: boolean;\r\n    preview: boolean;\r\n    previewColor: string;\r\n}\r\n\r\nexport const TextureSchema = yup.object().shape({\r\n    raw: yup\r\n        .object()\r\n        .required()\r\n        .shape({ texture: yup.mixed().required(\"floor must have a texture\") }),\r\n});\r\n\r\ntype settingUpdateFn = <\r\n    K extends keyof TextureSettings,\r\n    V extends TextureSettings[K]\r\n>(\r\n    setting: K,\r\n    value: V\r\n) => void;\r\n\r\ntype settingToggleFn = (setting: BooleanProperties<TextureSettings>) => void;\r\ntype Size = { width: number; height: number };\r\n\r\nexport class Texture {\r\n    @observable raw: {\r\n        texture: Blob;\r\n        size: Size;\r\n    };\r\n    @observable out?: {\r\n        texture: Blob;\r\n        size: Size;\r\n    };\r\n    @observable settings: TextureSettings;\r\n    @observable rendering: boolean = false;\r\n\r\n    @action updateSetting: settingUpdateFn = (setting, value): void => {\r\n        this.settings[setting] = value;\r\n        this.settings.revision++;\r\n    };\r\n\r\n    @action toggleSetting: settingToggleFn = (setting): void => {\r\n        this.settings[setting] = !this.settings[setting];\r\n        this.settings.revision++;\r\n    };\r\n\r\n    @action async updateTexture(settings: TextureSettings, raw: Blob) {\r\n        const canvas = this.renderCanvas;\r\n        const {\r\n            brightness,\r\n            desaturate,\r\n            contrast,\r\n            tile,\r\n            tilesX,\r\n            tilesY,\r\n        } = settings;\r\n        if (!canvas || !raw) return;\r\n        this.rendering = true;\r\n\r\n        const rawData = await createImageBitmap(raw);\r\n\r\n        const width = 1024;\r\n        const height = 1024;\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        const filter = `contrast(${contrast / 100}) saturate(${\r\n            desaturate ? 0 : 1\r\n        }) brightness(${brightness / 100})`;\r\n        ctx!.filter = filter;\r\n\r\n        if (tile) {\r\n            const dest = {\r\n                // take account of possible stretching\r\n                width: width / tilesX,\r\n                height: height / tilesY,\r\n            };\r\n            for (let x = 0; x < tilesX; x++) {\r\n                for (let y = 0; y < tilesY; y++) {\r\n                    // draw image in each tile\r\n                    ctx.drawImage(\r\n                        rawData,\r\n                        x * dest.width,\r\n                        y * dest.height,\r\n                        dest.width,\r\n                        dest.height\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            ctx.drawImage(rawData, 0, 0, width, height);\r\n        }\r\n\r\n        // after rendering canvas, update out texture\r\n        canvas.toBlob((blob) => {\r\n            if (blob)\r\n                this.out = {\r\n                    texture: blob,\r\n                    size: { width: canvas.width, height: canvas.height },\r\n                };\r\n            else {\r\n                console.error(\"failed creating out texture\");\r\n            }\r\n            this.rendering = false;\r\n        });\r\n    }\r\n\r\n    setTiles() {\r\n        this.settings.tilesX = Math.max(\r\n            Math.floor(1024 / this.raw.size.width),\r\n            1\r\n        );\r\n        this.settings.tilesY = Math.max(\r\n            Math.floor(1024 / this.raw.size.height),\r\n            1\r\n        );\r\n    }\r\n    private setRawSize = async () => {\r\n        const image = await createImageBitmap(this.raw.texture);\r\n        this.raw.size = {\r\n            width: image.width,\r\n            height: image.height,\r\n        };\r\n        this.setTiles();\r\n    };\r\n    private renderCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n    private updateTextureDebounced = debounce(this.updateTexture, 500, {\r\n        trailing: true,\r\n        leading: true,\r\n        maxWait: 500,\r\n    });\r\n\r\n    constructor(raw: Blob) {\r\n        this.raw = {\r\n            texture: raw,\r\n            size: {\r\n                width: 0,\r\n                height: 0,\r\n            },\r\n        };\r\n        this.settings = {\r\n            contrast: 100,\r\n            brightness: 100,\r\n            mirror: false,\r\n            desaturate: false,\r\n            tile: false,\r\n            tilesX: 1,\r\n            tilesY: 1,\r\n            revision: 0,\r\n            grid: false,\r\n            preview: false,\r\n            previewColor: \"white\",\r\n        };\r\n        this.setRawSize();\r\n        autorun(\r\n            () => {\r\n                const { settings, raw } = this;\r\n\r\n                // revisions are incremented by settings changes, dereference it here to trigger autoruns.\r\n                /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n                const revision = settings.revision;\r\n                if (raw) this.updateTextureDebounced(settings, raw.texture);\r\n            },\r\n            {\r\n                name: \"updateTexture\",\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nexport default class TextureComponent extends Component<FloorProps> {\r\n    @action updateTexture = (texture: Blob) => {\r\n        this.props.floor.texture = new Texture(texture);\r\n    };\r\n\r\n    @computed get errors(): string[] {\r\n        // console.log(\r\n        //     this.props.floor.validationErrors.texture,\r\n        //     errorArray(this.props.floor.validationErrors.texture as any)\r\n        // );\r\n        return errorArray(this.props.floor.validationErrors.texture as any);\r\n    }\r\n\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { texture } = floor;\r\n        return (\r\n            <>\r\n                <label className=\"label flex\">\r\n                    Texture\r\n                    <Help video>\r\n                        <div>youtube video here</div>\r\n                    </Help>\r\n                </label>\r\n                {!texture && (\r\n                    <>\r\n                        <UploadButton\r\n                            setTexture={this.updateTexture}\r\n                        ></UploadButton>\r\n                        <FetchButton\r\n                            setTexture={this.updateTexture}\r\n                        ></FetchButton>\r\n                    </>\r\n                )}\r\n                {texture && (\r\n                    <button\r\n                        className=\"button is-danger is-small is-pulled-right\"\r\n                        style={{\r\n                            position: \"relative\",\r\n                            top: \"-30px\",\r\n                            marginBottom: \"-30px\",\r\n                        }}\r\n                        onClick={() => (floor.texture = undefined)}\r\n                    >\r\n                        Clear Texture\r\n                    </button>\r\n                )}\r\n                <TexturePreview texture={texture} />\r\n                {this.errors &&\r\n                    this.errors.map((error, index) => (\r\n                        <Error touched={false} error={error} key={index} />\r\n                    ))}\r\n                {texture && <TextureSize texture={texture} />}\r\n                {texture && (\r\n                    <>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-mirror`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Check pattern tiling\"\r\n                                    checked={texture.settings.mirror}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"mirror\")\r\n                                    }\r\n                                    help={\r\n                                        <div>\r\n                                            <p>\r\n                                                Offset the texture so that the\r\n                                                edges appear in the middle.\r\n                                            </p>\r\n                                            <img\r\n                                                src=\"https://i.imgur.com/Z0mwEDQ.gif\"\r\n                                                alt=\"preview of pattern tiling\"\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-grid`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Show floor grid\"\r\n                                    checked={texture.settings.grid}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"grid\")\r\n                                    }\r\n                                    help={\r\n                                        <div>\r\n                                            <p>\r\n                                                Overlays a cell grid. The game\r\n                                                turns all floor texture into a\r\n                                                16 x 16 grid, which can be\r\n                                                previewed with the overlay.\r\n                                            </p>\r\n                                            <img\r\n                                                src=\"https://i.imgur.com/u04zA49.gif\"\r\n                                                alt=\"floor grid example\"\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <Switch\r\n                                    id={`${floor.id}-desaturate`}\r\n                                    rounded={true}\r\n                                    outlined={true}\r\n                                    small={true}\r\n                                    label=\"Desaturate\"\r\n                                    checked={texture.settings.desaturate}\r\n                                    onChange={() =>\r\n                                        texture.toggleSetting(\"desaturate\")\r\n                                    }\r\n                                    help={\r\n                                        <div>\r\n                                            <p>\r\n                                                Desaturate the texture, creating\r\n                                                a grayscale version that will be\r\n                                                coloured by the stuff it's built\r\n                                                from.\r\n                                            </p>\r\n                                            <img\r\n                                                src=\"https://i.imgur.com/bbMWHJd.gif\"\r\n                                                alt=\"desaturation example\"\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <TextureStuff texture={texture} floor={floor} />\r\n                        <div className=\"field\">\r\n                            <label className=\"label flex\">\r\n                                Contrast: {texture.settings.contrast}%\r\n                                <Help>\r\n                                    <div>\r\n                                        <p>\r\n                                            Change contrast of the texture. A\r\n                                            lower contrast generally works\r\n                                            better with stuffed textures.\r\n                                        </p>\r\n                                        <img\r\n                                            src=\"https://i.imgur.com/tJIQLmB.gif\"\r\n                                            alt=\"contrast example\"\r\n                                        />\r\n                                    </div>\r\n                                </Help>\r\n                            </label>\r\n                            <input\r\n                                className=\"slider is-fullwidth is-small is-primary\"\r\n                                step=\"1\"\r\n                                min=\"0\"\r\n                                max=\"200\"\r\n                                value={texture.settings.contrast}\r\n                                onChange={(ev) =>\r\n                                    texture.updateSetting(\r\n                                        \"contrast\",\r\n                                        parseInt(ev.target.value)\r\n                                    )\r\n                                }\r\n                                type=\"range\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label className=\"label flex\">\r\n                                Brightness: {texture.settings.brightness}%\r\n                                <Help>\r\n                                    <div>\r\n                                        <p>\r\n                                            Change brightness of the texture. A\r\n                                            higher brightness generally works\r\n                                            better with stuffed textures.\r\n                                        </p>\r\n                                        <img\r\n                                            src=\"https://i.imgur.com/zrdE0ew.gif\"\r\n                                            alt=\"brightness example\"\r\n                                        />\r\n                                    </div>\r\n                                </Help>\r\n                            </label>\r\n                            <input\r\n                                className=\"slider is-fullwidth is-small is-primary\"\r\n                                step=\"1\"\r\n                                min=\"0\"\r\n                                max=\"200\"\r\n                                value={texture.settings.brightness}\r\n                                onChange={(ev) =>\r\n                                    texture.updateSetting(\r\n                                        \"brightness\",\r\n                                        parseInt(ev.target.value)\r\n                                    )\r\n                                }\r\n                                type=\"range\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export const simpleMode_materials: Material[] = [\r\n    \"Stone\",\r\n    \"Wood\",\r\n    \"Cloth\",\r\n    \"Metal\",\r\n];\r\n\r\nexport const simpleMode_stuffCategories: { [key in Material]: string[] } = {\r\n    Stone: [\"Stony\"],\r\n    Wood: [\"Woody\"],\r\n    Metal: [\"Metallic\"],\r\n    Cloth: [\"Fabric\"],\r\n};\r\n\r\nexport const simpleMode_type: Type[] = [\"Basic\", \"Pretty\", \"Royal\"];\r\n\r\nexport const simpleMode_stuffCost: { [key in Type]: number } = {\r\n    Basic: 4,\r\n    Pretty: 4,\r\n    Royal: 10,\r\n};\r\n\r\nexport const simpleMode_tags: { [key in Type]: string[] } = {\r\n    Basic: [\"Floor\"],\r\n    Pretty: [\"Floor\"],\r\n    Royal: [\"Floor\", \"FineFloor\"],\r\n};\r\n\r\nexport const simpleMode_researchPrerequisites: {\r\n    [mat in Material]: { [key in Type]: string[] };\r\n} = {\r\n    Stone: {\r\n        Basic: [],\r\n        Pretty: [\"Stonecutting\"],\r\n        Royal: [\"Stonecutting\"],\r\n    },\r\n    Wood: {\r\n        Basic: [],\r\n        Pretty: [],\r\n        Royal: [],\r\n    },\r\n    Metal: {\r\n        Basic: [],\r\n        Pretty: [\"Machining\"],\r\n        Royal: [\"Machining\"],\r\n    },\r\n    Cloth: {\r\n        Basic: [\"CarpetMaking\"],\r\n        Pretty: [\"CarpetMaking\"],\r\n        Royal: [\"CarpetMaking\"],\r\n    },\r\n};\r\n\r\nexport const simpleMode_affordances: { [mat in Material]: string[] } = {\r\n    Stone: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Wood: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Metal: [\"Light\", \"Medium\", \"Heavy\"],\r\n    Cloth: [\"Light\", \"Medium\", \"Heavy\"],\r\n};\r\n\r\nexport const simpleMode_affordanceNeeded: { [mat in Material]: string } = {\r\n    Stone: \"Heavy\",\r\n    Wood: \"Heavy\",\r\n    Metal: \"Heavy\",\r\n    Cloth: \"Heavy\",\r\n};\r\n\r\nexport const simpleMode_burnedTerrain: Partial<\r\n    { [mat in Material]: string }\r\n> = {\r\n    Wood: \"BurnedWoodPlankFloor\",\r\n    Cloth: \"BurnedCarpet\",\r\n};\r\n\r\nexport const simpleMode_stats: {\r\n    [mat in Material]: { [key in Type]: defValue[] };\r\n} = {\r\n    Stone: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 75,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 150,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 800,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n        ],\r\n    },\r\n    Wood: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 250,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.25,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 400,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 2100,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n    },\r\n    Cloth: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 250,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.25,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 400,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 2100,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Flammability\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n    },\r\n    Metal: {\r\n        Basic: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 800,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 0,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.1,\r\n            },\r\n        ],\r\n        Pretty: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 1500,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 2,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.2,\r\n            },\r\n        ],\r\n        Royal: [\r\n            {\r\n                id: 1,\r\n                def: \"WorkToBuild\",\r\n                value: 8000,\r\n            },\r\n            {\r\n                id: 2,\r\n                def: \"Beauty\",\r\n                value: 3,\r\n            },\r\n            {\r\n                id: 3,\r\n                def: \"Cleanliness\",\r\n                value: 0.3,\r\n            },\r\n        ],\r\n    },\r\n};\r\n","export const edgeTypes: EdgeType[] = [\"Fade\", \"FadeRough\", \"Hard\"];\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nexport class DeleteX extends Component<Partial<React.SVGProps<SVGSVGElement>>> {\r\n    render() {\r\n        return (\r\n            <>\r\n                <svg\r\n                    height=\"14\"\r\n                    width=\"14\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    aria-hidden=\"true\"\r\n                    focusable=\"false\"\r\n                    {...this.props}\r\n                >\r\n                    <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path>\r\n                </svg>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import classNames from \"classnames\";\r\nimport { action, computed } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { DeleteX } from \"./DeleteX\";\r\nimport { errorArray, ValidationErrors } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\nimport Help from \"./Help\";\r\n\r\ninterface CostListProps {\r\n    id: string;\r\n    costs: defValue[];\r\n    errors?: ValidationErrors<defValue>[];\r\n    help?: string | React.ReactElement<any, any>;\r\n}\r\n\r\n@observer\r\nexport default class CostList extends Component<CostListProps> {\r\n    static costCount = 0;\r\n\r\n    @computed get errorArray(): string[] {\r\n        const { errors } = this.props;\r\n        const msgs: string[] = [];\r\n        if (errors) {\r\n            for (const error of errors) {\r\n                msgs.push(...errorArray(error));\r\n            }\r\n        }\r\n        return [...new Set(msgs)];\r\n    }\r\n\r\n    @action add = () => {\r\n        this.props.costs.push({\r\n            id: `cost-${this.props.id}-${CostList.costCount++}`,\r\n            def: \"\",\r\n            value: 0,\r\n        });\r\n    };\r\n\r\n    @action delete = (id: id) => {\r\n        const removing = this.props.costs.findIndex((cost) => cost.id === id);\r\n        if (removing < 0) return;\r\n        this.props.costs.splice(removing, 1);\r\n    };\r\n\r\n    render() {\r\n        const { costs, errors, help } = this.props;\r\n\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label flex\">\r\n                    CostList\r\n                    {help && <Help title={help} />}\r\n                </label>\r\n                <div className=\"costlist tags\">\r\n                    {costs.map((defCount, index) => (\r\n                        <Cost\r\n                            cost={defCount}\r\n                            key={defCount.id}\r\n                            onDelete={this.delete}\r\n                            errors={errors?.[index]}\r\n                        />\r\n                    ))}\r\n                    <button\r\n                        className=\"button is-success is-small\"\r\n                        onClick={this.add}\r\n                    >\r\n                        Add Cost\r\n                    </button>\r\n                </div>\r\n                {this.errorArray.map((msg, index) => (\r\n                    <Error touched={true} error={msg} key={index} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface CostProps {\r\n    cost: defValue;\r\n    errors?: ValidationErrors<defValue>;\r\n    onDelete: (id: id) => void;\r\n}\r\n\r\n@observer\r\nexport class Cost extends Component<CostProps> {\r\n    render() {\r\n        const { cost, onDelete, errors } = this.props;\r\n        return (\r\n            <div className=\"defCount tag is-info\">\r\n                <input\r\n                    id={`defCount-count-${cost.id}`}\r\n                    placeholder=\"count\"\r\n                    value={cost.value}\r\n                    onChange={(e) =>\r\n                        (cost.value = parseInt(e.target.value) || 0)\r\n                    }\r\n                    style={{\r\n                        width: `calc( ${\r\n                            cost.value.toString().length\r\n                        }ch + 5px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: cost.value === 0,\r\n                        error: errors?.value,\r\n                    })}\r\n                />\r\n                ×\r\n                <input\r\n                    id={`defCount-def-${cost.id}`}\r\n                    placeholder=\"thingDef\"\r\n                    value={cost.def}\r\n                    onChange={(e) => (cost.def = e.target.value)}\r\n                    style={{\r\n                        width: cost.def\r\n                            ? `calc( ${cost.def.length}ch + 15px )`\r\n                            : `calc( ${\"thingDef\".length}ch + 15px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: !cost.def,\r\n                        error: errors?.def,\r\n                    })}\r\n                    list=\"building-materials-list\"\r\n                />\r\n                <div className=\"remove\" onClick={() => onDelete(cost.id)}>\r\n                    <DeleteX />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import classNames from \"classnames\";\r\nimport { action, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { ChangeEvent, Component } from \"react\";\r\nimport { DeleteX } from \"./DeleteX\";\r\nimport { errorArray, ValidationErrors } from \"../utils\";\r\nimport { Error } from \"./Error\";\r\nimport Help from \"./Help\";\r\n\r\ninterface StatListProps {\r\n    id: string;\r\n    stats: defValue[];\r\n    errors?: ValidationErrors<defValue>[];\r\n    help?: string | React.ReactElement<any, any>;\r\n}\r\n\r\n@observer\r\nexport default class StatList extends Component<StatListProps> {\r\n    static statCount = 0;\r\n\r\n    @computed get errorArray(): string[] {\r\n        const { errors } = this.props;\r\n        const msgs: string[] = [];\r\n        if (errors) {\r\n            for (const error of errors) {\r\n                msgs.push(...errorArray(error));\r\n            }\r\n        }\r\n        return [...new Set(msgs)];\r\n    }\r\n\r\n    @action add = () => {\r\n        this.props.stats.push({\r\n            id: `stat-${this.props.id}-${StatList.statCount++}`,\r\n            def: \"\",\r\n            value: 0,\r\n        });\r\n    };\r\n\r\n    @action delete = (id: id) => {\r\n        const removing = this.props.stats.findIndex((stat) => stat.id === id);\r\n        if (removing < 0) return;\r\n        this.props.stats.splice(removing, 1);\r\n    };\r\n\r\n    render() {\r\n        const { stats, errors, help } = this.props;\r\n\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label flex\">\r\n                    StatList\r\n                    {help && <Help title={help} />}\r\n                </label>\r\n                <div className=\"statlist tags\">\r\n                    {stats.map((stat, index) => (\r\n                        <Stat\r\n                            stat={stat}\r\n                            key={stat.id}\r\n                            onDelete={this.delete}\r\n                            errors={errors?.[index]}\r\n                        />\r\n                    ))}\r\n                    <button\r\n                        className=\"button is-success is-small\"\r\n                        onClick={this.add}\r\n                    >\r\n                        Add Stat\r\n                    </button>\r\n                </div>\r\n                {this.errorArray.map((msg, index) => (\r\n                    <Error touched={true} error={msg} key={index} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface StatProps {\r\n    stat: defValue;\r\n    errors?: ValidationErrors<defValue>;\r\n    onDelete: (id: id) => void;\r\n}\r\n\r\ninterface StatState {\r\n    valueTemp: string;\r\n}\r\n\r\n@observer\r\nexport class Stat extends Component<StatProps, StatState> {\r\n    @observable valueTemp: string;\r\n\r\n    @action updateValue = (ev: ChangeEvent<HTMLInputElement>): void => {\r\n        this.valueTemp = ev.target.value;\r\n    };\r\n\r\n    @action applyValue = (): void => {\r\n        this.props.stat.value =\r\n            parseFloat(this.valueTemp.replace(/,/g, \".\")) || 0;\r\n        this.valueTemp = this.props.stat.value.toString();\r\n    };\r\n\r\n    constructor(props: StatProps) {\r\n        super(props);\r\n        this.valueTemp = props.stat.value.toString();\r\n    }\r\n\r\n    render() {\r\n        const { stat, errors, onDelete } = this.props;\r\n        return (\r\n            <div className=\"defCount tag is-info\">\r\n                <input\r\n                    id={`defCount-def-${stat.id}`}\r\n                    placeholder=\"thingDef\"\r\n                    value={stat.def}\r\n                    onChange={(e) => (stat.def = e.target.value)}\r\n                    style={{\r\n                        width: stat.def\r\n                            ? `calc( ${stat.def.length}ch + 15px )`\r\n                            : `calc( ${\"thingDef\".length}ch + 15px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: !stat.def,\r\n                        error: errors?.def,\r\n                    })}\r\n                    list=\"stats-list\"\r\n                />\r\n                =\r\n                <input\r\n                    id={`defCount-count-${stat.id}`}\r\n                    value={this.valueTemp}\r\n                    onChange={this.updateValue}\r\n                    onBlur={this.applyValue}\r\n                    style={{\r\n                        width: `calc( ${\r\n                            this.valueTemp.toString().length\r\n                        }ch + 5px )`,\r\n                    }}\r\n                    className={classNames({\r\n                        blank: stat.value === 0,\r\n                        error: errors?.value,\r\n                    })}\r\n                />\r\n                <div className=\"remove\" onClick={() => onDelete(stat.id)}>\r\n                    <DeleteX />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import uniq from \"lodash/uniq\";\r\nimport { action, computed, IObservableArray, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    ActionMeta,\r\n    OptionsType,\r\n    OptionTypeBase,\r\n    ValueType,\r\n} from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { Error } from \"./Error\";\r\nimport Help from \"./Help\";\r\n\r\ninterface StringListProps {\r\n    label: string;\r\n    selected: IObservableArray<string>;\r\n    options: string[];\r\n    defs?: boolean;\r\n    errors?: string[];\r\n    id: string;\r\n    help?: string | React.ReactElement<any, any>;\r\n}\r\n\r\n@observer\r\nexport class StringList extends Component<StringListProps> {\r\n    @computed get options() {\r\n        return this.props.options.map((o) => ({ label: o, value: o }));\r\n    }\r\n\r\n    @observable touched = false;\r\n\r\n    @action\r\n    handleChange = (\r\n        _value: ValueType<OptionTypeBase>,\r\n        meta: ActionMeta<OptionTypeBase>\r\n    ) => {\r\n        const value = _value as OptionsType<OptionTypeBase>;\r\n        const { selected } = this.props;\r\n        this.touched = true;\r\n        switch (meta.action) {\r\n            case \"clear\":\r\n                selected.clear();\r\n                break;\r\n            case \"select-option\":\r\n                selected.push(meta.option!.value);\r\n                break;\r\n            case \"create-option\":\r\n                // new option is not listed in meta,\r\n                // add whatever we don't already have\r\n                // should be one element, but it can't\r\n                // hurt to be safe, right?...\r\n                const newOptions = value.filter(\r\n                    (v) => selected.indexOf(v.value) < 0\r\n                );\r\n                for (const option of newOptions) {\r\n                    selected.push(option.value);\r\n                }\r\n                break;\r\n            case \"pop-value\":\r\n            case \"remove-value\":\r\n                const index = selected.indexOf(meta.removedValue!.value);\r\n                if (index >= 0) {\r\n                    selected.splice(index, 1);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    render() {\r\n        const { label, selected, id, errors, help } = this.props;\r\n        const msgs = Array.isArray(errors) ? errors : [errors];\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label flex\" htmlFor={id}>\r\n                    {label}\r\n                    {help && <Help title={help} />}\r\n                </label>\r\n                <CreatableSelect\r\n                    id={id}\r\n                    isMulti\r\n                    onChange={this.handleChange}\r\n                    onBlur={() => (this.touched = true)}\r\n                    options={this.options}\r\n                    value={selected.map((cat) => ({\r\n                        label: cat,\r\n                        value: cat,\r\n                    }))}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\" \"\r\n                />\r\n                {errors &&\r\n                    uniq(msgs).map((error, index) => (\r\n                        <Error\r\n                            touched={this.touched}\r\n                            error={error}\r\n                            key={index}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, computed, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { ValueType } from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { Error } from \"./Error\";\r\nimport Help from \"./Help\";\r\n\r\ninterface StringWithDefaultProps {\r\n    label: string;\r\n    selected: string;\r\n    options: string[];\r\n    error?: string;\r\n    id: string;\r\n    noneOption?: boolean;\r\n    help?: string | React.ReactElement<any, any>;\r\n    updateSelected: (value: string) => void;\r\n}\r\n\r\n@observer\r\nexport class StringWithDefaults extends Component<StringWithDefaultProps> {\r\n    @observable touched = false;\r\n\r\n    @computed get selectedOption(): option | undefined {\r\n        const { selected } = this.props;\r\n        if (selected) {\r\n            return {\r\n                label: selected,\r\n                value: selected,\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    @computed get options(): option[] {\r\n        const opts = this.props.options.map((o) => ({ value: o, label: o }));\r\n        if (this.props.noneOption) opts.push({ value: \"\", label: \"<None>\" });\r\n        return opts;\r\n    }\r\n\r\n    @action onChange = (value: ValueType<option>) => {\r\n        this.touched = true;\r\n        this.props.updateSelected((value as option).value);\r\n    };\r\n\r\n    render() {\r\n        const { label, id, error, help } = this.props;\r\n        return (\r\n            <div className=\"field\">\r\n                <label className=\"label flex\" htmlFor={id}>\r\n                    {label}\r\n                    {help && <Help title={help} />}\r\n                </label>\r\n                <CreatableSelect\r\n                    id={id}\r\n                    onChange={this.onChange}\r\n                    onBlur={() => (this.touched = true)}\r\n                    options={this.options}\r\n                    value={this.selectedOption}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\" \"\r\n                />\r\n                <Error touched={this.touched} error={error} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    stuffCategories,\r\n    researchDefs,\r\n    burnedFloorDefs,\r\n    affordances,\r\n    tags,\r\n} from \"../data/defs\";\r\nimport { edgeTypes } from \"../data/enums\";\r\nimport CostList from \"./CostList\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport StatList from \"./StatList\";\r\nimport { StringList } from \"./StringList\";\r\nimport Input from \"./Input\";\r\nimport { StringWithDefaults } from \"./StringWithDefaults\";\r\nimport Help from \"./Help\";\r\n\r\n@observer\r\nexport class FloorSettings_Detail extends Component<FloorProps> {\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { validationErrors: errors } = floor;\r\n        return (\r\n            <div className=\"settings-detail\">\r\n                <StringList\r\n                    label=\"Stuff Categories\"\r\n                    id={`${floor.id}-stuff-categories`}\r\n                    options={stuffCategories}\r\n                    selected={floor.stuffCategories}\r\n                    errors={errors.stuffCategories}\r\n                    help=\"Stuff categories that this floor can be made of. Vanilla categories are listed as options, categories added by other mods can be added by typing the defName.\"\r\n                ></StringList>\r\n                <Input\r\n                    label=\"Stuff Cost\"\r\n                    value={floor.stuffcost}\r\n                    id={`${floor.id}-stuff-cost`}\r\n                    onChange={(e) =>\r\n                        (floor.stuffcost = parseInt(e.target.value) || 0)\r\n                    }\r\n                    error={errors.stuffcost}\r\n                    help=\"Amount of stuff needed to build the floor. The cost is automatically increased (x20) for 'precious' materials such as gold, silver and jade.\"\r\n                />\r\n                <CostList\r\n                    {...floor}\r\n                    errors={floor.validationErrors.costs}\r\n                    help=\"Other ingredients needed to build the floor, for example extra components or steel. DefNames of vanilla items are listed as options, you can use modded items by typing in the correct defName.\"\r\n                ></CostList>\r\n                <StatList\r\n                    {...floor}\r\n                    errors={floor.validationErrors.stats}\r\n                    help={\r\n                        <div>\r\n                            <b>Stats used and/or provided by this floor.</b>\r\n                            <br />\r\n                            Note that while all vanilla in-game stats are listed\r\n                            as options, only a small subset is actually used in\r\n                            the game that I'm aware off;\r\n                            <ul>\r\n                                <li>Beauty</li>\r\n                                <li>CostToBuild</li>\r\n                                <li>Flammability</li>\r\n                                <li>Cleanliness</li>\r\n                            </ul>\r\n                            <br />\r\n                            <b>Interactions with Stuff</b>\r\n                            <br />\r\n                            The stats given for the floor are further affected\r\n                            by the particular stuff used. For example, all types\r\n                            of stone have a <i>considerably higher</i>{\" \"}\r\n                            CostToBuild offset. This means that the CostToBuild\r\n                            stat on the floor should probably be lower, to\r\n                            balance it with other types of floors.\r\n                        </div>\r\n                    }\r\n                ></StatList>\r\n                <StringList\r\n                    label=\"Research Prerequisites\"\r\n                    id={`${floor.id}-research-prerequisites`}\r\n                    options={researchDefs.map((d) => d.def)}\r\n                    selected={floor.researchPrerequisites}\r\n                    errors={errors.researchPrerequisites}\r\n                    help=\"Research that needs to be completed before this floor can be built. Type in a defName to add modded research.\"\r\n                ></StringList>\r\n                <StringWithDefaults\r\n                    label=\"Burned Def\"\r\n                    id={`${floor.id}-burned-def`}\r\n                    selected={floor.burnedDef || \"\"}\r\n                    options={burnedFloorDefs}\r\n                    error={errors.burnedDef}\r\n                    updateSelected={(value) => (floor.burnedDef = value)}\r\n                    help=\"Remains left after a floor burns. Only relevant for floors that have a Flammability > 0\"\r\n                />\r\n                <div className=\"field\">\r\n                    <label\r\n                        htmlFor={`${floor.id}-edge-type`}\r\n                        className=\"label flex\"\r\n                    >\r\n                        Edge Type\r\n                        <Help>\r\n                            <span>\r\n                                Edge type determines the way different floors\r\n                                blend into eachother.\r\n                                <br /> Should be set to 'Hard' for most types of\r\n                                floor, but e.g. dirt-based floors might benefit\r\n                                from a softer transition.\r\n                            </span>\r\n                        </Help>\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-edge-type`}\r\n                        defaultValue={{\r\n                            label: floor.edgeType as string,\r\n                            value: floor.edgeType as string,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            floor.edgeType = option.value as EdgeType;\r\n                        }}\r\n                        options={edgeTypes.map((edge) => ({\r\n                            label: edge,\r\n                            value: edge,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n                <StringWithDefaults\r\n                    label=\"Affordance Needed\"\r\n                    id={`${floor.id}-affordance-needed`}\r\n                    selected={floor.terrainAffordanceNeeded}\r\n                    options={affordances}\r\n                    updateSelected={(value) =>\r\n                        (floor.terrainAffordanceNeeded = value as Affordance)\r\n                    }\r\n                    error={errors.terrainAffordanceNeeded}\r\n                    help=\"What type of ground can this floor can be built on. Heavy equates to solid ground, medium and light to increasingly soft, unstable and/or muddy ground.\"\r\n                />\r\n                <StringList\r\n                    label=\"Affordances\"\r\n                    id={`${floor.id}-affordances`}\r\n                    options={affordances}\r\n                    selected={floor.affordances}\r\n                    errors={errors.affordances}\r\n                    help=\"What type of things can this floor support? See also 'Affordance Needed'\"\r\n                />\r\n                <StringList\r\n                    label=\"Tags\"\r\n                    id={`${floor.id}-tags`}\r\n                    options={tags}\r\n                    selected={floor.tags}\r\n                    errors={errors.tags}\r\n                    help=\"Tags are used to determine what pawns see as a floor 'Floor', or what royals consider good enough 'FineFloor'. Custom tags can also be entered, which may be useful for other mods.\"\r\n                ></StringList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { simpleMode_materials, simpleMode_type } from \"../data/defaults\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport Help from \"./Help\";\r\n\r\nexport interface SimpleSettings {\r\n    material: Material;\r\n    type: Type;\r\n}\r\n\r\nexport interface SimpleSettingsProps extends FloorProps {\r\n    settings: SimpleSettings;\r\n    setMaterial: (mat: Material) => void;\r\n    setType: (type: Type) => void;\r\n}\r\n\r\n@observer\r\nexport class FloorSettings_Simple extends Component<SimpleSettingsProps> {\r\n    render() {\r\n        const { settings, floor, setMaterial, setType } = this.props;\r\n        return (\r\n            <div className=\"settings-simple\">\r\n                <div className=\"field\">\r\n                    <label\r\n                        htmlFor={`${floor.id}-simple-material`}\r\n                        className=\"label flex\"\r\n                    >\r\n                        Material\r\n                        <Help title=\"Main flooring material. Individual floors will be generated for all of the types of this material.\"></Help>\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-simple-material`}\r\n                        value={{\r\n                            label: settings.material,\r\n                            value: settings.material,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            setMaterial(option.value as Material);\r\n                        }}\r\n                        options={simpleMode_materials.map((mat) => ({\r\n                            label: mat,\r\n                            value: mat,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label\r\n                        htmlFor={`${floor.id}-simple-type`}\r\n                        className=\"label flex\"\r\n                    >\r\n                        Beauty\r\n                        <Help title=\"Beauty determines the beauty, material cost and amount of effort needed to build the floor. Royal floors are the only floors considered good enough by u̶s̶e̶l̶e̶s̶s̶ ̶g̶i̶t̶s  esteemed empire officials\"></Help>\r\n                    </label>\r\n                    <Select\r\n                        id={`${floor.id}-simple-type`}\r\n                        defaultValue={{\r\n                            label: settings.type,\r\n                            value: settings.type,\r\n                        }}\r\n                        onChange={(_option) => {\r\n                            const option = _option as option;\r\n                            setType(option.value as Type);\r\n                        }}\r\n                        options={simpleMode_type.map((type) => ({\r\n                            label: type,\r\n                            value: type,\r\n                        }))}\r\n                        className=\"react-select\"\r\n                        classNamePrefix=\" \"\r\n                    ></Select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { action, observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport { FloorSettings_Detail } from \"./FloorSettings_Detail\";\r\nimport { FloorSettings_Simple, SimpleSettings } from \"./FloorSettings_Simple\";\r\nimport Help from \"./Help\";\r\n\r\n@observer\r\nexport class FloorSettings extends Component<FloorProps> {\r\n    @observable detailed: boolean = false;\r\n    @observable simple: SimpleSettings = {\r\n        material: \"Stone\",\r\n        type: \"Pretty\",\r\n    };\r\n\r\n    @action toggleDetailed = () => {\r\n        this.detailed = !this.detailed;\r\n\r\n        if (!this.detailed)\r\n            this.props.floor.resetFloor(this.simple.material, this.simple.type);\r\n    };\r\n\r\n    @action setMaterial = (material: Material) => {\r\n        this.simple.material = material;\r\n        this.props.floor.resetFloor(material, this.simple.type);\r\n    };\r\n\r\n    @action setType = (type: Type) => {\r\n        this.simple.type = type;\r\n        this.props.floor.resetFloor(this.simple.material, type);\r\n    };\r\n\r\n    render() {\r\n        const { floor } = this.props;\r\n        const settings = this.detailed ? (\r\n            /* eslint-disable react/jsx-pascal-case */\r\n            <FloorSettings_Detail floor={floor}></FloorSettings_Detail>\r\n        ) : (\r\n            <FloorSettings_Simple\r\n                floor={floor}\r\n                settings={this.simple}\r\n                setMaterial={this.setMaterial}\r\n                setType={this.setType}\r\n            ></FloorSettings_Simple>\r\n            /* eslint-enable react/jsx-pascal-case */\r\n        );\r\n\r\n        return (\r\n            <div className=\"settings\">\r\n                <div className=\"field flex\">\r\n                    <input\r\n                        id={`${floor.id}-settings-detailed`}\r\n                        type=\"checkbox\"\r\n                        className=\"switch is-rounded is-outlined is-small\"\r\n                        checked={this.detailed}\r\n                        onChange={this.toggleDetailed}\r\n                    />\r\n                    <label htmlFor={`${floor.id}-settings-detailed`}>\r\n                        advanced mode\r\n                    </label>\r\n                    <Help>\r\n                        <div>\r\n                            <b>Basic Mode:</b>\r\n                            <p>\r\n                                You can change the main material (stuff\r\n                                category) and choose a beauty level. This sets\r\n                                values for material costs, beauty amounts and\r\n                                build times that are (roughly) balanced with\r\n                                those in the vanilla game and royalty expansion.\r\n                            </p>\r\n                            <br />\r\n                            <b>Advanced Mode:</b>\r\n                            <p>\r\n                                Advanced mode lets you pick, choose and tune all\r\n                                the settings. See individual settings for more\r\n                                details.\r\n                            </p>\r\n                        </div>\r\n                    </Help>\r\n                </div>\r\n                {settings}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { FloorProps } from \"./Floor\";\r\nimport Input from \"./Input\";\r\n\r\n@observer\r\nexport class FloorBasics extends Component<FloorProps> {\r\n    render() {\r\n        const { floor } = this.props;\r\n        const { validationErrors: errors } = floor;\r\n\r\n        return (\r\n            <>\r\n                <Input\r\n                    label=\"Label\"\r\n                    error={errors.label}\r\n                    id={`${floor.id}-label`}\r\n                    value={floor.label}\r\n                    onChange={(e) => (floor.label = e.target.value)}\r\n                    help=\"Label of the floor. Note that in-game floors will get their stuff prepended, e.g. 'Tiles' will become 'Jade Tiles', and so forth.\"\r\n                />\r\n                <Input\r\n                    label=\"Description\"\r\n                    id={`${floor.id}-desc`}\r\n                    value={floor.description}\r\n                    onChange={(e) => (floor.description = e.target.value)}\r\n                    error={errors.description}\r\n                    element={<textarea className=\"textarea\" />}\r\n                    help=\"Description of the floor as shown in the game's info pages and on the architect tab.\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { action, computed, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport {\n    errorArray,\n    sanitizeString,\n    unwrapErrors,\n    ValidationErrors,\n} from \"../utils\";\nimport TextureComponent, { Texture, TextureSchema } from \"./Texture\";\nimport {\n    simpleMode_stuffCost,\n    simpleMode_stats,\n    simpleMode_stuffCategories,\n    simpleMode_researchPrerequisites,\n    simpleMode_tags,\n    simpleMode_burnedTerrain,\n} from \"../data/defaults\";\nimport { mod } from \"../StuffedFloorModGenerator\";\nimport * as yup from \"yup\";\nimport { FloorSettings } from \"./FloorSettings\";\nimport { FloorBasics } from \"./FloorBasics\";\nimport random from \"lodash/random\";\nimport { stuffs } from \"../data/defs\";\nimport flatten from \"lodash/flatten\";\n\nexport interface FloorProps {\n    floor: Floor;\n}\n\nexport const DefSchema = yup\n    .string()\n    .label(\"def\")\n    .trim()\n    .matches(\n        // eslint-disable-next-line no-useless-escape\n        /^[a-z]+[a-z0-9_\\.]*$/i,\n        \"def must start with a letter, and may not contain spaces or special characters other than '_'\"\n    );\nexport const CostSchema = yup.object().shape({\n    def: DefSchema.required(),\n    value: yup.number().label(\"cost\").required().moreThan(0),\n});\nexport const StatSchema = yup.object().shape({\n    def: DefSchema.required(),\n    value: yup.number().label(\"stat\").required(),\n});\n\nexport const FloorSchema = yup.object().shape({\n    label: yup.string().required(),\n    description: yup.string().required(),\n    texture: TextureSchema,\n    researchPrerequisites: yup.array().of(DefSchema.required()),\n    stuffCost: yup.number().integer().positive(),\n    stuffCategories: yup.array().required().of(DefSchema.required()),\n    costs: yup.array().of(CostSchema),\n    stats: yup.array().of(StatSchema),\n    affordances: yup.array().required().min(1).of(DefSchema.required()),\n    tags: yup.array().of(yup.string()),\n    burnedDef: DefSchema,\n    terrainAffordanceNeeded: DefSchema,\n});\n\nexport class Floor {\n    static floorCount = 0;\n\n    id: string;\n    @computed get defName(): string {\n        return sanitizeString(`StuffedFloor_${mod.name}_${this.label}`);\n    }\n    @observable label: string = \"\";\n    @observable description: string = \"\";\n    @observable texture?: Texture;\n    @observable edgeType: EdgeType = \"Hard\";\n    @observable stuffCategories = observable.array<string>([]);\n    @computed get stuffs() {\n        return flatten(this.stuffCategories.map((cat) => stuffs[cat]));\n    }\n    @observable stuffcost: number = 0;\n    @observable costs: defValue[] = [];\n    @observable stats: defValue[] = [];\n    @observable affordances = observable.array<string>([\n        \"Light\",\n        \"Medium\",\n        \"Heavy\",\n    ]);\n    @observable tags = observable.array<string>([\"Floor\"]);\n    @observable terrainAffordanceNeeded: Affordance = \"Heavy\";\n    @observable researchPrerequisites = observable.array<string>([]);\n    @observable burnedDef?: string;\n\n    @action resetFloor = (material: Material, type: Type) => {\n        this.costs = [];\n        this.affordances.replace([\"Light\", \"Medium\", \"Heavy\"]);\n        this.terrainAffordanceNeeded = \"Heavy\";\n        this.edgeType = \"Hard\";\n        this.stuffCategories.replace(simpleMode_stuffCategories[material]);\n        this.researchPrerequisites.replace(\n            simpleMode_researchPrerequisites[material][type]\n        );\n        this.burnedDef = simpleMode_burnedTerrain[material];\n        this.stats = simpleMode_stats[material][type];\n        this.stuffcost = simpleMode_stuffCost[type];\n        this.tags.replace(simpleMode_tags[type]);\n    };\n\n    @computed get validationErrors(): ValidationErrors<Floor> {\n        console.log(\"updating errors\");\n        const { id, defName, stuffs, ...floor } = this;\n        // FloorSchema.validateSync(floor);\n        const errors = unwrapErrors({ ...floor }, FloorSchema);\n        console.log({ floor, errors, array: errorArray(errors) });\n        return errors;\n    }\n    constructor() {\n        this.id = `floor-${Floor.floorCount++}`;\n        this.resetFloor(\"Stone\", \"Pretty\");\n    }\n}\n\nexport interface TextureLoaderProps {\n    setTexture: (texture: Blob) => void;\n}\n\n@observer\nexport default class FloorComponent extends Component<FloorProps> {\n    // constructor(props: FloorProps) {\n    //     super(props);\n    //     // this.fetchKitten();\n    // }\n\n    async fetchKitten() {\n        try {\n            const result = await fetch(\n                `https://placekitten.com/${random(200, 500)}/${random(\n                    200,\n                    500\n                )}`\n            );\n            const blob = await result.blob();\n            this.props.floor.texture = new Texture(blob);\n        } catch (err) {\n            console.error(`Error fetching kitten`);\n        }\n    }\n\n    render() {\n        const floor = this.props.floor;\n        return (\n            <div className=\"floor\">\n                <div className=\"top columns\">\n                    <div className=\"basics column is-half\">\n                        <FloorBasics floor={floor}></FloorBasics>\n                        <FloorSettings floor={floor}></FloorSettings>\n                    </div>\n                    <div className=\"texture column is-half\">\n                        <TextureComponent floor={floor}></TextureComponent>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import { action } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { FloorStore } from \"../StuffedFloorModGenerator\";\r\nimport { DeleteX } from \"./DeleteX\";\r\nimport { Floor } from \"./Floor\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n// bulma requires an 'a' element for tab tags,\r\n// which can't have a link.\r\ninterface TabManagerProps {\r\n    floors: FloorStore;\r\n    onTabChange: (tab: string) => void;\r\n    tab: string;\r\n}\r\n@observer\r\nexport default class TabManager extends Component<TabManagerProps> {\r\n    @action addFloor = () => {\r\n        const { floors, onTabChange } = this.props;\r\n        const floor = new Floor();\r\n        floors.addFloor(floor);\r\n        onTabChange(floor.id);\r\n    };\r\n\r\n    render() {\r\n        const { floors, onTabChange, tab } = this.props;\r\n\r\n        return (\r\n            <div className=\"tabs is-boxed\">\r\n                <ul>\r\n                    <li className={tab === \"about\" ? \"is-active is-info\" : \"\"}>\r\n                        <a onClick={() => onTabChange(\"about\")}>\r\n                            <InfoIcon />\r\n                        </a>\r\n                    </li>\r\n                    <li className={tab === \"mod\" ? \"is-active\" : \"\"}>\r\n                        <a onClick={() => onTabChange(\"mod\")}>Mod</a>\r\n                    </li>\r\n                    {floors.floors.map((floor) => (\r\n                        <li\r\n                            key={floor.id}\r\n                            className={tab === floor.id ? \"is-active\" : \"\"}\r\n                        >\r\n                            <a onClick={() => onTabChange(floor.id)}>\r\n                                {floor.label || floor.id}\r\n                                {tab === floor.id && (\r\n                                    <DeleteX\r\n                                        className=\"delete-x\"\r\n                                        onClick={() =>\r\n                                            floors.removeFloor(floor.id)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                    <li className=\"create-floor-button\">\r\n                        <a onClick={this.addFloor}>+ Add Floor</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ninterface AboutProps {\r\n    changeTab: (tab: string) => void;\r\n}\r\n\r\nexport class About extends Component<AboutProps> {\r\n    render() {\r\n        return (\r\n            <div className=\"about content\">\r\n                <h1 className=\"title is-3\">Stuffed Floor Generator</h1>\r\n                <h2 className=\"title is-5\">What is this?</h2>\r\n                <p>\r\n                    This is a webapp that lets you create your own stuffed\r\n                    floors for RimWorld quickly and easily.\r\n                </p>\r\n                <h2 className=\"title is-5\">How does it work?</h2>\r\n                <p>\r\n                    You find a texture, and put it into the app. You can then\r\n                    finetune the texture to make it look great. Give it a name\r\n                    and description, and the app takes care of filling out the\r\n                    details and generating all the XML code.\r\n                </p>\r\n                <p>\r\n                    You can also take full control, and tailor your floors to\r\n                    your precise needs.\r\n                </p>\r\n                <p className=\"call-to-action\">Just go give it a try!</p>\r\n                <h2 className=\"title is-5\">\r\n                    Can I share the floors on the Workshop?\r\n                </h2>\r\n                <p>\r\n                    Yes, absolutely! I've even included a preview generator so\r\n                    that you'll have a decent preview without any additional\r\n                    effort.\r\n                </p>\r\n                <p>\r\n                    There's one big caveat: <b>you have to respect copyright</b>\r\n                    .\r\n                </p>\r\n                <p>\r\n                    By using this app, you agree that you understand that you're\r\n                    not allowed to distribute copyrighted images as your own\r\n                    textures, and that I'm not responsible for anything you\r\n                    share that was created with this app.\r\n                </p>\r\n                <button\r\n                    className=\"button is-large is-primary\"\r\n                    onClick={() => this.props.changeTab(\"mod\")}\r\n                >\r\n                    Lets get started!\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport DownloadButton from \"./components/DownloadButton\";\nimport { observer } from \"mobx-react\";\nimport ModComponent, { Mod } from \"./components/Mod\";\nimport { action, IObservableValue, observable } from \"mobx\";\nimport FloorComponent, { Floor } from \"./components/Floor\";\nimport \"./styles/style.scss\";\nimport TabManager from \"./components/TabManager\";\nimport { buildingMaterials, stats } from \"./data/defs\";\nimport { About } from \"./components/About\";\n\nexport class FloorStore {\n    @observable floors = observable.array<Floor>([]);\n    @action addFloor(floor: Floor): void {\n        this.floors.push(floor);\n    }\n    @action removeFloor(id: string): void {\n        const floor = this.floors.find((f) => f.id === id);\n        if (floor) this.floors.remove(floor);\n    }\n\n    constructor() {\n        this.floors.push(new Floor());\n    }\n}\n\nexport const mod = new Mod();\nexport const floors = new FloorStore();\nexport const submitting = observable.box(false);\n\n@observer\nexport default class StuffedFloorModGenerator extends Component {\n    @observable mod: Mod = mod;\n    @observable floors: FloorStore = floors;\n    @observable tab: string = \"about\";\n    @observable submitting: IObservableValue<boolean> = submitting;\n\n    @action changeTab = (tab: string) => {\n        this.tab = tab;\n    };\n\n    render() {\n        const floor = this.floors.floors.find((f) => f.id === this.tab);\n        return (\n            <div id=\"main\" className=\"container\">\n                <div className=\"box\">\n                    <TabManager\n                        floors={this.floors}\n                        onTabChange={this.changeTab}\n                        tab={this.tab}\n                    ></TabManager>\n                    {this.tab === \"about\" && (\n                        <About changeTab={this.changeTab} />\n                    )}\n                    {this.tab === \"mod\" && (\n                        <ModComponent mod={this.mod}></ModComponent>\n                    )}\n                    {floor && <FloorComponent floor={floor}></FloorComponent>}\n                </div>\n\n                <datalist id=\"building-materials-list\">\n                    {buildingMaterials.map((m, i) => (\n                        <option key={i}>{m.def}</option>\n                    ))}\n                </datalist>\n\n                <datalist id=\"stats-list\">\n                    {stats.map((s, i) => (\n                        <option key={i}>{s.def}</option>\n                    ))}\n                </datalist>\n\n                {(this.tab === \"mod\" || floor) && (\n                    <DownloadButton\n                        about={this.mod}\n                        floors={this.floors}\n                    ></DownloadButton>\n                )}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport StuffedFloorGenerator from \"./StuffedFloorModGenerator\";\n\nReactDOM.render(\n    // <React.StrictMode>\n    <StuffedFloorGenerator />,\n    // </React.StrictMode>\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}